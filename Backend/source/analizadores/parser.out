Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    concat
    return

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> ENTRADAS
Rule 2     ENTRADAS -> ENTRADAS ENTRADA
Rule 3     ENTRADAS -> ENTRADA
Rule 4     ENTRADA -> IMPRIMIR puntoYcoma
Rule 5     ENTRADA -> IF puntoYcoma
Rule 6     ENTRADA -> WHILE puntoYcoma
Rule 7     ENTRADA -> BREAK
Rule 8     ENTRADA -> CONTINUE
Rule 9     ENTRADA -> FOR puntoYcoma
Rule 10    ENTRADA -> INCREMENTO puntoYcoma
Rule 11    ENTRADA -> DECREMENTO puntoYcoma
Rule 12    ENTRADA -> FUNC puntoYcoma
Rule 13    ENTRADA -> LLAMADA_FUNCION puntoYcoma
Rule 14    FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 15    FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 16    PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC
Rule 17    PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC
Rule 18    PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO
Rule 19    PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra
Rule 20    LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
Rule 21    LLAMADA_FUNCION -> id p_Abre p_Cierra
Rule 22    PARAMETROS_LLAMA_FUNC -> EXPRESION
Rule 23    PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION
Rule 24    FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 25    FORITERADOR -> ASIGNACION
Rule 26    FORITERADOR -> INCREMENTO
Rule 27    FORITERADOR -> DECREMENTO
Rule 28    BREAK -> break puntoYcoma
Rule 29    CONTINUE -> continue puntoYcoma
Rule 30    WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 31    IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
Rule 32    COMPLEMENTO_IF -> else IF
Rule 33    COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra
Rule 34    COMPLEMENTO_IF -> <empty>
Rule 35    ENTRADA -> DECLARACION puntoYcoma
Rule 36    DECLARACION -> let id igual EXPRESION
Rule 37    DECLARACION -> let id dosPuntos TIPO igual EXPRESION
Rule 38    DECLARACION -> let id
Rule 39    DECLARACION -> let id dosPuntos TIPO
Rule 40    DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
Rule 41    DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra
Rule 42    ENTRADA -> ASIGNACION puntoYcoma
Rule 43    ASIGNACION -> id igual EXPRESION
Rule 44    ASIGNACION -> id LISTAINDICES igual EXPRESION
Rule 45    INCREMENTO -> id incremento
Rule 46    DECREMENTO -> id decremento
Rule 47    IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra
Rule 48    LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION
Rule 49    LISTAEXPRESIONES -> EXPRESION
Rule 50    LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra
Rule 51    LISTAINDICES -> c_Abre EXPRESION c_Cierra
Rule 52    EXPRESION -> EXPRESION suma EXPRESION
Rule 53    EXPRESION -> EXPRESION resta EXPRESION
Rule 54    EXPRESION -> EXPRESION multiplicacion EXPRESION
Rule 55    EXPRESION -> EXPRESION division EXPRESION
Rule 56    EXPRESION -> EXPRESION potencia EXPRESION
Rule 57    EXPRESION -> EXPRESION modulo EXPRESION
Rule 58    EXPRESION -> resta EXPRESION
Rule 59    EXPRESION -> EXPRESION and EXPRESION
Rule 60    EXPRESION -> EXPRESION or EXPRESION
Rule 61    EXPRESION -> not EXPRESION
Rule 62    EXPRESION -> EXPRESION mayor EXPRESION
Rule 63    EXPRESION -> EXPRESION mayorigual EXPRESION
Rule 64    EXPRESION -> EXPRESION menor EXPRESION
Rule 65    EXPRESION -> EXPRESION menorigual EXPRESION
Rule 66    EXPRESION -> EXPRESION igualacion EXPRESION
Rule 67    EXPRESION -> EXPRESION diferente EXPRESION
Rule 68    EXPRESION -> FUNCION_TOFIXED
Rule 69    EXPRESION -> FUNCION_TOEXPONENTIAL
Rule 70    EXPRESION -> FUNCION_TOSTRING
Rule 71    EXPRESION -> FUNCION_TOLOWERCASE
Rule 72    EXPRESION -> FUNCION_TOUPPERCASE
Rule 73    EXPRESION -> FUNCION_SPLIT
Rule 74    FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra
Rule 75    FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra
Rule 76    FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra
Rule 77    FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra
Rule 78    FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra
Rule 79    FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra
Rule 80    EXPRESION -> cadena
Rule 81    EXPRESION -> numero
Rule 82    EXPRESION -> true
Rule 83    EXPRESION -> false
Rule 84    EXPRESION -> null
Rule 85    EXPRESION -> id
Rule 86    EXPRESION -> id LISTAINDICES
Rule 87    EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra
Rule 88    TIPO -> number
Rule 89    TIPO -> string
Rule 90    TIPO -> boolean
Rule 91    TIPO -> any

Terminals, with rules where they appear

and                  : 59
any                  : 91
boolean              : 90
break                : 28
c_Abre               : 19 40 41 50 51 87
c_Cierra             : 19 40 41 50 51 87
cadena               : 80
coma                 : 16 23 48
concat               : 
console              : 47
continue             : 29
decremento           : 46
diferente            : 67
division             : 55
dosPuntos            : 18 19 37 39 40 41
else                 : 32 33
error                : 
false                : 83
fn                   : 14 15
for                  : 24
id                   : 14 15 18 19 20 21 36 37 38 39 40 41 43 44 45 46 74 75 76 77 78 79 85 86
if                   : 31
igual                : 36 37 40 43 44
igualacion           : 66
incremento           : 45
let                  : 36 37 38 39 40 41
llave_Abre           : 14 15 24 30 31 33
llave_Cierra         : 14 15 24 30 31 33
log                  : 47
mayor                : 62
mayorigual           : 63
menor                : 64
menorigual           : 65
modulo               : 57
multiplicacion       : 54
not                  : 61
null                 : 84
number               : 88
numero               : 81
or                   : 60
p_Abre               : 14 15 20 21 24 30 31 47 74 75 76 77 78 79
p_Cierra             : 14 15 20 21 24 30 31 47 74 75 76 77 78 79
potencia             : 56
punto                : 47 74 75 76 77 78 79
puntoYcoma           : 4 5 6 9 10 11 12 13 24 24 28 29 35 42
resta                : 53 58
return               : 
split                : 79
string               : 89
suma                 : 52
toExponential        : 75
toFixed              : 74
toLowerCase          : 77
toString             : 76
toUpperCase          : 78
true                 : 82
while                : 30

Nonterminals, with rules where they appear

ASIGNACION           : 25 42
BREAK                : 7
COMPLEMENTO_IF       : 31
CONTINUE             : 8
DECLARACION          : 24 35
DECREMENTO           : 11 27
ENTRADA              : 2 3
ENTRADAS             : 1 2 14 15 24 30 31 33
EXPRESION            : 22 23 24 30 31 36 37 40 43 44 48 49 50 51 52 52 53 53 54 54 55 55 56 56 57 57 58 59 59 60 60 61 62 62 63 63 64 64 65 65 66 66 67 67 74 75 79
FOR                  : 9
FORITERADOR          : 24
FUNC                 : 12
FUNCION_SPLIT        : 73
FUNCION_TOEXPONENTIAL : 69
FUNCION_TOFIXED      : 68
FUNCION_TOLOWERCASE  : 71
FUNCION_TOSTRING     : 70
FUNCION_TOUPPERCASE  : 72
IF                   : 5 32
IMPRIMIR             : 4
INCREMENTO           : 10 26
INICIO               : 0
LISTAEXPRESIONES     : 47 48 87
LISTAINDICES         : 44 50 86
LLAMADA_FUNCION      : 13
PARAMETROS_DECLA_FUNC : 14 16
PARAMETROS_LLAMA_FUNC : 20 23
PARAMETRO_DECLA_FUNC : 16 17
TIPO                 : 18 19 37 39 40 41
WHILE                : 6

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . ENTRADAS
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    INICIO                         shift and go to state 1
    ENTRADAS                       shift and go to state 2
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> ENTRADAS .
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    $end            reduce using rule 1 (INICIO -> ENTRADAS .)
    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADA                        shift and go to state 25
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 3

    (3) ENTRADAS -> ENTRADA .

    console         reduce using rule 3 (ENTRADAS -> ENTRADA .)
    if              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    while           reduce using rule 3 (ENTRADAS -> ENTRADA .)
    break           reduce using rule 3 (ENTRADAS -> ENTRADA .)
    continue        reduce using rule 3 (ENTRADAS -> ENTRADA .)
    for             reduce using rule 3 (ENTRADAS -> ENTRADA .)
    id              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    fn              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    let             reduce using rule 3 (ENTRADAS -> ENTRADA .)
    $end            reduce using rule 3 (ENTRADAS -> ENTRADA .)
    llave_Cierra    reduce using rule 3 (ENTRADAS -> ENTRADA .)


state 4

    (4) ENTRADA -> IMPRIMIR . puntoYcoma

    puntoYcoma      shift and go to state 26


state 5

    (5) ENTRADA -> IF . puntoYcoma

    puntoYcoma      shift and go to state 27


state 6

    (6) ENTRADA -> WHILE . puntoYcoma

    puntoYcoma      shift and go to state 28


state 7

    (7) ENTRADA -> BREAK .

    console         reduce using rule 7 (ENTRADA -> BREAK .)
    if              reduce using rule 7 (ENTRADA -> BREAK .)
    while           reduce using rule 7 (ENTRADA -> BREAK .)
    break           reduce using rule 7 (ENTRADA -> BREAK .)
    continue        reduce using rule 7 (ENTRADA -> BREAK .)
    for             reduce using rule 7 (ENTRADA -> BREAK .)
    id              reduce using rule 7 (ENTRADA -> BREAK .)
    fn              reduce using rule 7 (ENTRADA -> BREAK .)
    let             reduce using rule 7 (ENTRADA -> BREAK .)
    $end            reduce using rule 7 (ENTRADA -> BREAK .)
    llave_Cierra    reduce using rule 7 (ENTRADA -> BREAK .)


state 8

    (8) ENTRADA -> CONTINUE .

    console         reduce using rule 8 (ENTRADA -> CONTINUE .)
    if              reduce using rule 8 (ENTRADA -> CONTINUE .)
    while           reduce using rule 8 (ENTRADA -> CONTINUE .)
    break           reduce using rule 8 (ENTRADA -> CONTINUE .)
    continue        reduce using rule 8 (ENTRADA -> CONTINUE .)
    for             reduce using rule 8 (ENTRADA -> CONTINUE .)
    id              reduce using rule 8 (ENTRADA -> CONTINUE .)
    fn              reduce using rule 8 (ENTRADA -> CONTINUE .)
    let             reduce using rule 8 (ENTRADA -> CONTINUE .)
    $end            reduce using rule 8 (ENTRADA -> CONTINUE .)
    llave_Cierra    reduce using rule 8 (ENTRADA -> CONTINUE .)


state 9

    (9) ENTRADA -> FOR . puntoYcoma

    puntoYcoma      shift and go to state 29


state 10

    (10) ENTRADA -> INCREMENTO . puntoYcoma

    puntoYcoma      shift and go to state 30


state 11

    (11) ENTRADA -> DECREMENTO . puntoYcoma

    puntoYcoma      shift and go to state 31


state 12

    (12) ENTRADA -> FUNC . puntoYcoma

    puntoYcoma      shift and go to state 32


state 13

    (13) ENTRADA -> LLAMADA_FUNCION . puntoYcoma

    puntoYcoma      shift and go to state 33


state 14

    (35) ENTRADA -> DECLARACION . puntoYcoma

    puntoYcoma      shift and go to state 34


state 15

    (42) ENTRADA -> ASIGNACION . puntoYcoma

    puntoYcoma      shift and go to state 35


state 16

    (47) IMPRIMIR -> console . punto log p_Abre LISTAEXPRESIONES p_Cierra

    punto           shift and go to state 36


state 17

    (31) IF -> if . p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    p_Abre          shift and go to state 37


state 18

    (30) WHILE -> while . p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 38


state 19

    (28) BREAK -> break . puntoYcoma

    puntoYcoma      shift and go to state 39


state 20

    (29) CONTINUE -> continue . puntoYcoma

    puntoYcoma      shift and go to state 40


state 21

    (24) FOR -> for . p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 41


state 22

    (45) INCREMENTO -> id . incremento
    (46) DECREMENTO -> id . decremento
    (20) LLAMADA_FUNCION -> id . p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> id . p_Abre p_Cierra
    (43) ASIGNACION -> id . igual EXPRESION
    (44) ASIGNACION -> id . LISTAINDICES igual EXPRESION
    (50) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (51) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    incremento      shift and go to state 42
    decremento      shift and go to state 43
    p_Abre          shift and go to state 44
    igual           shift and go to state 45
    c_Abre          shift and go to state 47

    LISTAINDICES                   shift and go to state 46

state 23

    (14) FUNC -> fn . id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> fn . id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra

    id              shift and go to state 48


state 24

    (36) DECLARACION -> let . id igual EXPRESION
    (37) DECLARACION -> let . id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> let . id
    (39) DECLARACION -> let . id dosPuntos TIPO
    (40) DECLARACION -> let . id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> let . id dosPuntos TIPO c_Abre c_Cierra

    id              shift and go to state 49


state 25

    (2) ENTRADAS -> ENTRADAS ENTRADA .

    console         reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    if              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    while           reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    break           reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    continue        reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    for             reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    id              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    fn              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    let             reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    $end            reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    llave_Cierra    reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)


state 26

    (4) ENTRADA -> IMPRIMIR puntoYcoma .

    console         reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    if              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    while           reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    break           reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    continue        reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    for             reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    id              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    fn              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    let             reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    $end            reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    llave_Cierra    reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)


state 27

    (5) ENTRADA -> IF puntoYcoma .

    console         reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    if              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    while           reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    break           reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    continue        reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    for             reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    id              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    fn              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    let             reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    $end            reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    llave_Cierra    reduce using rule 5 (ENTRADA -> IF puntoYcoma .)


state 28

    (6) ENTRADA -> WHILE puntoYcoma .

    console         reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    if              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    while           reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    break           reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    continue        reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    for             reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    id              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    fn              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    let             reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    $end            reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    llave_Cierra    reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)


state 29

    (9) ENTRADA -> FOR puntoYcoma .

    console         reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    if              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    while           reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    break           reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    continue        reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    for             reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    id              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    fn              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    let             reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    $end            reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    llave_Cierra    reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)


state 30

    (10) ENTRADA -> INCREMENTO puntoYcoma .

    console         reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    if              reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    while           reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    break           reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    continue        reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    for             reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    id              reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    fn              reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    let             reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    $end            reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    llave_Cierra    reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)


state 31

    (11) ENTRADA -> DECREMENTO puntoYcoma .

    console         reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    if              reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    while           reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    break           reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    continue        reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    for             reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    id              reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    fn              reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    let             reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    $end            reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    llave_Cierra    reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)


state 32

    (12) ENTRADA -> FUNC puntoYcoma .

    console         reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    if              reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    while           reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    break           reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    continue        reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    for             reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    id              reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    fn              reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    let             reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    $end            reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    llave_Cierra    reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)


state 33

    (13) ENTRADA -> LLAMADA_FUNCION puntoYcoma .

    console         reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    if              reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    while           reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    break           reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    continue        reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    for             reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    id              reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    fn              reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    let             reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    $end            reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    llave_Cierra    reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)


state 34

    (35) ENTRADA -> DECLARACION puntoYcoma .

    console         reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)
    if              reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)
    while           reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)
    break           reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)
    continue        reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)
    for             reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)
    id              reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)
    fn              reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)
    let             reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)
    $end            reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)
    llave_Cierra    reduce using rule 35 (ENTRADA -> DECLARACION puntoYcoma .)


state 35

    (42) ENTRADA -> ASIGNACION puntoYcoma .

    console         reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)
    if              reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)
    while           reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)
    break           reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)
    continue        reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)
    for             reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)
    id              reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)
    fn              reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)
    let             reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)
    $end            reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)
    llave_Cierra    reduce using rule 42 (ENTRADA -> ASIGNACION puntoYcoma .)


state 36

    (47) IMPRIMIR -> console punto . log p_Abre LISTAEXPRESIONES p_Cierra

    log             shift and go to state 50


state 37

    (31) IF -> if p_Abre . EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 51
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 38

    (30) WHILE -> while p_Abre . EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 67
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 39

    (28) BREAK -> break puntoYcoma .

    console         reduce using rule 28 (BREAK -> break puntoYcoma .)
    if              reduce using rule 28 (BREAK -> break puntoYcoma .)
    while           reduce using rule 28 (BREAK -> break puntoYcoma .)
    break           reduce using rule 28 (BREAK -> break puntoYcoma .)
    continue        reduce using rule 28 (BREAK -> break puntoYcoma .)
    for             reduce using rule 28 (BREAK -> break puntoYcoma .)
    id              reduce using rule 28 (BREAK -> break puntoYcoma .)
    fn              reduce using rule 28 (BREAK -> break puntoYcoma .)
    let             reduce using rule 28 (BREAK -> break puntoYcoma .)
    $end            reduce using rule 28 (BREAK -> break puntoYcoma .)
    llave_Cierra    reduce using rule 28 (BREAK -> break puntoYcoma .)


state 40

    (29) CONTINUE -> continue puntoYcoma .

    console         reduce using rule 29 (CONTINUE -> continue puntoYcoma .)
    if              reduce using rule 29 (CONTINUE -> continue puntoYcoma .)
    while           reduce using rule 29 (CONTINUE -> continue puntoYcoma .)
    break           reduce using rule 29 (CONTINUE -> continue puntoYcoma .)
    continue        reduce using rule 29 (CONTINUE -> continue puntoYcoma .)
    for             reduce using rule 29 (CONTINUE -> continue puntoYcoma .)
    id              reduce using rule 29 (CONTINUE -> continue puntoYcoma .)
    fn              reduce using rule 29 (CONTINUE -> continue puntoYcoma .)
    let             reduce using rule 29 (CONTINUE -> continue puntoYcoma .)
    $end            reduce using rule 29 (CONTINUE -> continue puntoYcoma .)
    llave_Cierra    reduce using rule 29 (CONTINUE -> continue puntoYcoma .)


state 41

    (24) FOR -> for p_Abre . DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra

    let             shift and go to state 24

    DECLARACION                    shift and go to state 68

state 42

    (45) INCREMENTO -> id incremento .

    puntoYcoma      reduce using rule 45 (INCREMENTO -> id incremento .)
    p_Cierra        reduce using rule 45 (INCREMENTO -> id incremento .)


state 43

    (46) DECREMENTO -> id decremento .

    puntoYcoma      reduce using rule 46 (DECREMENTO -> id decremento .)
    p_Cierra        reduce using rule 46 (DECREMENTO -> id decremento .)


state 44

    (20) LLAMADA_FUNCION -> id p_Abre . PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> id p_Abre . p_Cierra
    (22) PARAMETROS_LLAMA_FUNC -> . EXPRESION
    (23) PARAMETROS_LLAMA_FUNC -> . PARAMETROS_LLAMA_FUNC coma EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    p_Cierra        shift and go to state 70
    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    PARAMETROS_LLAMA_FUNC          shift and go to state 69
    EXPRESION                      shift and go to state 71
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 45

    (43) ASIGNACION -> id igual . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 72
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 46

    (44) ASIGNACION -> id LISTAINDICES . igual EXPRESION
    (50) LISTAINDICES -> LISTAINDICES . c_Abre EXPRESION c_Cierra

    igual           shift and go to state 73
    c_Abre          shift and go to state 74


state 47

    (51) LISTAINDICES -> c_Abre . EXPRESION c_Cierra
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 75
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 48

    (14) FUNC -> fn id . p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> fn id . p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 76


state 49

    (36) DECLARACION -> let id . igual EXPRESION
    (37) DECLARACION -> let id . dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> let id .
    (39) DECLARACION -> let id . dosPuntos TIPO
    (40) DECLARACION -> let id . dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> let id . dosPuntos TIPO c_Abre c_Cierra

    igual           shift and go to state 77
    dosPuntos       shift and go to state 78
    puntoYcoma      reduce using rule 38 (DECLARACION -> let id .)


state 50

    (47) IMPRIMIR -> console punto log . p_Abre LISTAEXPRESIONES p_Cierra

    p_Abre          shift and go to state 79


state 51

    (31) IF -> if p_Abre EXPRESION . p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 80
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 52

    (58) EXPRESION -> resta . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 95
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 53

    (61) EXPRESION -> not . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 96
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 54

    (68) EXPRESION -> FUNCION_TOFIXED .

    p_Cierra        reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    suma            reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    resta           reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    multiplicacion  reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    division        reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    potencia        reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    modulo          reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    and             reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    or              reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    mayor           reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    mayorigual      reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    menor           reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    menorigual      reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    igualacion      reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    diferente       reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    coma            reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    puntoYcoma      reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)
    c_Cierra        reduce using rule 68 (EXPRESION -> FUNCION_TOFIXED .)


state 55

    (69) EXPRESION -> FUNCION_TOEXPONENTIAL .

    p_Cierra        reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    suma            reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    resta           reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    multiplicacion  reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    division        reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    potencia        reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    modulo          reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    and             reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    or              reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    mayor           reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    mayorigual      reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    menor           reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    menorigual      reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    igualacion      reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    diferente       reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    coma            reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    puntoYcoma      reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    c_Cierra        reduce using rule 69 (EXPRESION -> FUNCION_TOEXPONENTIAL .)


state 56

    (70) EXPRESION -> FUNCION_TOSTRING .

    p_Cierra        reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    suma            reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    resta           reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    multiplicacion  reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    division        reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    potencia        reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    modulo          reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    and             reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    or              reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    mayor           reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    mayorigual      reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    menor           reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    menorigual      reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    igualacion      reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    diferente       reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    coma            reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    puntoYcoma      reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)
    c_Cierra        reduce using rule 70 (EXPRESION -> FUNCION_TOSTRING .)


state 57

    (71) EXPRESION -> FUNCION_TOLOWERCASE .

    p_Cierra        reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    suma            reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    resta           reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    multiplicacion  reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    division        reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    potencia        reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    modulo          reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    and             reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    or              reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    mayor           reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    mayorigual      reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    menor           reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    menorigual      reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    igualacion      reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    diferente       reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    coma            reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    puntoYcoma      reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)
    c_Cierra        reduce using rule 71 (EXPRESION -> FUNCION_TOLOWERCASE .)


state 58

    (72) EXPRESION -> FUNCION_TOUPPERCASE .

    p_Cierra        reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    suma            reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    resta           reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    multiplicacion  reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    division        reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    potencia        reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    modulo          reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    and             reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    or              reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    mayor           reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    mayorigual      reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    menor           reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    menorigual      reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    igualacion      reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    diferente       reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    coma            reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    puntoYcoma      reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)
    c_Cierra        reduce using rule 72 (EXPRESION -> FUNCION_TOUPPERCASE .)


state 59

    (73) EXPRESION -> FUNCION_SPLIT .

    p_Cierra        reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    suma            reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    resta           reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    multiplicacion  reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    division        reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    potencia        reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    modulo          reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    and             reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    or              reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    mayor           reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    mayorigual      reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    menor           reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    menorigual      reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    igualacion      reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    diferente       reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    coma            reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    puntoYcoma      reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)
    c_Cierra        reduce using rule 73 (EXPRESION -> FUNCION_SPLIT .)


state 60

    (80) EXPRESION -> cadena .

    p_Cierra        reduce using rule 80 (EXPRESION -> cadena .)
    suma            reduce using rule 80 (EXPRESION -> cadena .)
    resta           reduce using rule 80 (EXPRESION -> cadena .)
    multiplicacion  reduce using rule 80 (EXPRESION -> cadena .)
    division        reduce using rule 80 (EXPRESION -> cadena .)
    potencia        reduce using rule 80 (EXPRESION -> cadena .)
    modulo          reduce using rule 80 (EXPRESION -> cadena .)
    and             reduce using rule 80 (EXPRESION -> cadena .)
    or              reduce using rule 80 (EXPRESION -> cadena .)
    mayor           reduce using rule 80 (EXPRESION -> cadena .)
    mayorigual      reduce using rule 80 (EXPRESION -> cadena .)
    menor           reduce using rule 80 (EXPRESION -> cadena .)
    menorigual      reduce using rule 80 (EXPRESION -> cadena .)
    igualacion      reduce using rule 80 (EXPRESION -> cadena .)
    diferente       reduce using rule 80 (EXPRESION -> cadena .)
    coma            reduce using rule 80 (EXPRESION -> cadena .)
    puntoYcoma      reduce using rule 80 (EXPRESION -> cadena .)
    c_Cierra        reduce using rule 80 (EXPRESION -> cadena .)


state 61

    (81) EXPRESION -> numero .

    p_Cierra        reduce using rule 81 (EXPRESION -> numero .)
    suma            reduce using rule 81 (EXPRESION -> numero .)
    resta           reduce using rule 81 (EXPRESION -> numero .)
    multiplicacion  reduce using rule 81 (EXPRESION -> numero .)
    division        reduce using rule 81 (EXPRESION -> numero .)
    potencia        reduce using rule 81 (EXPRESION -> numero .)
    modulo          reduce using rule 81 (EXPRESION -> numero .)
    and             reduce using rule 81 (EXPRESION -> numero .)
    or              reduce using rule 81 (EXPRESION -> numero .)
    mayor           reduce using rule 81 (EXPRESION -> numero .)
    mayorigual      reduce using rule 81 (EXPRESION -> numero .)
    menor           reduce using rule 81 (EXPRESION -> numero .)
    menorigual      reduce using rule 81 (EXPRESION -> numero .)
    igualacion      reduce using rule 81 (EXPRESION -> numero .)
    diferente       reduce using rule 81 (EXPRESION -> numero .)
    coma            reduce using rule 81 (EXPRESION -> numero .)
    puntoYcoma      reduce using rule 81 (EXPRESION -> numero .)
    c_Cierra        reduce using rule 81 (EXPRESION -> numero .)


state 62

    (82) EXPRESION -> true .

    p_Cierra        reduce using rule 82 (EXPRESION -> true .)
    suma            reduce using rule 82 (EXPRESION -> true .)
    resta           reduce using rule 82 (EXPRESION -> true .)
    multiplicacion  reduce using rule 82 (EXPRESION -> true .)
    division        reduce using rule 82 (EXPRESION -> true .)
    potencia        reduce using rule 82 (EXPRESION -> true .)
    modulo          reduce using rule 82 (EXPRESION -> true .)
    and             reduce using rule 82 (EXPRESION -> true .)
    or              reduce using rule 82 (EXPRESION -> true .)
    mayor           reduce using rule 82 (EXPRESION -> true .)
    mayorigual      reduce using rule 82 (EXPRESION -> true .)
    menor           reduce using rule 82 (EXPRESION -> true .)
    menorigual      reduce using rule 82 (EXPRESION -> true .)
    igualacion      reduce using rule 82 (EXPRESION -> true .)
    diferente       reduce using rule 82 (EXPRESION -> true .)
    coma            reduce using rule 82 (EXPRESION -> true .)
    puntoYcoma      reduce using rule 82 (EXPRESION -> true .)
    c_Cierra        reduce using rule 82 (EXPRESION -> true .)


state 63

    (83) EXPRESION -> false .

    p_Cierra        reduce using rule 83 (EXPRESION -> false .)
    suma            reduce using rule 83 (EXPRESION -> false .)
    resta           reduce using rule 83 (EXPRESION -> false .)
    multiplicacion  reduce using rule 83 (EXPRESION -> false .)
    division        reduce using rule 83 (EXPRESION -> false .)
    potencia        reduce using rule 83 (EXPRESION -> false .)
    modulo          reduce using rule 83 (EXPRESION -> false .)
    and             reduce using rule 83 (EXPRESION -> false .)
    or              reduce using rule 83 (EXPRESION -> false .)
    mayor           reduce using rule 83 (EXPRESION -> false .)
    mayorigual      reduce using rule 83 (EXPRESION -> false .)
    menor           reduce using rule 83 (EXPRESION -> false .)
    menorigual      reduce using rule 83 (EXPRESION -> false .)
    igualacion      reduce using rule 83 (EXPRESION -> false .)
    diferente       reduce using rule 83 (EXPRESION -> false .)
    coma            reduce using rule 83 (EXPRESION -> false .)
    puntoYcoma      reduce using rule 83 (EXPRESION -> false .)
    c_Cierra        reduce using rule 83 (EXPRESION -> false .)


state 64

    (84) EXPRESION -> null .

    p_Cierra        reduce using rule 84 (EXPRESION -> null .)
    suma            reduce using rule 84 (EXPRESION -> null .)
    resta           reduce using rule 84 (EXPRESION -> null .)
    multiplicacion  reduce using rule 84 (EXPRESION -> null .)
    division        reduce using rule 84 (EXPRESION -> null .)
    potencia        reduce using rule 84 (EXPRESION -> null .)
    modulo          reduce using rule 84 (EXPRESION -> null .)
    and             reduce using rule 84 (EXPRESION -> null .)
    or              reduce using rule 84 (EXPRESION -> null .)
    mayor           reduce using rule 84 (EXPRESION -> null .)
    mayorigual      reduce using rule 84 (EXPRESION -> null .)
    menor           reduce using rule 84 (EXPRESION -> null .)
    menorigual      reduce using rule 84 (EXPRESION -> null .)
    igualacion      reduce using rule 84 (EXPRESION -> null .)
    diferente       reduce using rule 84 (EXPRESION -> null .)
    coma            reduce using rule 84 (EXPRESION -> null .)
    puntoYcoma      reduce using rule 84 (EXPRESION -> null .)
    c_Cierra        reduce using rule 84 (EXPRESION -> null .)


state 65

    (85) EXPRESION -> id .
    (86) EXPRESION -> id . LISTAINDICES
    (74) FUNCION_TOFIXED -> id . punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> id . punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> id . punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> id . punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> id . punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> id . punto split p_Abre EXPRESION p_Cierra
    (50) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (51) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    p_Cierra        reduce using rule 85 (EXPRESION -> id .)
    suma            reduce using rule 85 (EXPRESION -> id .)
    resta           reduce using rule 85 (EXPRESION -> id .)
    multiplicacion  reduce using rule 85 (EXPRESION -> id .)
    division        reduce using rule 85 (EXPRESION -> id .)
    potencia        reduce using rule 85 (EXPRESION -> id .)
    modulo          reduce using rule 85 (EXPRESION -> id .)
    and             reduce using rule 85 (EXPRESION -> id .)
    or              reduce using rule 85 (EXPRESION -> id .)
    mayor           reduce using rule 85 (EXPRESION -> id .)
    mayorigual      reduce using rule 85 (EXPRESION -> id .)
    menor           reduce using rule 85 (EXPRESION -> id .)
    menorigual      reduce using rule 85 (EXPRESION -> id .)
    igualacion      reduce using rule 85 (EXPRESION -> id .)
    diferente       reduce using rule 85 (EXPRESION -> id .)
    coma            reduce using rule 85 (EXPRESION -> id .)
    puntoYcoma      reduce using rule 85 (EXPRESION -> id .)
    c_Cierra        reduce using rule 85 (EXPRESION -> id .)
    punto           shift and go to state 98
    c_Abre          shift and go to state 47

    LISTAINDICES                   shift and go to state 97

state 66

    (87) EXPRESION -> c_Abre . LISTAEXPRESIONES c_Cierra
    (48) LISTAEXPRESIONES -> . LISTAEXPRESIONES coma EXPRESION
    (49) LISTAEXPRESIONES -> . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    LISTAEXPRESIONES               shift and go to state 99
    EXPRESION                      shift and go to state 100
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 67

    (30) WHILE -> while p_Abre EXPRESION . p_Cierra llave_Abre ENTRADAS llave_Cierra
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 101
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 68

    (24) FOR -> for p_Abre DECLARACION . puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra

    puntoYcoma      shift and go to state 102


state 69

    (20) LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC . p_Cierra
    (23) PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC . coma EXPRESION

    p_Cierra        shift and go to state 103
    coma            shift and go to state 104


state 70

    (21) LLAMADA_FUNCION -> id p_Abre p_Cierra .

    puntoYcoma      reduce using rule 21 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)


state 71

    (22) PARAMETROS_LLAMA_FUNC -> EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 22 (PARAMETROS_LLAMA_FUNC -> EXPRESION .)
    coma            reduce using rule 22 (PARAMETROS_LLAMA_FUNC -> EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 72

    (43) ASIGNACION -> id igual EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 43 (ASIGNACION -> id igual EXPRESION .)
    p_Cierra        reduce using rule 43 (ASIGNACION -> id igual EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 73

    (44) ASIGNACION -> id LISTAINDICES igual . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 105
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 74

    (50) LISTAINDICES -> LISTAINDICES c_Abre . EXPRESION c_Cierra
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 106
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 75

    (51) LISTAINDICES -> c_Abre EXPRESION . c_Cierra
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        shift and go to state 107
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 76

    (14) FUNC -> fn id p_Abre . PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> fn id p_Abre . p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) PARAMETROS_DECLA_FUNC -> . PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC
    (17) PARAMETROS_DECLA_FUNC -> . PARAMETRO_DECLA_FUNC
    (18) PARAMETRO_DECLA_FUNC -> . id dosPuntos TIPO
    (19) PARAMETRO_DECLA_FUNC -> . id dosPuntos TIPO c_Abre c_Cierra

    p_Cierra        shift and go to state 110
    id              shift and go to state 108

    PARAMETROS_DECLA_FUNC          shift and go to state 109
    PARAMETRO_DECLA_FUNC           shift and go to state 111

state 77

    (36) DECLARACION -> let id igual . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 112
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 78

    (37) DECLARACION -> let id dosPuntos . TIPO igual EXPRESION
    (39) DECLARACION -> let id dosPuntos . TIPO
    (40) DECLARACION -> let id dosPuntos . TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> let id dosPuntos . TIPO c_Abre c_Cierra
    (88) TIPO -> . number
    (89) TIPO -> . string
    (90) TIPO -> . boolean
    (91) TIPO -> . any

    number          shift and go to state 114
    string          shift and go to state 115
    boolean         shift and go to state 116
    any             shift and go to state 117

    TIPO                           shift and go to state 113

state 79

    (47) IMPRIMIR -> console punto log p_Abre . LISTAEXPRESIONES p_Cierra
    (48) LISTAEXPRESIONES -> . LISTAEXPRESIONES coma EXPRESION
    (49) LISTAEXPRESIONES -> . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    LISTAEXPRESIONES               shift and go to state 118
    EXPRESION                      shift and go to state 100
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 80

    (31) IF -> if p_Abre EXPRESION p_Cierra . llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    llave_Abre      shift and go to state 119


state 81

    (52) EXPRESION -> EXPRESION suma . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 120
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 82

    (53) EXPRESION -> EXPRESION resta . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 121
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 83

    (54) EXPRESION -> EXPRESION multiplicacion . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 122
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 84

    (55) EXPRESION -> EXPRESION division . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 123
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 85

    (56) EXPRESION -> EXPRESION potencia . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 124
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 86

    (57) EXPRESION -> EXPRESION modulo . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 125
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 87

    (59) EXPRESION -> EXPRESION and . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 126
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 88

    (60) EXPRESION -> EXPRESION or . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 127
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 89

    (62) EXPRESION -> EXPRESION mayor . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 128
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 90

    (63) EXPRESION -> EXPRESION mayorigual . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 129
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 91

    (64) EXPRESION -> EXPRESION menor . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 130
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 92

    (65) EXPRESION -> EXPRESION menorigual . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 131
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 93

    (66) EXPRESION -> EXPRESION igualacion . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 132
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 94

    (67) EXPRESION -> EXPRESION diferente . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 133
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 95

    (58) EXPRESION -> resta EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    suma            reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    resta           reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    multiplicacion  reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    division        reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    potencia        reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    modulo          reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    and             reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    or              reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    mayor           reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    mayorigual      reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    menor           reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    menorigual      reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    igualacion      reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    diferente       reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    coma            reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    puntoYcoma      reduce using rule 58 (EXPRESION -> resta EXPRESION .)
    c_Cierra        reduce using rule 58 (EXPRESION -> resta EXPRESION .)

  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! multiplicacion  [ shift and go to state 83 ]
  ! division        [ shift and go to state 84 ]
  ! potencia        [ shift and go to state 85 ]
  ! modulo          [ shift and go to state 86 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 96

    (61) EXPRESION -> not EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 61 (EXPRESION -> not EXPRESION .)
    suma            reduce using rule 61 (EXPRESION -> not EXPRESION .)
    resta           reduce using rule 61 (EXPRESION -> not EXPRESION .)
    multiplicacion  reduce using rule 61 (EXPRESION -> not EXPRESION .)
    division        reduce using rule 61 (EXPRESION -> not EXPRESION .)
    potencia        reduce using rule 61 (EXPRESION -> not EXPRESION .)
    modulo          reduce using rule 61 (EXPRESION -> not EXPRESION .)
    and             reduce using rule 61 (EXPRESION -> not EXPRESION .)
    or              reduce using rule 61 (EXPRESION -> not EXPRESION .)
    mayor           reduce using rule 61 (EXPRESION -> not EXPRESION .)
    mayorigual      reduce using rule 61 (EXPRESION -> not EXPRESION .)
    menor           reduce using rule 61 (EXPRESION -> not EXPRESION .)
    menorigual      reduce using rule 61 (EXPRESION -> not EXPRESION .)
    igualacion      reduce using rule 61 (EXPRESION -> not EXPRESION .)
    diferente       reduce using rule 61 (EXPRESION -> not EXPRESION .)
    coma            reduce using rule 61 (EXPRESION -> not EXPRESION .)
    puntoYcoma      reduce using rule 61 (EXPRESION -> not EXPRESION .)
    c_Cierra        reduce using rule 61 (EXPRESION -> not EXPRESION .)

  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! multiplicacion  [ shift and go to state 83 ]
  ! division        [ shift and go to state 84 ]
  ! potencia        [ shift and go to state 85 ]
  ! modulo          [ shift and go to state 86 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 97

    (86) EXPRESION -> id LISTAINDICES .
    (50) LISTAINDICES -> LISTAINDICES . c_Abre EXPRESION c_Cierra

    p_Cierra        reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    suma            reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    resta           reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    multiplicacion  reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    division        reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    potencia        reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    modulo          reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    and             reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    or              reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    mayor           reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    mayorigual      reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    menor           reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    menorigual      reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    igualacion      reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    diferente       reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    coma            reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    puntoYcoma      reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    c_Cierra        reduce using rule 86 (EXPRESION -> id LISTAINDICES .)
    c_Abre          shift and go to state 74


state 98

    (74) FUNCION_TOFIXED -> id punto . toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> id punto . toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> id punto . toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> id punto . toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> id punto . toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> id punto . split p_Abre EXPRESION p_Cierra

    toFixed         shift and go to state 134
    toExponential   shift and go to state 135
    toString        shift and go to state 136
    toLowerCase     shift and go to state 137
    toUpperCase     shift and go to state 138
    split           shift and go to state 139


state 99

    (87) EXPRESION -> c_Abre LISTAEXPRESIONES . c_Cierra
    (48) LISTAEXPRESIONES -> LISTAEXPRESIONES . coma EXPRESION

    c_Cierra        shift and go to state 140
    coma            shift and go to state 141


state 100

    (49) LISTAEXPRESIONES -> EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        reduce using rule 49 (LISTAEXPRESIONES -> EXPRESION .)
    coma            reduce using rule 49 (LISTAEXPRESIONES -> EXPRESION .)
    p_Cierra        reduce using rule 49 (LISTAEXPRESIONES -> EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 101

    (30) WHILE -> while p_Abre EXPRESION p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 142


state 102

    (24) FOR -> for p_Abre DECLARACION puntoYcoma . EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 143
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 103

    (20) LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .

    puntoYcoma      reduce using rule 20 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)


state 104

    (23) PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 144
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 105

    (44) ASIGNACION -> id LISTAINDICES igual EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 44 (ASIGNACION -> id LISTAINDICES igual EXPRESION .)
    p_Cierra        reduce using rule 44 (ASIGNACION -> id LISTAINDICES igual EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 106

    (50) LISTAINDICES -> LISTAINDICES c_Abre EXPRESION . c_Cierra
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        shift and go to state 145
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 107

    (51) LISTAINDICES -> c_Abre EXPRESION c_Cierra .

    igual           reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    c_Abre          reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    p_Cierra        reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    suma            reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    resta           reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    multiplicacion  reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    division        reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    potencia        reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    modulo          reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    and             reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    or              reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    mayor           reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    mayorigual      reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    menor           reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    menorigual      reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    igualacion      reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    diferente       reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    coma            reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    puntoYcoma      reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    c_Cierra        reduce using rule 51 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)


state 108

    (18) PARAMETRO_DECLA_FUNC -> id . dosPuntos TIPO
    (19) PARAMETRO_DECLA_FUNC -> id . dosPuntos TIPO c_Abre c_Cierra

    dosPuntos       shift and go to state 146


state 109

    (14) FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC . p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC . coma PARAMETRO_DECLA_FUNC

    p_Cierra        shift and go to state 147
    coma            shift and go to state 148


state 110

    (15) FUNC -> fn id p_Abre p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 149


state 111

    (17) PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC .

    p_Cierra        reduce using rule 17 (PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC .)
    coma            reduce using rule 17 (PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC .)


state 112

    (36) DECLARACION -> let id igual EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 36 (DECLARACION -> let id igual EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 113

    (37) DECLARACION -> let id dosPuntos TIPO . igual EXPRESION
    (39) DECLARACION -> let id dosPuntos TIPO .
    (40) DECLARACION -> let id dosPuntos TIPO . c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> let id dosPuntos TIPO . c_Abre c_Cierra

    igual           shift and go to state 150
    puntoYcoma      reduce using rule 39 (DECLARACION -> let id dosPuntos TIPO .)
    c_Abre          shift and go to state 151


state 114

    (88) TIPO -> number .

    igual           reduce using rule 88 (TIPO -> number .)
    c_Abre          reduce using rule 88 (TIPO -> number .)
    puntoYcoma      reduce using rule 88 (TIPO -> number .)
    p_Cierra        reduce using rule 88 (TIPO -> number .)
    coma            reduce using rule 88 (TIPO -> number .)


state 115

    (89) TIPO -> string .

    igual           reduce using rule 89 (TIPO -> string .)
    c_Abre          reduce using rule 89 (TIPO -> string .)
    puntoYcoma      reduce using rule 89 (TIPO -> string .)
    p_Cierra        reduce using rule 89 (TIPO -> string .)
    coma            reduce using rule 89 (TIPO -> string .)


state 116

    (90) TIPO -> boolean .

    igual           reduce using rule 90 (TIPO -> boolean .)
    c_Abre          reduce using rule 90 (TIPO -> boolean .)
    puntoYcoma      reduce using rule 90 (TIPO -> boolean .)
    p_Cierra        reduce using rule 90 (TIPO -> boolean .)
    coma            reduce using rule 90 (TIPO -> boolean .)


state 117

    (91) TIPO -> any .

    igual           reduce using rule 91 (TIPO -> any .)
    c_Abre          reduce using rule 91 (TIPO -> any .)
    puntoYcoma      reduce using rule 91 (TIPO -> any .)
    p_Cierra        reduce using rule 91 (TIPO -> any .)
    coma            reduce using rule 91 (TIPO -> any .)


state 118

    (47) IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES . p_Cierra
    (48) LISTAEXPRESIONES -> LISTAEXPRESIONES . coma EXPRESION

    p_Cierra        shift and go to state 152
    coma            shift and go to state 141


state 119

    (31) IF -> if p_Abre EXPRESION p_Cierra llave_Abre . ENTRADAS llave_Cierra COMPLEMENTO_IF
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADAS                       shift and go to state 153
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 120

    (52) EXPRESION -> EXPRESION suma EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .)
    suma            reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .)
    resta           reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .)
    and             reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .)
    or              reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .)
    coma            reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .)
    puntoYcoma      reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .)
    c_Cierra        reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .)
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94

  ! multiplicacion  [ reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! division        [ reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! potencia        [ reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! modulo          [ reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! mayor           [ reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! mayorigual      [ reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! menor           [ reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! menorigual      [ reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! igualacion      [ reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! diferente       [ reduce using rule 52 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]


state 121

    (53) EXPRESION -> EXPRESION resta EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .)
    suma            reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .)
    resta           reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .)
    and             reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .)
    or              reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .)
    coma            reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .)
    puntoYcoma      reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .)
    c_Cierra        reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .)
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94

  ! multiplicacion  [ reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! division        [ reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! potencia        [ reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! modulo          [ reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! mayor           [ reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! mayorigual      [ reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! menor           [ reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! menorigual      [ reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! igualacion      [ reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! diferente       [ reduce using rule 53 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]


state 122

    (54) EXPRESION -> EXPRESION multiplicacion EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    suma            reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    resta           reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    multiplicacion  reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    division        reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    modulo          reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    and             reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    or              reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    mayor           reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    mayorigual      reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    menor           reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    menorigual      reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    igualacion      reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    diferente       reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    coma            reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    puntoYcoma      reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    c_Cierra        reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    potencia        shift and go to state 85

  ! potencia        [ reduce using rule 54 (EXPRESION -> EXPRESION multiplicacion EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! multiplicacion  [ shift and go to state 83 ]
  ! division        [ shift and go to state 84 ]
  ! modulo          [ shift and go to state 86 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 123

    (55) EXPRESION -> EXPRESION division EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    suma            reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    resta           reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    multiplicacion  reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    division        reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    modulo          reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    and             reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    or              reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    mayor           reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    mayorigual      reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    menor           reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    menorigual      reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    igualacion      reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    diferente       reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    coma            reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    puntoYcoma      reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    c_Cierra        reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .)
    potencia        shift and go to state 85

  ! potencia        [ reduce using rule 55 (EXPRESION -> EXPRESION division EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! multiplicacion  [ shift and go to state 83 ]
  ! division        [ shift and go to state 84 ]
  ! modulo          [ shift and go to state 86 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 124

    (56) EXPRESION -> EXPRESION potencia EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    suma            reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    resta           reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    multiplicacion  reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    division        reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    potencia        reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    modulo          reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    and             reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    or              reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    mayor           reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    mayorigual      reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    menor           reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    menorigual      reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    igualacion      reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    diferente       reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    coma            reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    puntoYcoma      reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)
    c_Cierra        reduce using rule 56 (EXPRESION -> EXPRESION potencia EXPRESION .)

  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! multiplicacion  [ shift and go to state 83 ]
  ! division        [ shift and go to state 84 ]
  ! potencia        [ shift and go to state 85 ]
  ! modulo          [ shift and go to state 86 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 125

    (57) EXPRESION -> EXPRESION modulo EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    suma            reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    resta           reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    multiplicacion  reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    division        reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    modulo          reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    and             reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    or              reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayor           reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorigual      reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menor           reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorigual      reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    igualacion      reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    diferente       reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    coma            reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    puntoYcoma      reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    c_Cierra        reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    potencia        shift and go to state 85

  ! potencia        [ reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! multiplicacion  [ shift and go to state 83 ]
  ! division        [ shift and go to state 84 ]
  ! modulo          [ shift and go to state 86 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 126

    (59) EXPRESION -> EXPRESION and EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .)
    and             reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .)
    or              reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .)
    coma            reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .)
    puntoYcoma      reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .)
    c_Cierra        reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94

  ! suma            [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! resta           [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! multiplicacion  [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! division        [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! potencia        [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! modulo          [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayor           [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayorigual      [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menor           [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menorigual      [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! igualacion      [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! diferente       [ reduce using rule 59 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]


state 127

    (60) EXPRESION -> EXPRESION or EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .)
    or              reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .)
    coma            reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .)
    puntoYcoma      reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .)
    c_Cierra        reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94

  ! suma            [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! resta           [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! multiplicacion  [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! division        [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! potencia        [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! modulo          [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! and             [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayor           [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayorigual      [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menor           [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menorigual      [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! igualacion      [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! diferente       [ reduce using rule 60 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! or              [ shift and go to state 88 ]


state 128

    (62) EXPRESION -> EXPRESION mayor EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    suma            reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    resta           reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    and             reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    or              reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mayor           reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mayorigual      reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menor           reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menorigual      reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    igualacion      reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    diferente       reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    coma            reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    puntoYcoma      reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    c_Cierra        reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .)
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86

  ! multiplicacion  [ reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! division        [ reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! potencia        [ reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! modulo          [ reduce using rule 62 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 129

    (63) EXPRESION -> EXPRESION mayorigual EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    suma            reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    resta           reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    and             reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    or              reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mayor           reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mayorigual      reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menor           reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menorigual      reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    igualacion      reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    diferente       reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    coma            reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    puntoYcoma      reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    c_Cierra        reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86

  ! multiplicacion  [ reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! division        [ reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! potencia        [ reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! modulo          [ reduce using rule 63 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 130

    (64) EXPRESION -> EXPRESION menor EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    suma            reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    resta           reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    and             reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    or              reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    mayor           reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    mayorigual      reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    menor           reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    menorigual      reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    igualacion      reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    diferente       reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    coma            reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    puntoYcoma      reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    c_Cierra        reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .)
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86

  ! multiplicacion  [ reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! division        [ reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! potencia        [ reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! modulo          [ reduce using rule 64 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 131

    (65) EXPRESION -> EXPRESION menorigual EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    suma            reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    resta           reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    and             reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    or              reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mayor           reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mayorigual      reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menor           reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menorigual      reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    igualacion      reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    diferente       reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    coma            reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    puntoYcoma      reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    c_Cierra        reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86

  ! multiplicacion  [ reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! division        [ reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! potencia        [ reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! modulo          [ reduce using rule 65 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 132

    (66) EXPRESION -> EXPRESION igualacion EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    suma            reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    resta           reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    and             reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    or              reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    mayor           reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    mayorigual      reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    menor           reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    menorigual      reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    igualacion      reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    diferente       reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    coma            reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    puntoYcoma      reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    c_Cierra        reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86

  ! multiplicacion  [ reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! division        [ reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! potencia        [ reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! modulo          [ reduce using rule 66 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 133

    (67) EXPRESION -> EXPRESION diferente EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    suma            reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    resta           reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    and             reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    or              reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mayor           reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mayorigual      reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menor           reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menorigual      reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    igualacion      reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    diferente       reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    coma            reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    puntoYcoma      reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    c_Cierra        reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .)
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86

  ! multiplicacion  [ reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! division        [ reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! potencia        [ reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! modulo          [ reduce using rule 67 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! suma            [ shift and go to state 81 ]
  ! resta           [ shift and go to state 82 ]
  ! and             [ shift and go to state 87 ]
  ! or              [ shift and go to state 88 ]
  ! mayor           [ shift and go to state 89 ]
  ! mayorigual      [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! menorigual      [ shift and go to state 92 ]
  ! igualacion      [ shift and go to state 93 ]
  ! diferente       [ shift and go to state 94 ]


state 134

    (74) FUNCION_TOFIXED -> id punto toFixed . p_Abre EXPRESION p_Cierra

    p_Abre          shift and go to state 154


state 135

    (75) FUNCION_TOEXPONENTIAL -> id punto toExponential . p_Abre EXPRESION p_Cierra

    p_Abre          shift and go to state 155


state 136

    (76) FUNCION_TOSTRING -> id punto toString . p_Abre p_Cierra

    p_Abre          shift and go to state 156


state 137

    (77) FUNCION_TOLOWERCASE -> id punto toLowerCase . p_Abre p_Cierra

    p_Abre          shift and go to state 157


state 138

    (78) FUNCION_TOUPPERCASE -> id punto toUpperCase . p_Abre p_Cierra

    p_Abre          shift and go to state 158


state 139

    (79) FUNCION_SPLIT -> id punto split . p_Abre EXPRESION p_Cierra

    p_Abre          shift and go to state 159


state 140

    (87) EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .

    p_Cierra        reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    suma            reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    resta           reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    multiplicacion  reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    division        reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    potencia        reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    modulo          reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    and             reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    or              reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    mayor           reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    mayorigual      reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    menor           reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    menorigual      reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    igualacion      reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    diferente       reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    coma            reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    puntoYcoma      reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    c_Cierra        reduce using rule 87 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)


state 141

    (48) LISTAEXPRESIONES -> LISTAEXPRESIONES coma . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 160
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 142

    (30) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADAS                       shift and go to state 161
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 143

    (24) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION . puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      shift and go to state 162
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 144

    (23) PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 23 (PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION .)
    coma            reduce using rule 23 (PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 145

    (50) LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .

    igual           reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    c_Abre          reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    p_Cierra        reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    suma            reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    resta           reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    multiplicacion  reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    division        reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    potencia        reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    modulo          reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    and             reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    or              reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    mayor           reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    mayorigual      reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    menor           reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    menorigual      reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    igualacion      reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    diferente       reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    coma            reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    puntoYcoma      reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    c_Cierra        reduce using rule 50 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)


state 146

    (18) PARAMETRO_DECLA_FUNC -> id dosPuntos . TIPO
    (19) PARAMETRO_DECLA_FUNC -> id dosPuntos . TIPO c_Abre c_Cierra
    (88) TIPO -> . number
    (89) TIPO -> . string
    (90) TIPO -> . boolean
    (91) TIPO -> . any

    number          shift and go to state 114
    string          shift and go to state 115
    boolean         shift and go to state 116
    any             shift and go to state 117

    TIPO                           shift and go to state 163

state 147

    (14) FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 164


state 148

    (16) PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma . PARAMETRO_DECLA_FUNC
    (18) PARAMETRO_DECLA_FUNC -> . id dosPuntos TIPO
    (19) PARAMETRO_DECLA_FUNC -> . id dosPuntos TIPO c_Abre c_Cierra

    id              shift and go to state 108

    PARAMETRO_DECLA_FUNC           shift and go to state 165

state 149

    (15) FUNC -> fn id p_Abre p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADAS                       shift and go to state 166
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 150

    (37) DECLARACION -> let id dosPuntos TIPO igual . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 167
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 151

    (40) DECLARACION -> let id dosPuntos TIPO c_Abre . c_Cierra igual EXPRESION
    (41) DECLARACION -> let id dosPuntos TIPO c_Abre . c_Cierra

    c_Cierra        shift and go to state 168


state 152

    (47) IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra .

    puntoYcoma      reduce using rule 47 (IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra .)


state 153

    (31) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS . llave_Cierra COMPLEMENTO_IF
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 169
    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADA                        shift and go to state 25
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 154

    (74) FUNCION_TOFIXED -> id punto toFixed p_Abre . EXPRESION p_Cierra
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 170
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 155

    (75) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre . EXPRESION p_Cierra
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 171
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 156

    (76) FUNCION_TOSTRING -> id punto toString p_Abre . p_Cierra

    p_Cierra        shift and go to state 172


state 157

    (77) FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre . p_Cierra

    p_Cierra        shift and go to state 173


state 158

    (78) FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre . p_Cierra

    p_Cierra        shift and go to state 174


state 159

    (79) FUNCION_SPLIT -> id punto split p_Abre . EXPRESION p_Cierra
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 175
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 160

    (48) LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        reduce using rule 48 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    coma            reduce using rule 48 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    p_Cierra        reduce using rule 48 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 161

    (30) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 176
    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADA                        shift and go to state 25
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 162

    (24) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma . FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (25) FORITERADOR -> . ASIGNACION
    (26) FORITERADOR -> . INCREMENTO
    (27) FORITERADOR -> . DECREMENTO
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento

    id              shift and go to state 181

    FORITERADOR                    shift and go to state 177
    ASIGNACION                     shift and go to state 178
    INCREMENTO                     shift and go to state 179
    DECREMENTO                     shift and go to state 180

state 163

    (18) PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO .
    (19) PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO . c_Abre c_Cierra

    p_Cierra        reduce using rule 18 (PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO .)
    coma            reduce using rule 18 (PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO .)
    c_Abre          shift and go to state 182


state 164

    (14) FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADAS                       shift and go to state 183
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 165

    (16) PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC .

    p_Cierra        reduce using rule 16 (PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC .)
    coma            reduce using rule 16 (PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC .)


state 166

    (15) FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 184
    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADA                        shift and go to state 25
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 167

    (37) DECLARACION -> let id dosPuntos TIPO igual EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 37 (DECLARACION -> let id dosPuntos TIPO igual EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 168

    (40) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra . igual EXPRESION
    (41) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra .

    igual           shift and go to state 185
    puntoYcoma      reduce using rule 41 (DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra .)


state 169

    (31) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra . COMPLEMENTO_IF
    (32) COMPLEMENTO_IF -> . else IF
    (33) COMPLEMENTO_IF -> . else llave_Abre ENTRADAS llave_Cierra
    (34) COMPLEMENTO_IF -> .

    else            shift and go to state 187
    puntoYcoma      reduce using rule 34 (COMPLEMENTO_IF -> .)

    COMPLEMENTO_IF                 shift and go to state 186

state 170

    (74) FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION . p_Cierra
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 188
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 171

    (75) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION . p_Cierra
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 189
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 172

    (76) FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .

    p_Cierra        reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    suma            reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    resta           reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    multiplicacion  reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    division        reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    potencia        reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    modulo          reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    and             reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    or              reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    mayor           reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    mayorigual      reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    menor           reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    menorigual      reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    igualacion      reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    diferente       reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    coma            reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    puntoYcoma      reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    c_Cierra        reduce using rule 76 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)


state 173

    (77) FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .

    p_Cierra        reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    suma            reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    resta           reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    multiplicacion  reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    division        reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    potencia        reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    modulo          reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    and             reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    or              reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    mayor           reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    mayorigual      reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    menor           reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    menorigual      reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    igualacion      reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    diferente       reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    coma            reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    puntoYcoma      reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    c_Cierra        reduce using rule 77 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)


state 174

    (78) FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .

    p_Cierra        reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    suma            reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    resta           reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    multiplicacion  reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    division        reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    potencia        reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    modulo          reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    and             reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    or              reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    mayor           reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    mayorigual      reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    menor           reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    menorigual      reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    igualacion      reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    diferente       reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    coma            reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    puntoYcoma      reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    c_Cierra        reduce using rule 78 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)


state 175

    (79) FUNCION_SPLIT -> id punto split p_Abre EXPRESION . p_Cierra
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 190
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 176

    (30) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 30 (WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra .)


state 177

    (24) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR . p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Cierra        shift and go to state 191


state 178

    (25) FORITERADOR -> ASIGNACION .

    p_Cierra        reduce using rule 25 (FORITERADOR -> ASIGNACION .)


state 179

    (26) FORITERADOR -> INCREMENTO .

    p_Cierra        reduce using rule 26 (FORITERADOR -> INCREMENTO .)


state 180

    (27) FORITERADOR -> DECREMENTO .

    p_Cierra        reduce using rule 27 (FORITERADOR -> DECREMENTO .)


state 181

    (43) ASIGNACION -> id . igual EXPRESION
    (44) ASIGNACION -> id . LISTAINDICES igual EXPRESION
    (45) INCREMENTO -> id . incremento
    (46) DECREMENTO -> id . decremento
    (50) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (51) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    igual           shift and go to state 45
    incremento      shift and go to state 42
    decremento      shift and go to state 43
    c_Abre          shift and go to state 47

    LISTAINDICES                   shift and go to state 46

state 182

    (19) PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre . c_Cierra

    c_Cierra        shift and go to state 192


state 183

    (14) FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 193
    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADA                        shift and go to state 25
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 184

    (15) FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 15 (FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra .)


state 185

    (40) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual . EXPRESION
    (52) EXPRESION -> . EXPRESION suma EXPRESION
    (53) EXPRESION -> . EXPRESION resta EXPRESION
    (54) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (55) EXPRESION -> . EXPRESION division EXPRESION
    (56) EXPRESION -> . EXPRESION potencia EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . resta EXPRESION
    (59) EXPRESION -> . EXPRESION and EXPRESION
    (60) EXPRESION -> . EXPRESION or EXPRESION
    (61) EXPRESION -> . not EXPRESION
    (62) EXPRESION -> . EXPRESION mayor EXPRESION
    (63) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (64) EXPRESION -> . EXPRESION menor EXPRESION
    (65) EXPRESION -> . EXPRESION menorigual EXPRESION
    (66) EXPRESION -> . EXPRESION igualacion EXPRESION
    (67) EXPRESION -> . EXPRESION diferente EXPRESION
    (68) EXPRESION -> . FUNCION_TOFIXED
    (69) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (70) EXPRESION -> . FUNCION_TOSTRING
    (71) EXPRESION -> . FUNCION_TOLOWERCASE
    (72) EXPRESION -> . FUNCION_TOUPPERCASE
    (73) EXPRESION -> . FUNCION_SPLIT
    (80) EXPRESION -> . cadena
    (81) EXPRESION -> . numero
    (82) EXPRESION -> . true
    (83) EXPRESION -> . false
    (84) EXPRESION -> . null
    (85) EXPRESION -> . id
    (86) EXPRESION -> . id LISTAINDICES
    (87) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (74) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (75) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (76) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (77) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (78) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (79) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 52
    not             shift and go to state 53
    cadena          shift and go to state 60
    numero          shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    null            shift and go to state 64
    id              shift and go to state 65
    c_Abre          shift and go to state 66

    EXPRESION                      shift and go to state 194
    FUNCION_TOFIXED                shift and go to state 54
    FUNCION_TOEXPONENTIAL          shift and go to state 55
    FUNCION_TOSTRING               shift and go to state 56
    FUNCION_TOLOWERCASE            shift and go to state 57
    FUNCION_TOUPPERCASE            shift and go to state 58
    FUNCION_SPLIT                  shift and go to state 59

state 186

    (31) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF .

    puntoYcoma      reduce using rule 31 (IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF .)


state 187

    (32) COMPLEMENTO_IF -> else . IF
    (33) COMPLEMENTO_IF -> else . llave_Abre ENTRADAS llave_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    llave_Abre      shift and go to state 196
    if              shift and go to state 17

    IF                             shift and go to state 195

state 188

    (74) FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .

    p_Cierra        reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    suma            reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    resta           reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    multiplicacion  reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    division        reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    potencia        reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    modulo          reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    and             reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    or              reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    mayor           reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    mayorigual      reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    menor           reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    menorigual      reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    igualacion      reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    diferente       reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    coma            reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    puntoYcoma      reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    c_Cierra        reduce using rule 74 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)


state 189

    (75) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .

    p_Cierra        reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    suma            reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    resta           reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    multiplicacion  reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    division        reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    potencia        reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    modulo          reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    and             reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    or              reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    mayor           reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    mayorigual      reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    menor           reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    menorigual      reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    igualacion      reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    diferente       reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    coma            reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    puntoYcoma      reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    c_Cierra        reduce using rule 75 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)


state 190

    (79) FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .

    p_Cierra        reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    suma            reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    resta           reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    multiplicacion  reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    division        reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    potencia        reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    modulo          reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    and             reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    or              reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    mayor           reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    mayorigual      reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    menor           reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    menorigual      reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    igualacion      reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    diferente       reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    coma            reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    puntoYcoma      reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    c_Cierra        reduce using rule 79 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)


state 191

    (24) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 197


state 192

    (19) PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra .

    p_Cierra        reduce using rule 19 (PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra .)
    coma            reduce using rule 19 (PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra .)


state 193

    (14) FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 14 (FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra .)


state 194

    (40) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION .
    (52) EXPRESION -> EXPRESION . suma EXPRESION
    (53) EXPRESION -> EXPRESION . resta EXPRESION
    (54) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (55) EXPRESION -> EXPRESION . division EXPRESION
    (56) EXPRESION -> EXPRESION . potencia EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (59) EXPRESION -> EXPRESION . and EXPRESION
    (60) EXPRESION -> EXPRESION . or EXPRESION
    (62) EXPRESION -> EXPRESION . mayor EXPRESION
    (63) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (64) EXPRESION -> EXPRESION . menor EXPRESION
    (65) EXPRESION -> EXPRESION . menorigual EXPRESION
    (66) EXPRESION -> EXPRESION . igualacion EXPRESION
    (67) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 40 (DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION .)
    suma            shift and go to state 81
    resta           shift and go to state 82
    multiplicacion  shift and go to state 83
    division        shift and go to state 84
    potencia        shift and go to state 85
    modulo          shift and go to state 86
    and             shift and go to state 87
    or              shift and go to state 88
    mayor           shift and go to state 89
    mayorigual      shift and go to state 90
    menor           shift and go to state 91
    menorigual      shift and go to state 92
    igualacion      shift and go to state 93
    diferente       shift and go to state 94


state 195

    (32) COMPLEMENTO_IF -> else IF .

    puntoYcoma      reduce using rule 32 (COMPLEMENTO_IF -> else IF .)


state 196

    (33) COMPLEMENTO_IF -> else llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADAS                       shift and go to state 198
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 197

    (24) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    DECLARACION                    shift and go to state 14
    ENTRADAS                       shift and go to state 199
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    ASIGNACION                     shift and go to state 15

state 198

    (33) COMPLEMENTO_IF -> else llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 200
    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    ENTRADA                        shift and go to state 25
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    DECLARACION                    shift and go to state 14
    ASIGNACION                     shift and go to state 15

state 199

    (24) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (35) ENTRADA -> . DECLARACION puntoYcoma
    (42) ENTRADA -> . ASIGNACION puntoYcoma
    (47) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (31) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (30) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (28) BREAK -> . break puntoYcoma
    (29) CONTINUE -> . continue puntoYcoma
    (24) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (45) INCREMENTO -> . id incremento
    (46) DECREMENTO -> . id decremento
    (14) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (20) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (21) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (36) DECLARACION -> . let id igual EXPRESION
    (37) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (38) DECLARACION -> . let id
    (39) DECLARACION -> . let id dosPuntos TIPO
    (40) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (43) ASIGNACION -> . id igual EXPRESION
    (44) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 201
    console         shift and go to state 16
    if              shift and go to state 17
    while           shift and go to state 18
    break           shift and go to state 19
    continue        shift and go to state 20
    for             shift and go to state 21
    id              shift and go to state 22
    fn              shift and go to state 23
    let             shift and go to state 24

    DECLARACION                    shift and go to state 14
    ENTRADA                        shift and go to state 25
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    ASIGNACION                     shift and go to state 15

state 200

    (33) COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 33 (COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra .)


state 201

    (24) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 24 (FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra .)

