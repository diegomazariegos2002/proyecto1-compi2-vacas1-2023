Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    concat
    return

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> ENTRADAS
Rule 2     ENTRADAS -> ENTRADAS ENTRADA
Rule 3     ENTRADAS -> ENTRADA
Rule 4     ENTRADA -> IMPRIMIR puntoYcoma
Rule 5     ENTRADA -> IF puntoYcoma
Rule 6     ENTRADA -> WHILE puntoYcoma
Rule 7     ENTRADA -> BREAK
Rule 8     ENTRADA -> CONTINUE
Rule 9     ENTRADA -> FOR puntoYcoma
Rule 10    ENTRADA -> INCREMENTO puntoYcoma
Rule 11    ENTRADA -> DECREMENTO puntoYcoma
Rule 12    ENTRADA -> FUNC puntoYcoma
Rule 13    FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 14    FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 15    FORITERADOR -> ASIGNACION
Rule 16    FORITERADOR -> INCREMENTO
Rule 17    FORITERADOR -> DECREMENTO
Rule 18    BREAK -> break puntoYcoma
Rule 19    CONTINUE -> continue puntoYcoma
Rule 20    WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 21    IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
Rule 22    COMPLEMENTO_IF -> else IF
Rule 23    COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra
Rule 24    COMPLEMENTO_IF -> <empty>
Rule 25    ENTRADA -> DECLARACION puntoYcoma
Rule 26    DECLARACION -> let id igual EXPRESION
Rule 27    DECLARACION -> let id dosPuntos TIPO igual EXPRESION
Rule 28    DECLARACION -> let id
Rule 29    DECLARACION -> let id dosPuntos TIPO
Rule 30    DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
Rule 31    DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra
Rule 32    ENTRADA -> ASIGNACION puntoYcoma
Rule 33    ASIGNACION -> id igual EXPRESION
Rule 34    ASIGNACION -> id LISTAINDICES igual EXPRESION
Rule 35    INCREMENTO -> id incremento
Rule 36    DECREMENTO -> id decremento
Rule 37    IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra
Rule 38    LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION
Rule 39    LISTAEXPRESIONES -> EXPRESION
Rule 40    LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra
Rule 41    LISTAINDICES -> c_Abre EXPRESION c_Cierra
Rule 42    EXPRESION -> EXPRESION suma EXPRESION
Rule 43    EXPRESION -> EXPRESION resta EXPRESION
Rule 44    EXPRESION -> EXPRESION multiplicacion EXPRESION
Rule 45    EXPRESION -> EXPRESION division EXPRESION
Rule 46    EXPRESION -> EXPRESION potencia EXPRESION
Rule 47    EXPRESION -> EXPRESION modulo EXPRESION
Rule 48    EXPRESION -> resta EXPRESION
Rule 49    EXPRESION -> EXPRESION and EXPRESION
Rule 50    EXPRESION -> EXPRESION or EXPRESION
Rule 51    EXPRESION -> not EXPRESION
Rule 52    EXPRESION -> EXPRESION mayor EXPRESION
Rule 53    EXPRESION -> EXPRESION mayorigual EXPRESION
Rule 54    EXPRESION -> EXPRESION menor EXPRESION
Rule 55    EXPRESION -> EXPRESION menorigual EXPRESION
Rule 56    EXPRESION -> EXPRESION igualacion EXPRESION
Rule 57    EXPRESION -> EXPRESION diferente EXPRESION
Rule 58    EXPRESION -> FUNCION_TOFIXED
Rule 59    EXPRESION -> FUNCION_TOEXPONENTIAL
Rule 60    EXPRESION -> FUNCION_TOSTRING
Rule 61    EXPRESION -> FUNCION_TOLOWERCASE
Rule 62    EXPRESION -> FUNCION_TOUPPERCASE
Rule 63    EXPRESION -> FUNCION_SPLIT
Rule 64    FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra
Rule 65    FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra
Rule 66    FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra
Rule 67    FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra
Rule 68    FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra
Rule 69    FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra
Rule 70    EXPRESION -> cadena
Rule 71    EXPRESION -> numero
Rule 72    EXPRESION -> true
Rule 73    EXPRESION -> false
Rule 74    EXPRESION -> null
Rule 75    EXPRESION -> id
Rule 76    EXPRESION -> id LISTAINDICES
Rule 77    EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra
Rule 78    TIPO -> number
Rule 79    TIPO -> string
Rule 80    TIPO -> boolean
Rule 81    TIPO -> any

Terminals, with rules where they appear

and                  : 49
any                  : 81
boolean              : 80
break                : 18
c_Abre               : 30 31 40 41 77
c_Cierra             : 30 31 40 41 77
cadena               : 69 70
coma                 : 38
concat               : 
console              : 37
continue             : 19
decremento           : 36
diferente            : 57
division             : 45
dosPuntos            : 27 29 30 31
else                 : 22 23
error                : 
false                : 73
fn                   : 13
for                  : 14
id                   : 13 26 27 28 29 30 31 33 34 35 36 64 65 66 67 68 69 75 76
if                   : 21
igual                : 26 27 30 33 34
igualacion           : 56
incremento           : 35
let                  : 26 27 28 29 30 31
llave_Abre           : 13 14 20 21 23
llave_Cierra         : 13 14 20 21 23
log                  : 37
mayor                : 52
mayorigual           : 53
menor                : 54
menorigual           : 55
modulo               : 47
multiplicacion       : 44
not                  : 51
null                 : 74
number               : 78
numero               : 71
or                   : 50
p_Abre               : 13 14 20 21 37 64 65 66 67 68 69
p_Cierra             : 13 14 20 21 37 64 65 66 67 68 69
potencia             : 46
punto                : 37 64 65 66 67 68 69
puntoYcoma           : 4 5 6 9 10 11 12 14 14 18 19 25 32
resta                : 43 48
return               : 
split                : 69
string               : 79
suma                 : 42
toExponential        : 65
toFixed              : 64
toLowerCase          : 67
toString             : 66
toUpperCase          : 68
true                 : 72
while                : 20

Nonterminals, with rules where they appear

ASIGNACION           : 15 32
BREAK                : 7
COMPLEMENTO_IF       : 21
CONTINUE             : 8
DECLARACION          : 14 25
DECREMENTO           : 11 17
ENTRADA              : 2 3
ENTRADAS             : 1 2 13 14 20 21 23
EXPRESION            : 14 20 21 26 27 30 33 34 38 39 40 41 42 42 43 43 44 44 45 45 46 46 47 47 48 49 49 50 50 51 52 52 53 53 54 54 55 55 56 56 57 57 64 65
FOR                  : 9
FORITERADOR          : 14
FUNC                 : 12
FUNCION_SPLIT        : 63
FUNCION_TOEXPONENTIAL : 59
FUNCION_TOFIXED      : 58
FUNCION_TOLOWERCASE  : 61
FUNCION_TOSTRING     : 60
FUNCION_TOUPPERCASE  : 62
IF                   : 5 22
IMPRIMIR             : 4
INCREMENTO           : 10 16
INICIO               : 0
LISTAEXPRESIONES     : 37 38 77
LISTAINDICES         : 34 40 76
TIPO                 : 27 29 30 31
WHILE                : 6

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . ENTRADAS
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    INICIO                         shift and go to state 1
    ENTRADAS                       shift and go to state 2
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    DECLARACION                    shift and go to state 13
    ASIGNACION                     shift and go to state 14

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> ENTRADAS .
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    $end            reduce using rule 1 (INICIO -> ENTRADAS .)
    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    ENTRADA                        shift and go to state 24
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    DECLARACION                    shift and go to state 13
    ASIGNACION                     shift and go to state 14

state 3

    (3) ENTRADAS -> ENTRADA .

    console         reduce using rule 3 (ENTRADAS -> ENTRADA .)
    if              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    while           reduce using rule 3 (ENTRADAS -> ENTRADA .)
    break           reduce using rule 3 (ENTRADAS -> ENTRADA .)
    continue        reduce using rule 3 (ENTRADAS -> ENTRADA .)
    for             reduce using rule 3 (ENTRADAS -> ENTRADA .)
    id              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    fn              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    let             reduce using rule 3 (ENTRADAS -> ENTRADA .)
    $end            reduce using rule 3 (ENTRADAS -> ENTRADA .)
    llave_Cierra    reduce using rule 3 (ENTRADAS -> ENTRADA .)


state 4

    (4) ENTRADA -> IMPRIMIR . puntoYcoma

    puntoYcoma      shift and go to state 25


state 5

    (5) ENTRADA -> IF . puntoYcoma

    puntoYcoma      shift and go to state 26


state 6

    (6) ENTRADA -> WHILE . puntoYcoma

    puntoYcoma      shift and go to state 27


state 7

    (7) ENTRADA -> BREAK .

    console         reduce using rule 7 (ENTRADA -> BREAK .)
    if              reduce using rule 7 (ENTRADA -> BREAK .)
    while           reduce using rule 7 (ENTRADA -> BREAK .)
    break           reduce using rule 7 (ENTRADA -> BREAK .)
    continue        reduce using rule 7 (ENTRADA -> BREAK .)
    for             reduce using rule 7 (ENTRADA -> BREAK .)
    id              reduce using rule 7 (ENTRADA -> BREAK .)
    fn              reduce using rule 7 (ENTRADA -> BREAK .)
    let             reduce using rule 7 (ENTRADA -> BREAK .)
    $end            reduce using rule 7 (ENTRADA -> BREAK .)
    llave_Cierra    reduce using rule 7 (ENTRADA -> BREAK .)


state 8

    (8) ENTRADA -> CONTINUE .

    console         reduce using rule 8 (ENTRADA -> CONTINUE .)
    if              reduce using rule 8 (ENTRADA -> CONTINUE .)
    while           reduce using rule 8 (ENTRADA -> CONTINUE .)
    break           reduce using rule 8 (ENTRADA -> CONTINUE .)
    continue        reduce using rule 8 (ENTRADA -> CONTINUE .)
    for             reduce using rule 8 (ENTRADA -> CONTINUE .)
    id              reduce using rule 8 (ENTRADA -> CONTINUE .)
    fn              reduce using rule 8 (ENTRADA -> CONTINUE .)
    let             reduce using rule 8 (ENTRADA -> CONTINUE .)
    $end            reduce using rule 8 (ENTRADA -> CONTINUE .)
    llave_Cierra    reduce using rule 8 (ENTRADA -> CONTINUE .)


state 9

    (9) ENTRADA -> FOR . puntoYcoma

    puntoYcoma      shift and go to state 28


state 10

    (10) ENTRADA -> INCREMENTO . puntoYcoma

    puntoYcoma      shift and go to state 29


state 11

    (11) ENTRADA -> DECREMENTO . puntoYcoma

    puntoYcoma      shift and go to state 30


state 12

    (12) ENTRADA -> FUNC . puntoYcoma

    puntoYcoma      shift and go to state 31


state 13

    (25) ENTRADA -> DECLARACION . puntoYcoma

    puntoYcoma      shift and go to state 32


state 14

    (32) ENTRADA -> ASIGNACION . puntoYcoma

    puntoYcoma      shift and go to state 33


state 15

    (37) IMPRIMIR -> console . punto log p_Abre LISTAEXPRESIONES p_Cierra

    punto           shift and go to state 34


state 16

    (21) IF -> if . p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    p_Abre          shift and go to state 35


state 17

    (20) WHILE -> while . p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 36


state 18

    (18) BREAK -> break . puntoYcoma

    puntoYcoma      shift and go to state 37


state 19

    (19) CONTINUE -> continue . puntoYcoma

    puntoYcoma      shift and go to state 38


state 20

    (14) FOR -> for . p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 39


state 21

    (35) INCREMENTO -> id . incremento
    (36) DECREMENTO -> id . decremento
    (33) ASIGNACION -> id . igual EXPRESION
    (34) ASIGNACION -> id . LISTAINDICES igual EXPRESION
    (40) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (41) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    incremento      shift and go to state 40
    decremento      shift and go to state 41
    igual           shift and go to state 42
    c_Abre          shift and go to state 44

    LISTAINDICES                   shift and go to state 43

state 22

    (13) FUNC -> fn . id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra

    id              shift and go to state 45


state 23

    (26) DECLARACION -> let . id igual EXPRESION
    (27) DECLARACION -> let . id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> let . id
    (29) DECLARACION -> let . id dosPuntos TIPO
    (30) DECLARACION -> let . id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> let . id dosPuntos TIPO c_Abre c_Cierra

    id              shift and go to state 46


state 24

    (2) ENTRADAS -> ENTRADAS ENTRADA .

    console         reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    if              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    while           reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    break           reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    continue        reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    for             reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    id              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    fn              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    let             reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    $end            reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    llave_Cierra    reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)


state 25

    (4) ENTRADA -> IMPRIMIR puntoYcoma .

    console         reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    if              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    while           reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    break           reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    continue        reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    for             reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    id              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    fn              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    let             reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    $end            reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    llave_Cierra    reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)


state 26

    (5) ENTRADA -> IF puntoYcoma .

    console         reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    if              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    while           reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    break           reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    continue        reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    for             reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    id              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    fn              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    let             reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    $end            reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    llave_Cierra    reduce using rule 5 (ENTRADA -> IF puntoYcoma .)


state 27

    (6) ENTRADA -> WHILE puntoYcoma .

    console         reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    if              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    while           reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    break           reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    continue        reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    for             reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    id              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    fn              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    let             reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    $end            reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    llave_Cierra    reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)


state 28

    (9) ENTRADA -> FOR puntoYcoma .

    console         reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    if              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    while           reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    break           reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    continue        reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    for             reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    id              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    fn              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    let             reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    $end            reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    llave_Cierra    reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)


state 29

    (10) ENTRADA -> INCREMENTO puntoYcoma .

    console         reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    if              reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    while           reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    break           reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    continue        reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    for             reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    id              reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    fn              reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    let             reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    $end            reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    llave_Cierra    reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)


state 30

    (11) ENTRADA -> DECREMENTO puntoYcoma .

    console         reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    if              reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    while           reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    break           reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    continue        reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    for             reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    id              reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    fn              reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    let             reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    $end            reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    llave_Cierra    reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)


state 31

    (12) ENTRADA -> FUNC puntoYcoma .

    console         reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    if              reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    while           reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    break           reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    continue        reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    for             reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    id              reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    fn              reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    let             reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    $end            reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    llave_Cierra    reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)


state 32

    (25) ENTRADA -> DECLARACION puntoYcoma .

    console         reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)
    if              reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)
    while           reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)
    break           reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)
    continue        reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)
    for             reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)
    id              reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)
    fn              reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)
    let             reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)
    $end            reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)
    llave_Cierra    reduce using rule 25 (ENTRADA -> DECLARACION puntoYcoma .)


state 33

    (32) ENTRADA -> ASIGNACION puntoYcoma .

    console         reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)
    if              reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)
    while           reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)
    break           reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)
    continue        reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)
    for             reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)
    id              reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)
    fn              reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)
    let             reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)
    $end            reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)
    llave_Cierra    reduce using rule 32 (ENTRADA -> ASIGNACION puntoYcoma .)


state 34

    (37) IMPRIMIR -> console punto . log p_Abre LISTAEXPRESIONES p_Cierra

    log             shift and go to state 47


state 35

    (21) IF -> if p_Abre . EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 48
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 36

    (20) WHILE -> while p_Abre . EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 64
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 37

    (18) BREAK -> break puntoYcoma .

    console         reduce using rule 18 (BREAK -> break puntoYcoma .)
    if              reduce using rule 18 (BREAK -> break puntoYcoma .)
    while           reduce using rule 18 (BREAK -> break puntoYcoma .)
    break           reduce using rule 18 (BREAK -> break puntoYcoma .)
    continue        reduce using rule 18 (BREAK -> break puntoYcoma .)
    for             reduce using rule 18 (BREAK -> break puntoYcoma .)
    id              reduce using rule 18 (BREAK -> break puntoYcoma .)
    fn              reduce using rule 18 (BREAK -> break puntoYcoma .)
    let             reduce using rule 18 (BREAK -> break puntoYcoma .)
    $end            reduce using rule 18 (BREAK -> break puntoYcoma .)
    llave_Cierra    reduce using rule 18 (BREAK -> break puntoYcoma .)


state 38

    (19) CONTINUE -> continue puntoYcoma .

    console         reduce using rule 19 (CONTINUE -> continue puntoYcoma .)
    if              reduce using rule 19 (CONTINUE -> continue puntoYcoma .)
    while           reduce using rule 19 (CONTINUE -> continue puntoYcoma .)
    break           reduce using rule 19 (CONTINUE -> continue puntoYcoma .)
    continue        reduce using rule 19 (CONTINUE -> continue puntoYcoma .)
    for             reduce using rule 19 (CONTINUE -> continue puntoYcoma .)
    id              reduce using rule 19 (CONTINUE -> continue puntoYcoma .)
    fn              reduce using rule 19 (CONTINUE -> continue puntoYcoma .)
    let             reduce using rule 19 (CONTINUE -> continue puntoYcoma .)
    $end            reduce using rule 19 (CONTINUE -> continue puntoYcoma .)
    llave_Cierra    reduce using rule 19 (CONTINUE -> continue puntoYcoma .)


state 39

    (14) FOR -> for p_Abre . DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra

    let             shift and go to state 23

    DECLARACION                    shift and go to state 65

state 40

    (35) INCREMENTO -> id incremento .

    puntoYcoma      reduce using rule 35 (INCREMENTO -> id incremento .)
    p_Cierra        reduce using rule 35 (INCREMENTO -> id incremento .)


state 41

    (36) DECREMENTO -> id decremento .

    puntoYcoma      reduce using rule 36 (DECREMENTO -> id decremento .)
    p_Cierra        reduce using rule 36 (DECREMENTO -> id decremento .)


state 42

    (33) ASIGNACION -> id igual . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 66
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 43

    (34) ASIGNACION -> id LISTAINDICES . igual EXPRESION
    (40) LISTAINDICES -> LISTAINDICES . c_Abre EXPRESION c_Cierra

    igual           shift and go to state 67
    c_Abre          shift and go to state 68


state 44

    (41) LISTAINDICES -> c_Abre . EXPRESION c_Cierra
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 69
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 45

    (13) FUNC -> fn id . p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 70


state 46

    (26) DECLARACION -> let id . igual EXPRESION
    (27) DECLARACION -> let id . dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> let id .
    (29) DECLARACION -> let id . dosPuntos TIPO
    (30) DECLARACION -> let id . dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> let id . dosPuntos TIPO c_Abre c_Cierra

    igual           shift and go to state 71
    dosPuntos       shift and go to state 72
    puntoYcoma      reduce using rule 28 (DECLARACION -> let id .)


state 47

    (37) IMPRIMIR -> console punto log . p_Abre LISTAEXPRESIONES p_Cierra

    p_Abre          shift and go to state 73


state 48

    (21) IF -> if p_Abre EXPRESION . p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 74
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 49

    (48) EXPRESION -> resta . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 89
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 50

    (51) EXPRESION -> not . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 90
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 51

    (58) EXPRESION -> FUNCION_TOFIXED .

    p_Cierra        reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    suma            reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    resta           reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    multiplicacion  reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    division        reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    potencia        reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    modulo          reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    and             reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    or              reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    mayor           reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    mayorigual      reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    menor           reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    menorigual      reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    igualacion      reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    diferente       reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    puntoYcoma      reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    c_Cierra        reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)
    coma            reduce using rule 58 (EXPRESION -> FUNCION_TOFIXED .)


state 52

    (59) EXPRESION -> FUNCION_TOEXPONENTIAL .

    p_Cierra        reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    suma            reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    resta           reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    multiplicacion  reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    division        reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    potencia        reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    modulo          reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    and             reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    or              reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    mayor           reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    mayorigual      reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    menor           reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    menorigual      reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    igualacion      reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    diferente       reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    puntoYcoma      reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    c_Cierra        reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    coma            reduce using rule 59 (EXPRESION -> FUNCION_TOEXPONENTIAL .)


state 53

    (60) EXPRESION -> FUNCION_TOSTRING .

    p_Cierra        reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    suma            reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    resta           reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    multiplicacion  reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    division        reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    potencia        reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    modulo          reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    and             reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    or              reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    mayor           reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    mayorigual      reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    menor           reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    menorigual      reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    igualacion      reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    diferente       reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    puntoYcoma      reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    c_Cierra        reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)
    coma            reduce using rule 60 (EXPRESION -> FUNCION_TOSTRING .)


state 54

    (61) EXPRESION -> FUNCION_TOLOWERCASE .

    p_Cierra        reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    suma            reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    resta           reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    multiplicacion  reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    division        reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    potencia        reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    modulo          reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    and             reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    or              reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    mayor           reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    mayorigual      reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    menor           reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    menorigual      reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    igualacion      reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    diferente       reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    puntoYcoma      reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    c_Cierra        reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)
    coma            reduce using rule 61 (EXPRESION -> FUNCION_TOLOWERCASE .)


state 55

    (62) EXPRESION -> FUNCION_TOUPPERCASE .

    p_Cierra        reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    suma            reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    resta           reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    multiplicacion  reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    division        reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    potencia        reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    modulo          reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    and             reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    or              reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    mayor           reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    mayorigual      reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    menor           reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    menorigual      reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    igualacion      reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    diferente       reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    puntoYcoma      reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    c_Cierra        reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)
    coma            reduce using rule 62 (EXPRESION -> FUNCION_TOUPPERCASE .)


state 56

    (63) EXPRESION -> FUNCION_SPLIT .

    p_Cierra        reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    suma            reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    resta           reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    multiplicacion  reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    division        reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    potencia        reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    modulo          reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    and             reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    or              reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    mayor           reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    mayorigual      reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    menor           reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    menorigual      reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    igualacion      reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    diferente       reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    puntoYcoma      reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    c_Cierra        reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)
    coma            reduce using rule 63 (EXPRESION -> FUNCION_SPLIT .)


state 57

    (70) EXPRESION -> cadena .

    p_Cierra        reduce using rule 70 (EXPRESION -> cadena .)
    suma            reduce using rule 70 (EXPRESION -> cadena .)
    resta           reduce using rule 70 (EXPRESION -> cadena .)
    multiplicacion  reduce using rule 70 (EXPRESION -> cadena .)
    division        reduce using rule 70 (EXPRESION -> cadena .)
    potencia        reduce using rule 70 (EXPRESION -> cadena .)
    modulo          reduce using rule 70 (EXPRESION -> cadena .)
    and             reduce using rule 70 (EXPRESION -> cadena .)
    or              reduce using rule 70 (EXPRESION -> cadena .)
    mayor           reduce using rule 70 (EXPRESION -> cadena .)
    mayorigual      reduce using rule 70 (EXPRESION -> cadena .)
    menor           reduce using rule 70 (EXPRESION -> cadena .)
    menorigual      reduce using rule 70 (EXPRESION -> cadena .)
    igualacion      reduce using rule 70 (EXPRESION -> cadena .)
    diferente       reduce using rule 70 (EXPRESION -> cadena .)
    puntoYcoma      reduce using rule 70 (EXPRESION -> cadena .)
    c_Cierra        reduce using rule 70 (EXPRESION -> cadena .)
    coma            reduce using rule 70 (EXPRESION -> cadena .)


state 58

    (71) EXPRESION -> numero .

    p_Cierra        reduce using rule 71 (EXPRESION -> numero .)
    suma            reduce using rule 71 (EXPRESION -> numero .)
    resta           reduce using rule 71 (EXPRESION -> numero .)
    multiplicacion  reduce using rule 71 (EXPRESION -> numero .)
    division        reduce using rule 71 (EXPRESION -> numero .)
    potencia        reduce using rule 71 (EXPRESION -> numero .)
    modulo          reduce using rule 71 (EXPRESION -> numero .)
    and             reduce using rule 71 (EXPRESION -> numero .)
    or              reduce using rule 71 (EXPRESION -> numero .)
    mayor           reduce using rule 71 (EXPRESION -> numero .)
    mayorigual      reduce using rule 71 (EXPRESION -> numero .)
    menor           reduce using rule 71 (EXPRESION -> numero .)
    menorigual      reduce using rule 71 (EXPRESION -> numero .)
    igualacion      reduce using rule 71 (EXPRESION -> numero .)
    diferente       reduce using rule 71 (EXPRESION -> numero .)
    puntoYcoma      reduce using rule 71 (EXPRESION -> numero .)
    c_Cierra        reduce using rule 71 (EXPRESION -> numero .)
    coma            reduce using rule 71 (EXPRESION -> numero .)


state 59

    (72) EXPRESION -> true .

    p_Cierra        reduce using rule 72 (EXPRESION -> true .)
    suma            reduce using rule 72 (EXPRESION -> true .)
    resta           reduce using rule 72 (EXPRESION -> true .)
    multiplicacion  reduce using rule 72 (EXPRESION -> true .)
    division        reduce using rule 72 (EXPRESION -> true .)
    potencia        reduce using rule 72 (EXPRESION -> true .)
    modulo          reduce using rule 72 (EXPRESION -> true .)
    and             reduce using rule 72 (EXPRESION -> true .)
    or              reduce using rule 72 (EXPRESION -> true .)
    mayor           reduce using rule 72 (EXPRESION -> true .)
    mayorigual      reduce using rule 72 (EXPRESION -> true .)
    menor           reduce using rule 72 (EXPRESION -> true .)
    menorigual      reduce using rule 72 (EXPRESION -> true .)
    igualacion      reduce using rule 72 (EXPRESION -> true .)
    diferente       reduce using rule 72 (EXPRESION -> true .)
    puntoYcoma      reduce using rule 72 (EXPRESION -> true .)
    c_Cierra        reduce using rule 72 (EXPRESION -> true .)
    coma            reduce using rule 72 (EXPRESION -> true .)


state 60

    (73) EXPRESION -> false .

    p_Cierra        reduce using rule 73 (EXPRESION -> false .)
    suma            reduce using rule 73 (EXPRESION -> false .)
    resta           reduce using rule 73 (EXPRESION -> false .)
    multiplicacion  reduce using rule 73 (EXPRESION -> false .)
    division        reduce using rule 73 (EXPRESION -> false .)
    potencia        reduce using rule 73 (EXPRESION -> false .)
    modulo          reduce using rule 73 (EXPRESION -> false .)
    and             reduce using rule 73 (EXPRESION -> false .)
    or              reduce using rule 73 (EXPRESION -> false .)
    mayor           reduce using rule 73 (EXPRESION -> false .)
    mayorigual      reduce using rule 73 (EXPRESION -> false .)
    menor           reduce using rule 73 (EXPRESION -> false .)
    menorigual      reduce using rule 73 (EXPRESION -> false .)
    igualacion      reduce using rule 73 (EXPRESION -> false .)
    diferente       reduce using rule 73 (EXPRESION -> false .)
    puntoYcoma      reduce using rule 73 (EXPRESION -> false .)
    c_Cierra        reduce using rule 73 (EXPRESION -> false .)
    coma            reduce using rule 73 (EXPRESION -> false .)


state 61

    (74) EXPRESION -> null .

    p_Cierra        reduce using rule 74 (EXPRESION -> null .)
    suma            reduce using rule 74 (EXPRESION -> null .)
    resta           reduce using rule 74 (EXPRESION -> null .)
    multiplicacion  reduce using rule 74 (EXPRESION -> null .)
    division        reduce using rule 74 (EXPRESION -> null .)
    potencia        reduce using rule 74 (EXPRESION -> null .)
    modulo          reduce using rule 74 (EXPRESION -> null .)
    and             reduce using rule 74 (EXPRESION -> null .)
    or              reduce using rule 74 (EXPRESION -> null .)
    mayor           reduce using rule 74 (EXPRESION -> null .)
    mayorigual      reduce using rule 74 (EXPRESION -> null .)
    menor           reduce using rule 74 (EXPRESION -> null .)
    menorigual      reduce using rule 74 (EXPRESION -> null .)
    igualacion      reduce using rule 74 (EXPRESION -> null .)
    diferente       reduce using rule 74 (EXPRESION -> null .)
    puntoYcoma      reduce using rule 74 (EXPRESION -> null .)
    c_Cierra        reduce using rule 74 (EXPRESION -> null .)
    coma            reduce using rule 74 (EXPRESION -> null .)


state 62

    (75) EXPRESION -> id .
    (76) EXPRESION -> id . LISTAINDICES
    (64) FUNCION_TOFIXED -> id . punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> id . punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> id . punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> id . punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> id . punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> id . punto split p_Abre cadena p_Cierra
    (40) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (41) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    p_Cierra        reduce using rule 75 (EXPRESION -> id .)
    suma            reduce using rule 75 (EXPRESION -> id .)
    resta           reduce using rule 75 (EXPRESION -> id .)
    multiplicacion  reduce using rule 75 (EXPRESION -> id .)
    division        reduce using rule 75 (EXPRESION -> id .)
    potencia        reduce using rule 75 (EXPRESION -> id .)
    modulo          reduce using rule 75 (EXPRESION -> id .)
    and             reduce using rule 75 (EXPRESION -> id .)
    or              reduce using rule 75 (EXPRESION -> id .)
    mayor           reduce using rule 75 (EXPRESION -> id .)
    mayorigual      reduce using rule 75 (EXPRESION -> id .)
    menor           reduce using rule 75 (EXPRESION -> id .)
    menorigual      reduce using rule 75 (EXPRESION -> id .)
    igualacion      reduce using rule 75 (EXPRESION -> id .)
    diferente       reduce using rule 75 (EXPRESION -> id .)
    puntoYcoma      reduce using rule 75 (EXPRESION -> id .)
    c_Cierra        reduce using rule 75 (EXPRESION -> id .)
    coma            reduce using rule 75 (EXPRESION -> id .)
    punto           shift and go to state 92
    c_Abre          shift and go to state 44

    LISTAINDICES                   shift and go to state 91

state 63

    (77) EXPRESION -> c_Abre . LISTAEXPRESIONES c_Cierra
    (38) LISTAEXPRESIONES -> . LISTAEXPRESIONES coma EXPRESION
    (39) LISTAEXPRESIONES -> . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    LISTAEXPRESIONES               shift and go to state 93
    EXPRESION                      shift and go to state 94
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 64

    (20) WHILE -> while p_Abre EXPRESION . p_Cierra llave_Abre ENTRADAS llave_Cierra
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 95
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 65

    (14) FOR -> for p_Abre DECLARACION . puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra

    puntoYcoma      shift and go to state 96


state 66

    (33) ASIGNACION -> id igual EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 33 (ASIGNACION -> id igual EXPRESION .)
    p_Cierra        reduce using rule 33 (ASIGNACION -> id igual EXPRESION .)
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 67

    (34) ASIGNACION -> id LISTAINDICES igual . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 97
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 68

    (40) LISTAINDICES -> LISTAINDICES c_Abre . EXPRESION c_Cierra
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 98
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 69

    (41) LISTAINDICES -> c_Abre EXPRESION . c_Cierra
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        shift and go to state 99
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 70

    (13) FUNC -> fn id p_Abre . p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Cierra        shift and go to state 100


state 71

    (26) DECLARACION -> let id igual . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 101
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 72

    (27) DECLARACION -> let id dosPuntos . TIPO igual EXPRESION
    (29) DECLARACION -> let id dosPuntos . TIPO
    (30) DECLARACION -> let id dosPuntos . TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> let id dosPuntos . TIPO c_Abre c_Cierra
    (78) TIPO -> . number
    (79) TIPO -> . string
    (80) TIPO -> . boolean
    (81) TIPO -> . any

    number          shift and go to state 103
    string          shift and go to state 104
    boolean         shift and go to state 105
    any             shift and go to state 106

    TIPO                           shift and go to state 102

state 73

    (37) IMPRIMIR -> console punto log p_Abre . LISTAEXPRESIONES p_Cierra
    (38) LISTAEXPRESIONES -> . LISTAEXPRESIONES coma EXPRESION
    (39) LISTAEXPRESIONES -> . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    LISTAEXPRESIONES               shift and go to state 107
    EXPRESION                      shift and go to state 94
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 74

    (21) IF -> if p_Abre EXPRESION p_Cierra . llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    llave_Abre      shift and go to state 108


state 75

    (42) EXPRESION -> EXPRESION suma . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 109
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 76

    (43) EXPRESION -> EXPRESION resta . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 110
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 77

    (44) EXPRESION -> EXPRESION multiplicacion . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 111
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 78

    (45) EXPRESION -> EXPRESION division . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 112
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 79

    (46) EXPRESION -> EXPRESION potencia . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 113
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 80

    (47) EXPRESION -> EXPRESION modulo . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 114
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 81

    (49) EXPRESION -> EXPRESION and . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 115
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 82

    (50) EXPRESION -> EXPRESION or . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 116
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 83

    (52) EXPRESION -> EXPRESION mayor . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 117
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 84

    (53) EXPRESION -> EXPRESION mayorigual . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 118
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 85

    (54) EXPRESION -> EXPRESION menor . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 119
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 86

    (55) EXPRESION -> EXPRESION menorigual . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 120
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 87

    (56) EXPRESION -> EXPRESION igualacion . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 121
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 88

    (57) EXPRESION -> EXPRESION diferente . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 122
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 89

    (48) EXPRESION -> resta EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    suma            reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    resta           reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    multiplicacion  reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    division        reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    potencia        reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    modulo          reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    and             reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    or              reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    mayor           reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    mayorigual      reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    menor           reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    menorigual      reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    igualacion      reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    diferente       reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    puntoYcoma      reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    c_Cierra        reduce using rule 48 (EXPRESION -> resta EXPRESION .)
    coma            reduce using rule 48 (EXPRESION -> resta EXPRESION .)

  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! multiplicacion  [ shift and go to state 77 ]
  ! division        [ shift and go to state 78 ]
  ! potencia        [ shift and go to state 79 ]
  ! modulo          [ shift and go to state 80 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 90

    (51) EXPRESION -> not EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 51 (EXPRESION -> not EXPRESION .)
    suma            reduce using rule 51 (EXPRESION -> not EXPRESION .)
    resta           reduce using rule 51 (EXPRESION -> not EXPRESION .)
    multiplicacion  reduce using rule 51 (EXPRESION -> not EXPRESION .)
    division        reduce using rule 51 (EXPRESION -> not EXPRESION .)
    potencia        reduce using rule 51 (EXPRESION -> not EXPRESION .)
    modulo          reduce using rule 51 (EXPRESION -> not EXPRESION .)
    and             reduce using rule 51 (EXPRESION -> not EXPRESION .)
    or              reduce using rule 51 (EXPRESION -> not EXPRESION .)
    mayor           reduce using rule 51 (EXPRESION -> not EXPRESION .)
    mayorigual      reduce using rule 51 (EXPRESION -> not EXPRESION .)
    menor           reduce using rule 51 (EXPRESION -> not EXPRESION .)
    menorigual      reduce using rule 51 (EXPRESION -> not EXPRESION .)
    igualacion      reduce using rule 51 (EXPRESION -> not EXPRESION .)
    diferente       reduce using rule 51 (EXPRESION -> not EXPRESION .)
    puntoYcoma      reduce using rule 51 (EXPRESION -> not EXPRESION .)
    c_Cierra        reduce using rule 51 (EXPRESION -> not EXPRESION .)
    coma            reduce using rule 51 (EXPRESION -> not EXPRESION .)

  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! multiplicacion  [ shift and go to state 77 ]
  ! division        [ shift and go to state 78 ]
  ! potencia        [ shift and go to state 79 ]
  ! modulo          [ shift and go to state 80 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 91

    (76) EXPRESION -> id LISTAINDICES .
    (40) LISTAINDICES -> LISTAINDICES . c_Abre EXPRESION c_Cierra

    p_Cierra        reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    suma            reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    resta           reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    multiplicacion  reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    division        reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    potencia        reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    modulo          reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    and             reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    or              reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    mayor           reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    mayorigual      reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    menor           reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    menorigual      reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    igualacion      reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    diferente       reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    puntoYcoma      reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    c_Cierra        reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    coma            reduce using rule 76 (EXPRESION -> id LISTAINDICES .)
    c_Abre          shift and go to state 68


state 92

    (64) FUNCION_TOFIXED -> id punto . toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> id punto . toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> id punto . toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> id punto . toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> id punto . toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> id punto . split p_Abre cadena p_Cierra

    toFixed         shift and go to state 123
    toExponential   shift and go to state 124
    toString        shift and go to state 125
    toLowerCase     shift and go to state 126
    toUpperCase     shift and go to state 127
    split           shift and go to state 128


state 93

    (77) EXPRESION -> c_Abre LISTAEXPRESIONES . c_Cierra
    (38) LISTAEXPRESIONES -> LISTAEXPRESIONES . coma EXPRESION

    c_Cierra        shift and go to state 129
    coma            shift and go to state 130


state 94

    (39) LISTAEXPRESIONES -> EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        reduce using rule 39 (LISTAEXPRESIONES -> EXPRESION .)
    coma            reduce using rule 39 (LISTAEXPRESIONES -> EXPRESION .)
    p_Cierra        reduce using rule 39 (LISTAEXPRESIONES -> EXPRESION .)
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 95

    (20) WHILE -> while p_Abre EXPRESION p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 131


state 96

    (14) FOR -> for p_Abre DECLARACION puntoYcoma . EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 132
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 97

    (34) ASIGNACION -> id LISTAINDICES igual EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 34 (ASIGNACION -> id LISTAINDICES igual EXPRESION .)
    p_Cierra        reduce using rule 34 (ASIGNACION -> id LISTAINDICES igual EXPRESION .)
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 98

    (40) LISTAINDICES -> LISTAINDICES c_Abre EXPRESION . c_Cierra
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        shift and go to state 133
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 99

    (41) LISTAINDICES -> c_Abre EXPRESION c_Cierra .

    igual           reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    c_Abre          reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    p_Cierra        reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    suma            reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    resta           reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    multiplicacion  reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    division        reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    potencia        reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    modulo          reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    and             reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    or              reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    mayor           reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    mayorigual      reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    menor           reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    menorigual      reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    igualacion      reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    diferente       reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    puntoYcoma      reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    c_Cierra        reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    coma            reduce using rule 41 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)


state 100

    (13) FUNC -> fn id p_Abre p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 134


state 101

    (26) DECLARACION -> let id igual EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 26 (DECLARACION -> let id igual EXPRESION .)
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 102

    (27) DECLARACION -> let id dosPuntos TIPO . igual EXPRESION
    (29) DECLARACION -> let id dosPuntos TIPO .
    (30) DECLARACION -> let id dosPuntos TIPO . c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> let id dosPuntos TIPO . c_Abre c_Cierra

    igual           shift and go to state 135
    puntoYcoma      reduce using rule 29 (DECLARACION -> let id dosPuntos TIPO .)
    c_Abre          shift and go to state 136


state 103

    (78) TIPO -> number .

    igual           reduce using rule 78 (TIPO -> number .)
    c_Abre          reduce using rule 78 (TIPO -> number .)
    puntoYcoma      reduce using rule 78 (TIPO -> number .)


state 104

    (79) TIPO -> string .

    igual           reduce using rule 79 (TIPO -> string .)
    c_Abre          reduce using rule 79 (TIPO -> string .)
    puntoYcoma      reduce using rule 79 (TIPO -> string .)


state 105

    (80) TIPO -> boolean .

    igual           reduce using rule 80 (TIPO -> boolean .)
    c_Abre          reduce using rule 80 (TIPO -> boolean .)
    puntoYcoma      reduce using rule 80 (TIPO -> boolean .)


state 106

    (81) TIPO -> any .

    igual           reduce using rule 81 (TIPO -> any .)
    c_Abre          reduce using rule 81 (TIPO -> any .)
    puntoYcoma      reduce using rule 81 (TIPO -> any .)


state 107

    (37) IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES . p_Cierra
    (38) LISTAEXPRESIONES -> LISTAEXPRESIONES . coma EXPRESION

    p_Cierra        shift and go to state 137
    coma            shift and go to state 130


state 108

    (21) IF -> if p_Abre EXPRESION p_Cierra llave_Abre . ENTRADAS llave_Cierra COMPLEMENTO_IF
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    ENTRADAS                       shift and go to state 138
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    DECLARACION                    shift and go to state 13
    ASIGNACION                     shift and go to state 14

state 109

    (42) EXPRESION -> EXPRESION suma EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .)
    suma            reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .)
    resta           reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .)
    and             reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .)
    or              reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .)
    puntoYcoma      reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .)
    c_Cierra        reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .)
    coma            reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .)
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88

  ! multiplicacion  [ reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! division        [ reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! potencia        [ reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! modulo          [ reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! mayor           [ reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! mayorigual      [ reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! menor           [ reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! menorigual      [ reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! igualacion      [ reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! diferente       [ reduce using rule 42 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]


state 110

    (43) EXPRESION -> EXPRESION resta EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .)
    suma            reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .)
    resta           reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .)
    and             reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .)
    or              reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .)
    puntoYcoma      reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .)
    c_Cierra        reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .)
    coma            reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .)
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88

  ! multiplicacion  [ reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! division        [ reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! potencia        [ reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! modulo          [ reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! mayor           [ reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! mayorigual      [ reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! menor           [ reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! menorigual      [ reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! igualacion      [ reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! diferente       [ reduce using rule 43 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]


state 111

    (44) EXPRESION -> EXPRESION multiplicacion EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    suma            reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    resta           reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    multiplicacion  reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    division        reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    modulo          reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    and             reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    or              reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    mayor           reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    mayorigual      reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    menor           reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    menorigual      reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    igualacion      reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    diferente       reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    puntoYcoma      reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    c_Cierra        reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    coma            reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    potencia        shift and go to state 79

  ! potencia        [ reduce using rule 44 (EXPRESION -> EXPRESION multiplicacion EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! multiplicacion  [ shift and go to state 77 ]
  ! division        [ shift and go to state 78 ]
  ! modulo          [ shift and go to state 80 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 112

    (45) EXPRESION -> EXPRESION division EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    suma            reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    resta           reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    multiplicacion  reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    division        reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    modulo          reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    and             reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    or              reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    mayor           reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    mayorigual      reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    menor           reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    menorigual      reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    igualacion      reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    diferente       reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    puntoYcoma      reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    c_Cierra        reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    coma            reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .)
    potencia        shift and go to state 79

  ! potencia        [ reduce using rule 45 (EXPRESION -> EXPRESION division EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! multiplicacion  [ shift and go to state 77 ]
  ! division        [ shift and go to state 78 ]
  ! modulo          [ shift and go to state 80 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 113

    (46) EXPRESION -> EXPRESION potencia EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    suma            reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    resta           reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    multiplicacion  reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    division        reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    potencia        reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    modulo          reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    and             reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    or              reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    mayor           reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    mayorigual      reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    menor           reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    menorigual      reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    igualacion      reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    diferente       reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    puntoYcoma      reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    c_Cierra        reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)
    coma            reduce using rule 46 (EXPRESION -> EXPRESION potencia EXPRESION .)

  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! multiplicacion  [ shift and go to state 77 ]
  ! division        [ shift and go to state 78 ]
  ! potencia        [ shift and go to state 79 ]
  ! modulo          [ shift and go to state 80 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 114

    (47) EXPRESION -> EXPRESION modulo EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    suma            reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    resta           reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    multiplicacion  reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    division        reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    modulo          reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    and             reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    or              reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayor           reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorigual      reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menor           reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorigual      reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    igualacion      reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    diferente       reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    puntoYcoma      reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    c_Cierra        reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    coma            reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .)
    potencia        shift and go to state 79

  ! potencia        [ reduce using rule 47 (EXPRESION -> EXPRESION modulo EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! multiplicacion  [ shift and go to state 77 ]
  ! division        [ shift and go to state 78 ]
  ! modulo          [ shift and go to state 80 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 115

    (49) EXPRESION -> EXPRESION and EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .)
    and             reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .)
    or              reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .)
    puntoYcoma      reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .)
    c_Cierra        reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .)
    coma            reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .)
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88

  ! suma            [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! resta           [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! multiplicacion  [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! division        [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! potencia        [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! modulo          [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayor           [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayorigual      [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menor           [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menorigual      [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! igualacion      [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! diferente       [ reduce using rule 49 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]


state 116

    (50) EXPRESION -> EXPRESION or EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .)
    or              reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .)
    puntoYcoma      reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .)
    c_Cierra        reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .)
    coma            reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .)
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88

  ! suma            [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! resta           [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! multiplicacion  [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! division        [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! potencia        [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! modulo          [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! and             [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayor           [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayorigual      [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menor           [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menorigual      [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! igualacion      [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! diferente       [ reduce using rule 50 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! or              [ shift and go to state 82 ]


state 117

    (52) EXPRESION -> EXPRESION mayor EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    suma            reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    resta           reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    and             reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    or              reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mayor           reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mayorigual      reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menor           reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menorigual      reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    igualacion      reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    diferente       reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    puntoYcoma      reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    c_Cierra        reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    coma            reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .)
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80

  ! multiplicacion  [ reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! division        [ reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! potencia        [ reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! modulo          [ reduce using rule 52 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 118

    (53) EXPRESION -> EXPRESION mayorigual EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    suma            reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    resta           reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    and             reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    or              reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mayor           reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mayorigual      reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menor           reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menorigual      reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    igualacion      reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    diferente       reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    puntoYcoma      reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    c_Cierra        reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    coma            reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80

  ! multiplicacion  [ reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! division        [ reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! potencia        [ reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! modulo          [ reduce using rule 53 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 119

    (54) EXPRESION -> EXPRESION menor EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    suma            reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    resta           reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    and             reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    or              reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    mayor           reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    mayorigual      reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    menor           reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    menorigual      reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    igualacion      reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    diferente       reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    puntoYcoma      reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    c_Cierra        reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    coma            reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .)
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80

  ! multiplicacion  [ reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! division        [ reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! potencia        [ reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! modulo          [ reduce using rule 54 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 120

    (55) EXPRESION -> EXPRESION menorigual EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    suma            reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    resta           reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    and             reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    or              reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mayor           reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mayorigual      reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menor           reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menorigual      reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    igualacion      reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    diferente       reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    puntoYcoma      reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    c_Cierra        reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    coma            reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80

  ! multiplicacion  [ reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! division        [ reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! potencia        [ reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! modulo          [ reduce using rule 55 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 121

    (56) EXPRESION -> EXPRESION igualacion EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    suma            reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    resta           reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    and             reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    or              reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    mayor           reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    mayorigual      reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    menor           reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    menorigual      reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    igualacion      reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    diferente       reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    puntoYcoma      reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    c_Cierra        reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    coma            reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80

  ! multiplicacion  [ reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! division        [ reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! potencia        [ reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! modulo          [ reduce using rule 56 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 122

    (57) EXPRESION -> EXPRESION diferente EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    suma            reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    resta           reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    and             reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    or              reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mayor           reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mayorigual      reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menor           reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menorigual      reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    igualacion      reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    diferente       reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    puntoYcoma      reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    c_Cierra        reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    coma            reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .)
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80

  ! multiplicacion  [ reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! division        [ reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! potencia        [ reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! modulo          [ reduce using rule 57 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! suma            [ shift and go to state 75 ]
  ! resta           [ shift and go to state 76 ]
  ! and             [ shift and go to state 81 ]
  ! or              [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! mayorigual      [ shift and go to state 84 ]
  ! menor           [ shift and go to state 85 ]
  ! menorigual      [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferente       [ shift and go to state 88 ]


state 123

    (64) FUNCION_TOFIXED -> id punto toFixed . p_Abre EXPRESION p_Cierra

    p_Abre          shift and go to state 139


state 124

    (65) FUNCION_TOEXPONENTIAL -> id punto toExponential . p_Abre EXPRESION p_Cierra

    p_Abre          shift and go to state 140


state 125

    (66) FUNCION_TOSTRING -> id punto toString . p_Abre p_Cierra

    p_Abre          shift and go to state 141


state 126

    (67) FUNCION_TOLOWERCASE -> id punto toLowerCase . p_Abre p_Cierra

    p_Abre          shift and go to state 142


state 127

    (68) FUNCION_TOUPPERCASE -> id punto toUpperCase . p_Abre p_Cierra

    p_Abre          shift and go to state 143


state 128

    (69) FUNCION_SPLIT -> id punto split . p_Abre cadena p_Cierra

    p_Abre          shift and go to state 144


state 129

    (77) EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .

    p_Cierra        reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    suma            reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    resta           reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    multiplicacion  reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    division        reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    potencia        reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    modulo          reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    and             reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    or              reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    mayor           reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    mayorigual      reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    menor           reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    menorigual      reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    igualacion      reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    diferente       reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    puntoYcoma      reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    c_Cierra        reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    coma            reduce using rule 77 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)


state 130

    (38) LISTAEXPRESIONES -> LISTAEXPRESIONES coma . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 145
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 131

    (20) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    ENTRADAS                       shift and go to state 146
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    DECLARACION                    shift and go to state 13
    ASIGNACION                     shift and go to state 14

state 132

    (14) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION . puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      shift and go to state 147
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 133

    (40) LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .

    igual           reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    c_Abre          reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    p_Cierra        reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    suma            reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    resta           reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    multiplicacion  reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    division        reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    potencia        reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    modulo          reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    and             reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    or              reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    mayor           reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    mayorigual      reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    menor           reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    menorigual      reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    igualacion      reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    diferente       reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    puntoYcoma      reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    c_Cierra        reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    coma            reduce using rule 40 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)


state 134

    (13) FUNC -> fn id p_Abre p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    ENTRADAS                       shift and go to state 148
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    DECLARACION                    shift and go to state 13
    ASIGNACION                     shift and go to state 14

state 135

    (27) DECLARACION -> let id dosPuntos TIPO igual . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 149
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 136

    (30) DECLARACION -> let id dosPuntos TIPO c_Abre . c_Cierra igual EXPRESION
    (31) DECLARACION -> let id dosPuntos TIPO c_Abre . c_Cierra

    c_Cierra        shift and go to state 150


state 137

    (37) IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra .

    puntoYcoma      reduce using rule 37 (IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra .)


state 138

    (21) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS . llave_Cierra COMPLEMENTO_IF
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 151
    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    ENTRADA                        shift and go to state 24
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    DECLARACION                    shift and go to state 13
    ASIGNACION                     shift and go to state 14

state 139

    (64) FUNCION_TOFIXED -> id punto toFixed p_Abre . EXPRESION p_Cierra
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 152
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 140

    (65) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre . EXPRESION p_Cierra
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 153
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 141

    (66) FUNCION_TOSTRING -> id punto toString p_Abre . p_Cierra

    p_Cierra        shift and go to state 154


state 142

    (67) FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre . p_Cierra

    p_Cierra        shift and go to state 155


state 143

    (68) FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre . p_Cierra

    p_Cierra        shift and go to state 156


state 144

    (69) FUNCION_SPLIT -> id punto split p_Abre . cadena p_Cierra

    cadena          shift and go to state 157


state 145

    (38) LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        reduce using rule 38 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    coma            reduce using rule 38 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    p_Cierra        reduce using rule 38 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 146

    (20) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 158
    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    ENTRADA                        shift and go to state 24
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    DECLARACION                    shift and go to state 13
    ASIGNACION                     shift and go to state 14

state 147

    (14) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma . FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (15) FORITERADOR -> . ASIGNACION
    (16) FORITERADOR -> . INCREMENTO
    (17) FORITERADOR -> . DECREMENTO
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento

    id              shift and go to state 163

    FORITERADOR                    shift and go to state 159
    ASIGNACION                     shift and go to state 160
    INCREMENTO                     shift and go to state 161
    DECREMENTO                     shift and go to state 162

state 148

    (13) FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 164
    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    ENTRADA                        shift and go to state 24
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    DECLARACION                    shift and go to state 13
    ASIGNACION                     shift and go to state 14

state 149

    (27) DECLARACION -> let id dosPuntos TIPO igual EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 27 (DECLARACION -> let id dosPuntos TIPO igual EXPRESION .)
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 150

    (30) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra . igual EXPRESION
    (31) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra .

    igual           shift and go to state 165
    puntoYcoma      reduce using rule 31 (DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra .)


state 151

    (21) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra . COMPLEMENTO_IF
    (22) COMPLEMENTO_IF -> . else IF
    (23) COMPLEMENTO_IF -> . else llave_Abre ENTRADAS llave_Cierra
    (24) COMPLEMENTO_IF -> .

    else            shift and go to state 167
    puntoYcoma      reduce using rule 24 (COMPLEMENTO_IF -> .)

    COMPLEMENTO_IF                 shift and go to state 166

state 152

    (64) FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION . p_Cierra
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 168
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 153

    (65) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION . p_Cierra
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 169
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 154

    (66) FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .

    p_Cierra        reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    suma            reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    resta           reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    multiplicacion  reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    division        reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    potencia        reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    modulo          reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    and             reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    or              reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    mayor           reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    mayorigual      reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    menor           reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    menorigual      reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    igualacion      reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    diferente       reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    puntoYcoma      reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    c_Cierra        reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    coma            reduce using rule 66 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)


state 155

    (67) FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .

    p_Cierra        reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    suma            reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    resta           reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    multiplicacion  reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    division        reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    potencia        reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    modulo          reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    and             reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    or              reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    mayor           reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    mayorigual      reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    menor           reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    menorigual      reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    igualacion      reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    diferente       reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    puntoYcoma      reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    c_Cierra        reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    coma            reduce using rule 67 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)


state 156

    (68) FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .

    p_Cierra        reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    suma            reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    resta           reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    multiplicacion  reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    division        reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    potencia        reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    modulo          reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    and             reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    or              reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    mayor           reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    mayorigual      reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    menor           reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    menorigual      reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    igualacion      reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    diferente       reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    puntoYcoma      reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    c_Cierra        reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    coma            reduce using rule 68 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)


state 157

    (69) FUNCION_SPLIT -> id punto split p_Abre cadena . p_Cierra

    p_Cierra        shift and go to state 170


state 158

    (20) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 20 (WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra .)


state 159

    (14) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR . p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Cierra        shift and go to state 171


state 160

    (15) FORITERADOR -> ASIGNACION .

    p_Cierra        reduce using rule 15 (FORITERADOR -> ASIGNACION .)


state 161

    (16) FORITERADOR -> INCREMENTO .

    p_Cierra        reduce using rule 16 (FORITERADOR -> INCREMENTO .)


state 162

    (17) FORITERADOR -> DECREMENTO .

    p_Cierra        reduce using rule 17 (FORITERADOR -> DECREMENTO .)


state 163

    (33) ASIGNACION -> id . igual EXPRESION
    (34) ASIGNACION -> id . LISTAINDICES igual EXPRESION
    (35) INCREMENTO -> id . incremento
    (36) DECREMENTO -> id . decremento
    (40) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (41) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    igual           shift and go to state 42
    incremento      shift and go to state 40
    decremento      shift and go to state 41
    c_Abre          shift and go to state 44

    LISTAINDICES                   shift and go to state 43

state 164

    (13) FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 13 (FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra .)


state 165

    (30) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual . EXPRESION
    (42) EXPRESION -> . EXPRESION suma EXPRESION
    (43) EXPRESION -> . EXPRESION resta EXPRESION
    (44) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (45) EXPRESION -> . EXPRESION division EXPRESION
    (46) EXPRESION -> . EXPRESION potencia EXPRESION
    (47) EXPRESION -> . EXPRESION modulo EXPRESION
    (48) EXPRESION -> . resta EXPRESION
    (49) EXPRESION -> . EXPRESION and EXPRESION
    (50) EXPRESION -> . EXPRESION or EXPRESION
    (51) EXPRESION -> . not EXPRESION
    (52) EXPRESION -> . EXPRESION mayor EXPRESION
    (53) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (54) EXPRESION -> . EXPRESION menor EXPRESION
    (55) EXPRESION -> . EXPRESION menorigual EXPRESION
    (56) EXPRESION -> . EXPRESION igualacion EXPRESION
    (57) EXPRESION -> . EXPRESION diferente EXPRESION
    (58) EXPRESION -> . FUNCION_TOFIXED
    (59) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (60) EXPRESION -> . FUNCION_TOSTRING
    (61) EXPRESION -> . FUNCION_TOLOWERCASE
    (62) EXPRESION -> . FUNCION_TOUPPERCASE
    (63) EXPRESION -> . FUNCION_SPLIT
    (70) EXPRESION -> . cadena
    (71) EXPRESION -> . numero
    (72) EXPRESION -> . true
    (73) EXPRESION -> . false
    (74) EXPRESION -> . null
    (75) EXPRESION -> . id
    (76) EXPRESION -> . id LISTAINDICES
    (77) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (64) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (65) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (66) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (67) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (68) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (69) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 49
    not             shift and go to state 50
    cadena          shift and go to state 57
    numero          shift and go to state 58
    true            shift and go to state 59
    false           shift and go to state 60
    null            shift and go to state 61
    id              shift and go to state 62
    c_Abre          shift and go to state 63

    EXPRESION                      shift and go to state 172
    FUNCION_TOFIXED                shift and go to state 51
    FUNCION_TOEXPONENTIAL          shift and go to state 52
    FUNCION_TOSTRING               shift and go to state 53
    FUNCION_TOLOWERCASE            shift and go to state 54
    FUNCION_TOUPPERCASE            shift and go to state 55
    FUNCION_SPLIT                  shift and go to state 56

state 166

    (21) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF .

    puntoYcoma      reduce using rule 21 (IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF .)


state 167

    (22) COMPLEMENTO_IF -> else . IF
    (23) COMPLEMENTO_IF -> else . llave_Abre ENTRADAS llave_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    llave_Abre      shift and go to state 174
    if              shift and go to state 16

    IF                             shift and go to state 173

state 168

    (64) FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .

    p_Cierra        reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    suma            reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    resta           reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    multiplicacion  reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    division        reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    potencia        reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    modulo          reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    and             reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    or              reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    mayor           reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    mayorigual      reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    menor           reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    menorigual      reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    igualacion      reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    diferente       reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    puntoYcoma      reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    c_Cierra        reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    coma            reduce using rule 64 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)


state 169

    (65) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .

    p_Cierra        reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    suma            reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    resta           reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    multiplicacion  reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    division        reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    potencia        reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    modulo          reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    and             reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    or              reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    mayor           reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    mayorigual      reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    menor           reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    menorigual      reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    igualacion      reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    diferente       reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    puntoYcoma      reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    c_Cierra        reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    coma            reduce using rule 65 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)


state 170

    (69) FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .

    p_Cierra        reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    suma            reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    resta           reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    multiplicacion  reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    division        reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    potencia        reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    modulo          reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    and             reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    or              reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    mayor           reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    mayorigual      reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    menor           reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    menorigual      reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    igualacion      reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    diferente       reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    puntoYcoma      reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    c_Cierra        reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    coma            reduce using rule 69 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)


state 171

    (14) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 175


state 172

    (30) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION .
    (42) EXPRESION -> EXPRESION . suma EXPRESION
    (43) EXPRESION -> EXPRESION . resta EXPRESION
    (44) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (45) EXPRESION -> EXPRESION . division EXPRESION
    (46) EXPRESION -> EXPRESION . potencia EXPRESION
    (47) EXPRESION -> EXPRESION . modulo EXPRESION
    (49) EXPRESION -> EXPRESION . and EXPRESION
    (50) EXPRESION -> EXPRESION . or EXPRESION
    (52) EXPRESION -> EXPRESION . mayor EXPRESION
    (53) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (54) EXPRESION -> EXPRESION . menor EXPRESION
    (55) EXPRESION -> EXPRESION . menorigual EXPRESION
    (56) EXPRESION -> EXPRESION . igualacion EXPRESION
    (57) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 30 (DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION .)
    suma            shift and go to state 75
    resta           shift and go to state 76
    multiplicacion  shift and go to state 77
    division        shift and go to state 78
    potencia        shift and go to state 79
    modulo          shift and go to state 80
    and             shift and go to state 81
    or              shift and go to state 82
    mayor           shift and go to state 83
    mayorigual      shift and go to state 84
    menor           shift and go to state 85
    menorigual      shift and go to state 86
    igualacion      shift and go to state 87
    diferente       shift and go to state 88


state 173

    (22) COMPLEMENTO_IF -> else IF .

    puntoYcoma      reduce using rule 22 (COMPLEMENTO_IF -> else IF .)


state 174

    (23) COMPLEMENTO_IF -> else llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    ENTRADAS                       shift and go to state 176
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    DECLARACION                    shift and go to state 13
    ASIGNACION                     shift and go to state 14

state 175

    (14) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    DECLARACION                    shift and go to state 13
    ENTRADAS                       shift and go to state 177
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    ASIGNACION                     shift and go to state 14

state 176

    (23) COMPLEMENTO_IF -> else llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 178
    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    ENTRADA                        shift and go to state 24
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    DECLARACION                    shift and go to state 13
    ASIGNACION                     shift and go to state 14

state 177

    (14) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (25) ENTRADA -> . DECLARACION puntoYcoma
    (32) ENTRADA -> . ASIGNACION puntoYcoma
    (37) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (21) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (20) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (18) BREAK -> . break puntoYcoma
    (19) CONTINUE -> . continue puntoYcoma
    (14) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (35) INCREMENTO -> . id incremento
    (36) DECREMENTO -> . id decremento
    (13) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (26) DECLARACION -> . let id igual EXPRESION
    (27) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (28) DECLARACION -> . let id
    (29) DECLARACION -> . let id dosPuntos TIPO
    (30) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (31) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (33) ASIGNACION -> . id igual EXPRESION
    (34) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 179
    console         shift and go to state 15
    if              shift and go to state 16
    while           shift and go to state 17
    break           shift and go to state 18
    continue        shift and go to state 19
    for             shift and go to state 20
    id              shift and go to state 21
    fn              shift and go to state 22
    let             shift and go to state 23

    DECLARACION                    shift and go to state 13
    ENTRADA                        shift and go to state 24
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    ASIGNACION                     shift and go to state 14

state 178

    (23) COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 23 (COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra .)


state 179

    (14) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 14 (FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra .)

