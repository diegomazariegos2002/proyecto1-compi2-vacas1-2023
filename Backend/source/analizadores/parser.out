Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    division
    id
    modulo
    multiplicacion
    potencia
    resta
    suma

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> ENTRADAS
Rule 2     ENTRADAS -> ENTRADAS ENTRADA
Rule 3     ENTRADAS -> ENTRADA
Rule 4     ENTRADA -> IMPRIMIR puntoYcoma
Rule 5     IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra
Rule 6     LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION
Rule 7     LISTAEXPRESIONES -> EXPRESION
Rule 8     EXPRESION -> cadena
Rule 9     EXPRESION -> numero
Rule 10    EXPRESION -> true
Rule 11    EXPRESION -> false
Rule 12    EXPRESION -> null
Rule 13    EXPRESION -> any

Terminals, with rules where they appear

any                  : 13
cadena               : 8
coma                 : 6
console              : 5
division             : 
error                : 
false                : 11
id                   : 
log                  : 5
modulo               : 
multiplicacion       : 
null                 : 12
numero               : 9
p_Abre               : 5
p_Cierra             : 5
potencia             : 
punto                : 5
puntoYcoma           : 4
resta                : 
suma                 : 
true                 : 10

Nonterminals, with rules where they appear

ENTRADA              : 2 3
ENTRADAS             : 1 2
EXPRESION            : 6 7
IMPRIMIR             : 4
INICIO               : 0
LISTAEXPRESIONES     : 5 6

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . ENTRADAS
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra

    console         shift and go to state 5

    INICIO                         shift and go to state 1
    ENTRADAS                       shift and go to state 2
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> ENTRADAS .
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra

    $end            reduce using rule 1 (INICIO -> ENTRADAS .)
    console         shift and go to state 5

    ENTRADA                        shift and go to state 6
    IMPRIMIR                       shift and go to state 4

state 3

    (3) ENTRADAS -> ENTRADA .

    console         reduce using rule 3 (ENTRADAS -> ENTRADA .)
    $end            reduce using rule 3 (ENTRADAS -> ENTRADA .)


state 4

    (4) ENTRADA -> IMPRIMIR . puntoYcoma

    puntoYcoma      shift and go to state 7


state 5

    (5) IMPRIMIR -> console . punto log p_Abre LISTAEXPRESIONES p_Cierra

    punto           shift and go to state 8


state 6

    (2) ENTRADAS -> ENTRADAS ENTRADA .

    console         reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    $end            reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)


state 7

    (4) ENTRADA -> IMPRIMIR puntoYcoma .

    console         reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    $end            reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)


state 8

    (5) IMPRIMIR -> console punto . log p_Abre LISTAEXPRESIONES p_Cierra

    log             shift and go to state 9


state 9

    (5) IMPRIMIR -> console punto log . p_Abre LISTAEXPRESIONES p_Cierra

    p_Abre          shift and go to state 10


state 10

    (5) IMPRIMIR -> console punto log p_Abre . LISTAEXPRESIONES p_Cierra
    (6) LISTAEXPRESIONES -> . LISTAEXPRESIONES coma EXPRESION
    (7) LISTAEXPRESIONES -> . EXPRESION
    (8) EXPRESION -> . cadena
    (9) EXPRESION -> . numero
    (10) EXPRESION -> . true
    (11) EXPRESION -> . false
    (12) EXPRESION -> . null
    (13) EXPRESION -> . any

    cadena          shift and go to state 13
    numero          shift and go to state 14
    true            shift and go to state 15
    false           shift and go to state 16
    null            shift and go to state 17
    any             shift and go to state 18

    LISTAEXPRESIONES               shift and go to state 11
    EXPRESION                      shift and go to state 12

state 11

    (5) IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES . p_Cierra
    (6) LISTAEXPRESIONES -> LISTAEXPRESIONES . coma EXPRESION

    p_Cierra        shift and go to state 19
    coma            shift and go to state 20


state 12

    (7) LISTAEXPRESIONES -> EXPRESION .

    p_Cierra        reduce using rule 7 (LISTAEXPRESIONES -> EXPRESION .)
    coma            reduce using rule 7 (LISTAEXPRESIONES -> EXPRESION .)


state 13

    (8) EXPRESION -> cadena .

    p_Cierra        reduce using rule 8 (EXPRESION -> cadena .)
    coma            reduce using rule 8 (EXPRESION -> cadena .)


state 14

    (9) EXPRESION -> numero .

    p_Cierra        reduce using rule 9 (EXPRESION -> numero .)
    coma            reduce using rule 9 (EXPRESION -> numero .)


state 15

    (10) EXPRESION -> true .

    p_Cierra        reduce using rule 10 (EXPRESION -> true .)
    coma            reduce using rule 10 (EXPRESION -> true .)


state 16

    (11) EXPRESION -> false .

    p_Cierra        reduce using rule 11 (EXPRESION -> false .)
    coma            reduce using rule 11 (EXPRESION -> false .)


state 17

    (12) EXPRESION -> null .

    p_Cierra        reduce using rule 12 (EXPRESION -> null .)
    coma            reduce using rule 12 (EXPRESION -> null .)


state 18

    (13) EXPRESION -> any .

    p_Cierra        reduce using rule 13 (EXPRESION -> any .)
    coma            reduce using rule 13 (EXPRESION -> any .)


state 19

    (5) IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra .

    puntoYcoma      reduce using rule 5 (IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra .)


state 20

    (6) LISTAEXPRESIONES -> LISTAEXPRESIONES coma . EXPRESION
    (8) EXPRESION -> . cadena
    (9) EXPRESION -> . numero
    (10) EXPRESION -> . true
    (11) EXPRESION -> . false
    (12) EXPRESION -> . null
    (13) EXPRESION -> . any

    cadena          shift and go to state 13
    numero          shift and go to state 14
    true            shift and go to state 15
    false           shift and go to state 16
    null            shift and go to state 17
    any             shift and go to state 18

    EXPRESION                      shift and go to state 21

state 21

    (6) LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .

    p_Cierra        reduce using rule 6 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    coma            reduce using rule 6 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)

