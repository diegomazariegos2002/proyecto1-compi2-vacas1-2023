Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    concat

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> ENTRADAS
Rule 2     ENTRADAS -> ENTRADAS ENTRADA
Rule 3     ENTRADAS -> ENTRADA
Rule 4     ENTRADA -> IMPRIMIR puntoYcoma
Rule 5     ENTRADA -> IF puntoYcoma
Rule 6     ENTRADA -> WHILE puntoYcoma
Rule 7     ENTRADA -> BREAK
Rule 8     ENTRADA -> CONTINUE
Rule 9     ENTRADA -> FOR puntoYcoma
Rule 10    ENTRADA -> INCREMENTO puntoYcoma
Rule 11    ENTRADA -> DECREMENTO puntoYcoma
Rule 12    ENTRADA -> FUNC puntoYcoma
Rule 13    ENTRADA -> LLAMADA_FUNCION puntoYcoma
Rule 14    ENTRADA -> RETURN
Rule 15    FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 16    FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 17    PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC
Rule 18    PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC
Rule 19    PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO
Rule 20    PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra
Rule 21    EXPRESION -> LLAMADA_FUNCION
Rule 22    LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
Rule 23    LLAMADA_FUNCION -> id p_Abre p_Cierra
Rule 24    PARAMETROS_LLAMA_FUNC -> EXPRESION
Rule 25    PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION
Rule 26    FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 27    FORITERADOR -> ASIGNACION
Rule 28    FORITERADOR -> INCREMENTO
Rule 29    FORITERADOR -> DECREMENTO
Rule 30    BREAK -> break puntoYcoma
Rule 31    CONTINUE -> continue puntoYcoma
Rule 32    RETURN -> return EXPRESION puntoYcoma
Rule 33    RETURN -> return puntoYcoma
Rule 34    WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 35    IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
Rule 36    COMPLEMENTO_IF -> else IF
Rule 37    COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra
Rule 38    COMPLEMENTO_IF -> <empty>
Rule 39    ENTRADA -> DECLARACION puntoYcoma
Rule 40    DECLARACION -> let id igual EXPRESION
Rule 41    DECLARACION -> let id dosPuntos TIPO igual EXPRESION
Rule 42    DECLARACION -> let id
Rule 43    DECLARACION -> let id dosPuntos TIPO
Rule 44    DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
Rule 45    DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra
Rule 46    ENTRADA -> ASIGNACION puntoYcoma
Rule 47    ASIGNACION -> id igual EXPRESION
Rule 48    ASIGNACION -> id LISTAINDICES igual EXPRESION
Rule 49    INCREMENTO -> id incremento
Rule 50    DECREMENTO -> id decremento
Rule 51    IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra
Rule 52    LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION
Rule 53    LISTAEXPRESIONES -> EXPRESION
Rule 54    LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra
Rule 55    LISTAINDICES -> c_Abre EXPRESION c_Cierra
Rule 56    EXPRESION -> EXPRESION suma EXPRESION
Rule 57    EXPRESION -> EXPRESION resta EXPRESION
Rule 58    EXPRESION -> EXPRESION multiplicacion EXPRESION
Rule 59    EXPRESION -> EXPRESION division EXPRESION
Rule 60    EXPRESION -> EXPRESION potencia EXPRESION
Rule 61    EXPRESION -> EXPRESION modulo EXPRESION
Rule 62    EXPRESION -> resta EXPRESION
Rule 63    EXPRESION -> EXPRESION and EXPRESION
Rule 64    EXPRESION -> EXPRESION or EXPRESION
Rule 65    EXPRESION -> not EXPRESION
Rule 66    EXPRESION -> EXPRESION mayor EXPRESION
Rule 67    EXPRESION -> EXPRESION mayorigual EXPRESION
Rule 68    EXPRESION -> EXPRESION menor EXPRESION
Rule 69    EXPRESION -> EXPRESION menorigual EXPRESION
Rule 70    EXPRESION -> EXPRESION igualacion EXPRESION
Rule 71    EXPRESION -> EXPRESION diferente EXPRESION
Rule 72    EXPRESION -> FUNCION_TOFIXED
Rule 73    EXPRESION -> FUNCION_TOEXPONENTIAL
Rule 74    EXPRESION -> FUNCION_TOSTRING
Rule 75    EXPRESION -> FUNCION_TOLOWERCASE
Rule 76    EXPRESION -> FUNCION_TOUPPERCASE
Rule 77    EXPRESION -> FUNCION_SPLIT
Rule 78    FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra
Rule 79    FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra
Rule 80    FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra
Rule 81    FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra
Rule 82    FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra
Rule 83    FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra
Rule 84    EXPRESION -> cadena
Rule 85    EXPRESION -> numero
Rule 86    EXPRESION -> true
Rule 87    EXPRESION -> false
Rule 88    EXPRESION -> null
Rule 89    EXPRESION -> id
Rule 90    EXPRESION -> id LISTAINDICES
Rule 91    EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra
Rule 92    TIPO -> number
Rule 93    TIPO -> string
Rule 94    TIPO -> boolean
Rule 95    TIPO -> any

Terminals, with rules where they appear

and                  : 63
any                  : 95
boolean              : 94
break                : 30
c_Abre               : 20 44 45 54 55 91
c_Cierra             : 20 44 45 54 55 91
cadena               : 84
coma                 : 17 25 52
concat               : 
console              : 51
continue             : 31
decremento           : 50
diferente            : 71
division             : 59
dosPuntos            : 19 20 41 43 44 45
else                 : 36 37
error                : 
false                : 87
fn                   : 15 16
for                  : 26
id                   : 15 16 19 20 22 23 40 41 42 43 44 45 47 48 49 50 78 79 80 81 82 83 89 90
if                   : 35
igual                : 40 41 44 47 48
igualacion           : 70
incremento           : 49
let                  : 40 41 42 43 44 45
llave_Abre           : 15 16 26 34 35 37
llave_Cierra         : 15 16 26 34 35 37
log                  : 51
mayor                : 66
mayorigual           : 67
menor                : 68
menorigual           : 69
modulo               : 61
multiplicacion       : 58
not                  : 65
null                 : 88
number               : 92
numero               : 85
or                   : 64
p_Abre               : 15 16 22 23 26 34 35 51 78 79 80 81 82 83
p_Cierra             : 15 16 22 23 26 34 35 51 78 79 80 81 82 83
potencia             : 60
punto                : 51 78 79 80 81 82 83
puntoYcoma           : 4 5 6 9 10 11 12 13 26 26 30 31 32 33 39 46
resta                : 57 62
return               : 32 33
split                : 83
string               : 93
suma                 : 56
toExponential        : 79
toFixed              : 78
toLowerCase          : 81
toString             : 80
toUpperCase          : 82
true                 : 86
while                : 34

Nonterminals, with rules where they appear

ASIGNACION           : 27 46
BREAK                : 7
COMPLEMENTO_IF       : 35
CONTINUE             : 8
DECLARACION          : 26 39
DECREMENTO           : 11 29
ENTRADA              : 2 3
ENTRADAS             : 1 2 15 16 26 34 35 37
EXPRESION            : 24 25 26 32 34 35 40 41 44 47 48 52 53 54 55 56 56 57 57 58 58 59 59 60 60 61 61 62 63 63 64 64 65 66 66 67 67 68 68 69 69 70 70 71 71 78 79 83
FOR                  : 9
FORITERADOR          : 26
FUNC                 : 12
FUNCION_SPLIT        : 77
FUNCION_TOEXPONENTIAL : 73
FUNCION_TOFIXED      : 72
FUNCION_TOLOWERCASE  : 75
FUNCION_TOSTRING     : 74
FUNCION_TOUPPERCASE  : 76
IF                   : 5 36
IMPRIMIR             : 4
INCREMENTO           : 10 28
INICIO               : 0
LISTAEXPRESIONES     : 51 52 91
LISTAINDICES         : 48 54 90
LLAMADA_FUNCION      : 13 21
PARAMETROS_DECLA_FUNC : 15 17
PARAMETROS_LLAMA_FUNC : 22 25
PARAMETRO_DECLA_FUNC : 17 18
RETURN               : 14
TIPO                 : 19 20 41 43 44 45
WHILE                : 6

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . ENTRADAS
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    INICIO                         shift and go to state 1
    ENTRADAS                       shift and go to state 2
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> ENTRADAS .
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    $end            reduce using rule 1 (INICIO -> ENTRADAS .)
    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADA                        shift and go to state 27
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 3

    (3) ENTRADAS -> ENTRADA .

    console         reduce using rule 3 (ENTRADAS -> ENTRADA .)
    if              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    while           reduce using rule 3 (ENTRADAS -> ENTRADA .)
    break           reduce using rule 3 (ENTRADAS -> ENTRADA .)
    continue        reduce using rule 3 (ENTRADAS -> ENTRADA .)
    for             reduce using rule 3 (ENTRADAS -> ENTRADA .)
    id              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    fn              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    return          reduce using rule 3 (ENTRADAS -> ENTRADA .)
    let             reduce using rule 3 (ENTRADAS -> ENTRADA .)
    $end            reduce using rule 3 (ENTRADAS -> ENTRADA .)
    llave_Cierra    reduce using rule 3 (ENTRADAS -> ENTRADA .)


state 4

    (4) ENTRADA -> IMPRIMIR . puntoYcoma

    puntoYcoma      shift and go to state 28


state 5

    (5) ENTRADA -> IF . puntoYcoma

    puntoYcoma      shift and go to state 29


state 6

    (6) ENTRADA -> WHILE . puntoYcoma

    puntoYcoma      shift and go to state 30


state 7

    (7) ENTRADA -> BREAK .

    console         reduce using rule 7 (ENTRADA -> BREAK .)
    if              reduce using rule 7 (ENTRADA -> BREAK .)
    while           reduce using rule 7 (ENTRADA -> BREAK .)
    break           reduce using rule 7 (ENTRADA -> BREAK .)
    continue        reduce using rule 7 (ENTRADA -> BREAK .)
    for             reduce using rule 7 (ENTRADA -> BREAK .)
    id              reduce using rule 7 (ENTRADA -> BREAK .)
    fn              reduce using rule 7 (ENTRADA -> BREAK .)
    return          reduce using rule 7 (ENTRADA -> BREAK .)
    let             reduce using rule 7 (ENTRADA -> BREAK .)
    $end            reduce using rule 7 (ENTRADA -> BREAK .)
    llave_Cierra    reduce using rule 7 (ENTRADA -> BREAK .)


state 8

    (8) ENTRADA -> CONTINUE .

    console         reduce using rule 8 (ENTRADA -> CONTINUE .)
    if              reduce using rule 8 (ENTRADA -> CONTINUE .)
    while           reduce using rule 8 (ENTRADA -> CONTINUE .)
    break           reduce using rule 8 (ENTRADA -> CONTINUE .)
    continue        reduce using rule 8 (ENTRADA -> CONTINUE .)
    for             reduce using rule 8 (ENTRADA -> CONTINUE .)
    id              reduce using rule 8 (ENTRADA -> CONTINUE .)
    fn              reduce using rule 8 (ENTRADA -> CONTINUE .)
    return          reduce using rule 8 (ENTRADA -> CONTINUE .)
    let             reduce using rule 8 (ENTRADA -> CONTINUE .)
    $end            reduce using rule 8 (ENTRADA -> CONTINUE .)
    llave_Cierra    reduce using rule 8 (ENTRADA -> CONTINUE .)


state 9

    (9) ENTRADA -> FOR . puntoYcoma

    puntoYcoma      shift and go to state 31


state 10

    (10) ENTRADA -> INCREMENTO . puntoYcoma

    puntoYcoma      shift and go to state 32


state 11

    (11) ENTRADA -> DECREMENTO . puntoYcoma

    puntoYcoma      shift and go to state 33


state 12

    (12) ENTRADA -> FUNC . puntoYcoma

    puntoYcoma      shift and go to state 34


state 13

    (13) ENTRADA -> LLAMADA_FUNCION . puntoYcoma

    puntoYcoma      shift and go to state 35


state 14

    (14) ENTRADA -> RETURN .

    console         reduce using rule 14 (ENTRADA -> RETURN .)
    if              reduce using rule 14 (ENTRADA -> RETURN .)
    while           reduce using rule 14 (ENTRADA -> RETURN .)
    break           reduce using rule 14 (ENTRADA -> RETURN .)
    continue        reduce using rule 14 (ENTRADA -> RETURN .)
    for             reduce using rule 14 (ENTRADA -> RETURN .)
    id              reduce using rule 14 (ENTRADA -> RETURN .)
    fn              reduce using rule 14 (ENTRADA -> RETURN .)
    return          reduce using rule 14 (ENTRADA -> RETURN .)
    let             reduce using rule 14 (ENTRADA -> RETURN .)
    $end            reduce using rule 14 (ENTRADA -> RETURN .)
    llave_Cierra    reduce using rule 14 (ENTRADA -> RETURN .)


state 15

    (39) ENTRADA -> DECLARACION . puntoYcoma

    puntoYcoma      shift and go to state 36


state 16

    (46) ENTRADA -> ASIGNACION . puntoYcoma

    puntoYcoma      shift and go to state 37


state 17

    (51) IMPRIMIR -> console . punto log p_Abre LISTAEXPRESIONES p_Cierra

    punto           shift and go to state 38


state 18

    (35) IF -> if . p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    p_Abre          shift and go to state 39


state 19

    (34) WHILE -> while . p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 40


state 20

    (30) BREAK -> break . puntoYcoma

    puntoYcoma      shift and go to state 41


state 21

    (31) CONTINUE -> continue . puntoYcoma

    puntoYcoma      shift and go to state 42


state 22

    (26) FOR -> for . p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 43


state 23

    (49) INCREMENTO -> id . incremento
    (50) DECREMENTO -> id . decremento
    (22) LLAMADA_FUNCION -> id . p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> id . p_Abre p_Cierra
    (47) ASIGNACION -> id . igual EXPRESION
    (48) ASIGNACION -> id . LISTAINDICES igual EXPRESION
    (54) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (55) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    incremento      shift and go to state 44
    decremento      shift and go to state 45
    p_Abre          shift and go to state 46
    igual           shift and go to state 47
    c_Abre          shift and go to state 49

    LISTAINDICES                   shift and go to state 48

state 24

    (15) FUNC -> fn . id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> fn . id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra

    id              shift and go to state 50


state 25

    (32) RETURN -> return . EXPRESION puntoYcoma
    (33) RETURN -> return . puntoYcoma
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    puntoYcoma      shift and go to state 52
    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 51
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 26

    (40) DECLARACION -> let . id igual EXPRESION
    (41) DECLARACION -> let . id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> let . id
    (43) DECLARACION -> let . id dosPuntos TIPO
    (44) DECLARACION -> let . id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> let . id dosPuntos TIPO c_Abre c_Cierra

    id              shift and go to state 69


state 27

    (2) ENTRADAS -> ENTRADAS ENTRADA .

    console         reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    if              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    while           reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    break           reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    continue        reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    for             reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    id              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    fn              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    return          reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    let             reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    $end            reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    llave_Cierra    reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)


state 28

    (4) ENTRADA -> IMPRIMIR puntoYcoma .

    console         reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    if              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    while           reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    break           reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    continue        reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    for             reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    id              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    fn              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    return          reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    let             reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    $end            reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    llave_Cierra    reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)


state 29

    (5) ENTRADA -> IF puntoYcoma .

    console         reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    if              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    while           reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    break           reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    continue        reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    for             reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    id              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    fn              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    return          reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    let             reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    $end            reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    llave_Cierra    reduce using rule 5 (ENTRADA -> IF puntoYcoma .)


state 30

    (6) ENTRADA -> WHILE puntoYcoma .

    console         reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    if              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    while           reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    break           reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    continue        reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    for             reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    id              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    fn              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    return          reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    let             reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    $end            reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    llave_Cierra    reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)


state 31

    (9) ENTRADA -> FOR puntoYcoma .

    console         reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    if              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    while           reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    break           reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    continue        reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    for             reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    id              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    fn              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    return          reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    let             reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    $end            reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    llave_Cierra    reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)


state 32

    (10) ENTRADA -> INCREMENTO puntoYcoma .

    console         reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    if              reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    while           reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    break           reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    continue        reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    for             reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    id              reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    fn              reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    return          reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    let             reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    $end            reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)
    llave_Cierra    reduce using rule 10 (ENTRADA -> INCREMENTO puntoYcoma .)


state 33

    (11) ENTRADA -> DECREMENTO puntoYcoma .

    console         reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    if              reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    while           reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    break           reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    continue        reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    for             reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    id              reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    fn              reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    return          reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    let             reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    $end            reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)
    llave_Cierra    reduce using rule 11 (ENTRADA -> DECREMENTO puntoYcoma .)


state 34

    (12) ENTRADA -> FUNC puntoYcoma .

    console         reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    if              reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    while           reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    break           reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    continue        reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    for             reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    id              reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    fn              reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    return          reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    let             reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    $end            reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)
    llave_Cierra    reduce using rule 12 (ENTRADA -> FUNC puntoYcoma .)


state 35

    (13) ENTRADA -> LLAMADA_FUNCION puntoYcoma .

    console         reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    if              reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    while           reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    break           reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    continue        reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    for             reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    id              reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    fn              reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    return          reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    let             reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    $end            reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)
    llave_Cierra    reduce using rule 13 (ENTRADA -> LLAMADA_FUNCION puntoYcoma .)


state 36

    (39) ENTRADA -> DECLARACION puntoYcoma .

    console         reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    if              reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    while           reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    break           reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    continue        reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    for             reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    id              reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    fn              reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    return          reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    let             reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    $end            reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)
    llave_Cierra    reduce using rule 39 (ENTRADA -> DECLARACION puntoYcoma .)


state 37

    (46) ENTRADA -> ASIGNACION puntoYcoma .

    console         reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    if              reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    while           reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    break           reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    continue        reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    for             reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    id              reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    fn              reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    return          reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    let             reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    $end            reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)
    llave_Cierra    reduce using rule 46 (ENTRADA -> ASIGNACION puntoYcoma .)


state 38

    (51) IMPRIMIR -> console punto . log p_Abre LISTAEXPRESIONES p_Cierra

    log             shift and go to state 70


state 39

    (35) IF -> if p_Abre . EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 71
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 40

    (34) WHILE -> while p_Abre . EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 72
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 41

    (30) BREAK -> break puntoYcoma .

    console         reduce using rule 30 (BREAK -> break puntoYcoma .)
    if              reduce using rule 30 (BREAK -> break puntoYcoma .)
    while           reduce using rule 30 (BREAK -> break puntoYcoma .)
    break           reduce using rule 30 (BREAK -> break puntoYcoma .)
    continue        reduce using rule 30 (BREAK -> break puntoYcoma .)
    for             reduce using rule 30 (BREAK -> break puntoYcoma .)
    id              reduce using rule 30 (BREAK -> break puntoYcoma .)
    fn              reduce using rule 30 (BREAK -> break puntoYcoma .)
    return          reduce using rule 30 (BREAK -> break puntoYcoma .)
    let             reduce using rule 30 (BREAK -> break puntoYcoma .)
    $end            reduce using rule 30 (BREAK -> break puntoYcoma .)
    llave_Cierra    reduce using rule 30 (BREAK -> break puntoYcoma .)


state 42

    (31) CONTINUE -> continue puntoYcoma .

    console         reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    if              reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    while           reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    break           reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    continue        reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    for             reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    id              reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    fn              reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    return          reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    let             reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    $end            reduce using rule 31 (CONTINUE -> continue puntoYcoma .)
    llave_Cierra    reduce using rule 31 (CONTINUE -> continue puntoYcoma .)


state 43

    (26) FOR -> for p_Abre . DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra

    let             shift and go to state 26

    DECLARACION                    shift and go to state 73

state 44

    (49) INCREMENTO -> id incremento .

    puntoYcoma      reduce using rule 49 (INCREMENTO -> id incremento .)
    p_Cierra        reduce using rule 49 (INCREMENTO -> id incremento .)


state 45

    (50) DECREMENTO -> id decremento .

    puntoYcoma      reduce using rule 50 (DECREMENTO -> id decremento .)
    p_Cierra        reduce using rule 50 (DECREMENTO -> id decremento .)


state 46

    (22) LLAMADA_FUNCION -> id p_Abre . PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> id p_Abre . p_Cierra
    (24) PARAMETROS_LLAMA_FUNC -> . EXPRESION
    (25) PARAMETROS_LLAMA_FUNC -> . PARAMETROS_LLAMA_FUNC coma EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    p_Cierra        shift and go to state 75
    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    PARAMETROS_LLAMA_FUNC          shift and go to state 74
    EXPRESION                      shift and go to state 76
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 47

    (47) ASIGNACION -> id igual . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 77
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 48

    (48) ASIGNACION -> id LISTAINDICES . igual EXPRESION
    (54) LISTAINDICES -> LISTAINDICES . c_Abre EXPRESION c_Cierra

    igual           shift and go to state 78
    c_Abre          shift and go to state 79


state 49

    (55) LISTAINDICES -> c_Abre . EXPRESION c_Cierra
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 80
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 50

    (15) FUNC -> fn id . p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> fn id . p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 81


state 51

    (32) RETURN -> return EXPRESION . puntoYcoma
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      shift and go to state 82
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 52

    (33) RETURN -> return puntoYcoma .

    console         reduce using rule 33 (RETURN -> return puntoYcoma .)
    if              reduce using rule 33 (RETURN -> return puntoYcoma .)
    while           reduce using rule 33 (RETURN -> return puntoYcoma .)
    break           reduce using rule 33 (RETURN -> return puntoYcoma .)
    continue        reduce using rule 33 (RETURN -> return puntoYcoma .)
    for             reduce using rule 33 (RETURN -> return puntoYcoma .)
    id              reduce using rule 33 (RETURN -> return puntoYcoma .)
    fn              reduce using rule 33 (RETURN -> return puntoYcoma .)
    return          reduce using rule 33 (RETURN -> return puntoYcoma .)
    let             reduce using rule 33 (RETURN -> return puntoYcoma .)
    $end            reduce using rule 33 (RETURN -> return puntoYcoma .)
    llave_Cierra    reduce using rule 33 (RETURN -> return puntoYcoma .)


state 53

    (21) EXPRESION -> LLAMADA_FUNCION .

    puntoYcoma      reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    suma            reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    resta           reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    multiplicacion  reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    division        reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    potencia        reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    modulo          reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    and             reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    or              reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    mayor           reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    mayorigual      reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    menor           reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    menorigual      reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    igualacion      reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    diferente       reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    p_Cierra        reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    coma            reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)
    c_Cierra        reduce using rule 21 (EXPRESION -> LLAMADA_FUNCION .)


state 54

    (62) EXPRESION -> resta . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 97
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 55

    (65) EXPRESION -> not . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 98
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 56

    (72) EXPRESION -> FUNCION_TOFIXED .

    puntoYcoma      reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    suma            reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    resta           reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    multiplicacion  reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    division        reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    potencia        reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    modulo          reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    and             reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    or              reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    mayor           reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    mayorigual      reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    menor           reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    menorigual      reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    igualacion      reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    diferente       reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    p_Cierra        reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    coma            reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)
    c_Cierra        reduce using rule 72 (EXPRESION -> FUNCION_TOFIXED .)


state 57

    (73) EXPRESION -> FUNCION_TOEXPONENTIAL .

    puntoYcoma      reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    suma            reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    resta           reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    multiplicacion  reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    division        reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    potencia        reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    modulo          reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    and             reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    or              reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    mayor           reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    mayorigual      reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    menor           reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    menorigual      reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    igualacion      reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    diferente       reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    p_Cierra        reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    coma            reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    c_Cierra        reduce using rule 73 (EXPRESION -> FUNCION_TOEXPONENTIAL .)


state 58

    (74) EXPRESION -> FUNCION_TOSTRING .

    puntoYcoma      reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    suma            reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    resta           reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    multiplicacion  reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    division        reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    potencia        reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    modulo          reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    and             reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    or              reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    mayor           reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    mayorigual      reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    menor           reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    menorigual      reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    igualacion      reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    diferente       reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    p_Cierra        reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    coma            reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)
    c_Cierra        reduce using rule 74 (EXPRESION -> FUNCION_TOSTRING .)


state 59

    (75) EXPRESION -> FUNCION_TOLOWERCASE .

    puntoYcoma      reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    suma            reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    resta           reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    multiplicacion  reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    division        reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    potencia        reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    modulo          reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    and             reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    or              reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    mayor           reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    mayorigual      reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    menor           reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    menorigual      reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    igualacion      reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    diferente       reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    p_Cierra        reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    coma            reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)
    c_Cierra        reduce using rule 75 (EXPRESION -> FUNCION_TOLOWERCASE .)


state 60

    (76) EXPRESION -> FUNCION_TOUPPERCASE .

    puntoYcoma      reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    suma            reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    resta           reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    multiplicacion  reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    division        reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    potencia        reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    modulo          reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    and             reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    or              reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    mayor           reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    mayorigual      reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    menor           reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    menorigual      reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    igualacion      reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    diferente       reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    p_Cierra        reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    coma            reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)
    c_Cierra        reduce using rule 76 (EXPRESION -> FUNCION_TOUPPERCASE .)


state 61

    (77) EXPRESION -> FUNCION_SPLIT .

    puntoYcoma      reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    suma            reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    resta           reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    multiplicacion  reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    division        reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    potencia        reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    modulo          reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    and             reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    or              reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    mayor           reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    mayorigual      reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    menor           reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    menorigual      reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    igualacion      reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    diferente       reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    p_Cierra        reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    coma            reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)
    c_Cierra        reduce using rule 77 (EXPRESION -> FUNCION_SPLIT .)


state 62

    (84) EXPRESION -> cadena .

    puntoYcoma      reduce using rule 84 (EXPRESION -> cadena .)
    suma            reduce using rule 84 (EXPRESION -> cadena .)
    resta           reduce using rule 84 (EXPRESION -> cadena .)
    multiplicacion  reduce using rule 84 (EXPRESION -> cadena .)
    division        reduce using rule 84 (EXPRESION -> cadena .)
    potencia        reduce using rule 84 (EXPRESION -> cadena .)
    modulo          reduce using rule 84 (EXPRESION -> cadena .)
    and             reduce using rule 84 (EXPRESION -> cadena .)
    or              reduce using rule 84 (EXPRESION -> cadena .)
    mayor           reduce using rule 84 (EXPRESION -> cadena .)
    mayorigual      reduce using rule 84 (EXPRESION -> cadena .)
    menor           reduce using rule 84 (EXPRESION -> cadena .)
    menorigual      reduce using rule 84 (EXPRESION -> cadena .)
    igualacion      reduce using rule 84 (EXPRESION -> cadena .)
    diferente       reduce using rule 84 (EXPRESION -> cadena .)
    p_Cierra        reduce using rule 84 (EXPRESION -> cadena .)
    coma            reduce using rule 84 (EXPRESION -> cadena .)
    c_Cierra        reduce using rule 84 (EXPRESION -> cadena .)


state 63

    (85) EXPRESION -> numero .

    puntoYcoma      reduce using rule 85 (EXPRESION -> numero .)
    suma            reduce using rule 85 (EXPRESION -> numero .)
    resta           reduce using rule 85 (EXPRESION -> numero .)
    multiplicacion  reduce using rule 85 (EXPRESION -> numero .)
    division        reduce using rule 85 (EXPRESION -> numero .)
    potencia        reduce using rule 85 (EXPRESION -> numero .)
    modulo          reduce using rule 85 (EXPRESION -> numero .)
    and             reduce using rule 85 (EXPRESION -> numero .)
    or              reduce using rule 85 (EXPRESION -> numero .)
    mayor           reduce using rule 85 (EXPRESION -> numero .)
    mayorigual      reduce using rule 85 (EXPRESION -> numero .)
    menor           reduce using rule 85 (EXPRESION -> numero .)
    menorigual      reduce using rule 85 (EXPRESION -> numero .)
    igualacion      reduce using rule 85 (EXPRESION -> numero .)
    diferente       reduce using rule 85 (EXPRESION -> numero .)
    p_Cierra        reduce using rule 85 (EXPRESION -> numero .)
    coma            reduce using rule 85 (EXPRESION -> numero .)
    c_Cierra        reduce using rule 85 (EXPRESION -> numero .)


state 64

    (86) EXPRESION -> true .

    puntoYcoma      reduce using rule 86 (EXPRESION -> true .)
    suma            reduce using rule 86 (EXPRESION -> true .)
    resta           reduce using rule 86 (EXPRESION -> true .)
    multiplicacion  reduce using rule 86 (EXPRESION -> true .)
    division        reduce using rule 86 (EXPRESION -> true .)
    potencia        reduce using rule 86 (EXPRESION -> true .)
    modulo          reduce using rule 86 (EXPRESION -> true .)
    and             reduce using rule 86 (EXPRESION -> true .)
    or              reduce using rule 86 (EXPRESION -> true .)
    mayor           reduce using rule 86 (EXPRESION -> true .)
    mayorigual      reduce using rule 86 (EXPRESION -> true .)
    menor           reduce using rule 86 (EXPRESION -> true .)
    menorigual      reduce using rule 86 (EXPRESION -> true .)
    igualacion      reduce using rule 86 (EXPRESION -> true .)
    diferente       reduce using rule 86 (EXPRESION -> true .)
    p_Cierra        reduce using rule 86 (EXPRESION -> true .)
    coma            reduce using rule 86 (EXPRESION -> true .)
    c_Cierra        reduce using rule 86 (EXPRESION -> true .)


state 65

    (87) EXPRESION -> false .

    puntoYcoma      reduce using rule 87 (EXPRESION -> false .)
    suma            reduce using rule 87 (EXPRESION -> false .)
    resta           reduce using rule 87 (EXPRESION -> false .)
    multiplicacion  reduce using rule 87 (EXPRESION -> false .)
    division        reduce using rule 87 (EXPRESION -> false .)
    potencia        reduce using rule 87 (EXPRESION -> false .)
    modulo          reduce using rule 87 (EXPRESION -> false .)
    and             reduce using rule 87 (EXPRESION -> false .)
    or              reduce using rule 87 (EXPRESION -> false .)
    mayor           reduce using rule 87 (EXPRESION -> false .)
    mayorigual      reduce using rule 87 (EXPRESION -> false .)
    menor           reduce using rule 87 (EXPRESION -> false .)
    menorigual      reduce using rule 87 (EXPRESION -> false .)
    igualacion      reduce using rule 87 (EXPRESION -> false .)
    diferente       reduce using rule 87 (EXPRESION -> false .)
    p_Cierra        reduce using rule 87 (EXPRESION -> false .)
    coma            reduce using rule 87 (EXPRESION -> false .)
    c_Cierra        reduce using rule 87 (EXPRESION -> false .)


state 66

    (88) EXPRESION -> null .

    puntoYcoma      reduce using rule 88 (EXPRESION -> null .)
    suma            reduce using rule 88 (EXPRESION -> null .)
    resta           reduce using rule 88 (EXPRESION -> null .)
    multiplicacion  reduce using rule 88 (EXPRESION -> null .)
    division        reduce using rule 88 (EXPRESION -> null .)
    potencia        reduce using rule 88 (EXPRESION -> null .)
    modulo          reduce using rule 88 (EXPRESION -> null .)
    and             reduce using rule 88 (EXPRESION -> null .)
    or              reduce using rule 88 (EXPRESION -> null .)
    mayor           reduce using rule 88 (EXPRESION -> null .)
    mayorigual      reduce using rule 88 (EXPRESION -> null .)
    menor           reduce using rule 88 (EXPRESION -> null .)
    menorigual      reduce using rule 88 (EXPRESION -> null .)
    igualacion      reduce using rule 88 (EXPRESION -> null .)
    diferente       reduce using rule 88 (EXPRESION -> null .)
    p_Cierra        reduce using rule 88 (EXPRESION -> null .)
    coma            reduce using rule 88 (EXPRESION -> null .)
    c_Cierra        reduce using rule 88 (EXPRESION -> null .)


state 67

    (89) EXPRESION -> id .
    (90) EXPRESION -> id . LISTAINDICES
    (22) LLAMADA_FUNCION -> id . p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> id . p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> id . punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> id . punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> id . punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> id . punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> id . punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> id . punto split p_Abre EXPRESION p_Cierra
    (54) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (55) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    puntoYcoma      reduce using rule 89 (EXPRESION -> id .)
    suma            reduce using rule 89 (EXPRESION -> id .)
    resta           reduce using rule 89 (EXPRESION -> id .)
    multiplicacion  reduce using rule 89 (EXPRESION -> id .)
    division        reduce using rule 89 (EXPRESION -> id .)
    potencia        reduce using rule 89 (EXPRESION -> id .)
    modulo          reduce using rule 89 (EXPRESION -> id .)
    and             reduce using rule 89 (EXPRESION -> id .)
    or              reduce using rule 89 (EXPRESION -> id .)
    mayor           reduce using rule 89 (EXPRESION -> id .)
    mayorigual      reduce using rule 89 (EXPRESION -> id .)
    menor           reduce using rule 89 (EXPRESION -> id .)
    menorigual      reduce using rule 89 (EXPRESION -> id .)
    igualacion      reduce using rule 89 (EXPRESION -> id .)
    diferente       reduce using rule 89 (EXPRESION -> id .)
    p_Cierra        reduce using rule 89 (EXPRESION -> id .)
    coma            reduce using rule 89 (EXPRESION -> id .)
    c_Cierra        reduce using rule 89 (EXPRESION -> id .)
    p_Abre          shift and go to state 46
    punto           shift and go to state 100
    c_Abre          shift and go to state 49

    LISTAINDICES                   shift and go to state 99

state 68

    (91) EXPRESION -> c_Abre . LISTAEXPRESIONES c_Cierra
    (52) LISTAEXPRESIONES -> . LISTAEXPRESIONES coma EXPRESION
    (53) LISTAEXPRESIONES -> . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    LISTAEXPRESIONES               shift and go to state 101
    EXPRESION                      shift and go to state 102
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 69

    (40) DECLARACION -> let id . igual EXPRESION
    (41) DECLARACION -> let id . dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> let id .
    (43) DECLARACION -> let id . dosPuntos TIPO
    (44) DECLARACION -> let id . dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> let id . dosPuntos TIPO c_Abre c_Cierra

    igual           shift and go to state 103
    dosPuntos       shift and go to state 104
    puntoYcoma      reduce using rule 42 (DECLARACION -> let id .)


state 70

    (51) IMPRIMIR -> console punto log . p_Abre LISTAEXPRESIONES p_Cierra

    p_Abre          shift and go to state 105


state 71

    (35) IF -> if p_Abre EXPRESION . p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 106
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 72

    (34) WHILE -> while p_Abre EXPRESION . p_Cierra llave_Abre ENTRADAS llave_Cierra
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 107
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 73

    (26) FOR -> for p_Abre DECLARACION . puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra

    puntoYcoma      shift and go to state 108


state 74

    (22) LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC . p_Cierra
    (25) PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC . coma EXPRESION

    p_Cierra        shift and go to state 109
    coma            shift and go to state 110


state 75

    (23) LLAMADA_FUNCION -> id p_Abre p_Cierra .

    puntoYcoma      reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    suma            reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    resta           reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    multiplicacion  reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    division        reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    potencia        reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    modulo          reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    and             reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    or              reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    mayor           reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    mayorigual      reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    menor           reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    menorigual      reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    igualacion      reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    diferente       reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    p_Cierra        reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    coma            reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)
    c_Cierra        reduce using rule 23 (LLAMADA_FUNCION -> id p_Abre p_Cierra .)


state 76

    (24) PARAMETROS_LLAMA_FUNC -> EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 24 (PARAMETROS_LLAMA_FUNC -> EXPRESION .)
    coma            reduce using rule 24 (PARAMETROS_LLAMA_FUNC -> EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 77

    (47) ASIGNACION -> id igual EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 47 (ASIGNACION -> id igual EXPRESION .)
    p_Cierra        reduce using rule 47 (ASIGNACION -> id igual EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 78

    (48) ASIGNACION -> id LISTAINDICES igual . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 111
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 79

    (54) LISTAINDICES -> LISTAINDICES c_Abre . EXPRESION c_Cierra
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 112
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 80

    (55) LISTAINDICES -> c_Abre EXPRESION . c_Cierra
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        shift and go to state 113
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 81

    (15) FUNC -> fn id p_Abre . PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> fn id p_Abre . p_Cierra llave_Abre ENTRADAS llave_Cierra
    (17) PARAMETROS_DECLA_FUNC -> . PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC
    (18) PARAMETROS_DECLA_FUNC -> . PARAMETRO_DECLA_FUNC
    (19) PARAMETRO_DECLA_FUNC -> . id dosPuntos TIPO
    (20) PARAMETRO_DECLA_FUNC -> . id dosPuntos TIPO c_Abre c_Cierra

    p_Cierra        shift and go to state 116
    id              shift and go to state 114

    PARAMETROS_DECLA_FUNC          shift and go to state 115
    PARAMETRO_DECLA_FUNC           shift and go to state 117

state 82

    (32) RETURN -> return EXPRESION puntoYcoma .

    console         reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    if              reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    while           reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    break           reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    continue        reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    for             reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    id              reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    fn              reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    return          reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    let             reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    $end            reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)
    llave_Cierra    reduce using rule 32 (RETURN -> return EXPRESION puntoYcoma .)


state 83

    (56) EXPRESION -> EXPRESION suma . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 118
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 84

    (57) EXPRESION -> EXPRESION resta . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 119
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 85

    (58) EXPRESION -> EXPRESION multiplicacion . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 120
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 86

    (59) EXPRESION -> EXPRESION division . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 121
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 87

    (60) EXPRESION -> EXPRESION potencia . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 122
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 88

    (61) EXPRESION -> EXPRESION modulo . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 123
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 89

    (63) EXPRESION -> EXPRESION and . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 124
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 90

    (64) EXPRESION -> EXPRESION or . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 125
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 91

    (66) EXPRESION -> EXPRESION mayor . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 126
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 92

    (67) EXPRESION -> EXPRESION mayorigual . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 127
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 93

    (68) EXPRESION -> EXPRESION menor . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 128
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 94

    (69) EXPRESION -> EXPRESION menorigual . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 129
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 95

    (70) EXPRESION -> EXPRESION igualacion . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 130
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 96

    (71) EXPRESION -> EXPRESION diferente . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 131
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 97

    (62) EXPRESION -> resta EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    suma            reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    resta           reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    multiplicacion  reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    division        reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    potencia        reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    modulo          reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    and             reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    or              reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    mayor           reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    mayorigual      reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    menor           reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    menorigual      reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    igualacion      reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    diferente       reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    p_Cierra        reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    coma            reduce using rule 62 (EXPRESION -> resta EXPRESION .)
    c_Cierra        reduce using rule 62 (EXPRESION -> resta EXPRESION .)

  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! multiplicacion  [ shift and go to state 85 ]
  ! division        [ shift and go to state 86 ]
  ! potencia        [ shift and go to state 87 ]
  ! modulo          [ shift and go to state 88 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 98

    (65) EXPRESION -> not EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 65 (EXPRESION -> not EXPRESION .)
    suma            reduce using rule 65 (EXPRESION -> not EXPRESION .)
    resta           reduce using rule 65 (EXPRESION -> not EXPRESION .)
    multiplicacion  reduce using rule 65 (EXPRESION -> not EXPRESION .)
    division        reduce using rule 65 (EXPRESION -> not EXPRESION .)
    potencia        reduce using rule 65 (EXPRESION -> not EXPRESION .)
    modulo          reduce using rule 65 (EXPRESION -> not EXPRESION .)
    and             reduce using rule 65 (EXPRESION -> not EXPRESION .)
    or              reduce using rule 65 (EXPRESION -> not EXPRESION .)
    mayor           reduce using rule 65 (EXPRESION -> not EXPRESION .)
    mayorigual      reduce using rule 65 (EXPRESION -> not EXPRESION .)
    menor           reduce using rule 65 (EXPRESION -> not EXPRESION .)
    menorigual      reduce using rule 65 (EXPRESION -> not EXPRESION .)
    igualacion      reduce using rule 65 (EXPRESION -> not EXPRESION .)
    diferente       reduce using rule 65 (EXPRESION -> not EXPRESION .)
    p_Cierra        reduce using rule 65 (EXPRESION -> not EXPRESION .)
    coma            reduce using rule 65 (EXPRESION -> not EXPRESION .)
    c_Cierra        reduce using rule 65 (EXPRESION -> not EXPRESION .)

  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! multiplicacion  [ shift and go to state 85 ]
  ! division        [ shift and go to state 86 ]
  ! potencia        [ shift and go to state 87 ]
  ! modulo          [ shift and go to state 88 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 99

    (90) EXPRESION -> id LISTAINDICES .
    (54) LISTAINDICES -> LISTAINDICES . c_Abre EXPRESION c_Cierra

    puntoYcoma      reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    suma            reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    resta           reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    multiplicacion  reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    division        reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    potencia        reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    modulo          reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    and             reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    or              reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    mayor           reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    mayorigual      reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    menor           reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    menorigual      reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    igualacion      reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    diferente       reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    p_Cierra        reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    coma            reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    c_Cierra        reduce using rule 90 (EXPRESION -> id LISTAINDICES .)
    c_Abre          shift and go to state 79


state 100

    (78) FUNCION_TOFIXED -> id punto . toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> id punto . toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> id punto . toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> id punto . toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> id punto . toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> id punto . split p_Abre EXPRESION p_Cierra

    toFixed         shift and go to state 132
    toExponential   shift and go to state 133
    toString        shift and go to state 134
    toLowerCase     shift and go to state 135
    toUpperCase     shift and go to state 136
    split           shift and go to state 137


state 101

    (91) EXPRESION -> c_Abre LISTAEXPRESIONES . c_Cierra
    (52) LISTAEXPRESIONES -> LISTAEXPRESIONES . coma EXPRESION

    c_Cierra        shift and go to state 138
    coma            shift and go to state 139


state 102

    (53) LISTAEXPRESIONES -> EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        reduce using rule 53 (LISTAEXPRESIONES -> EXPRESION .)
    coma            reduce using rule 53 (LISTAEXPRESIONES -> EXPRESION .)
    p_Cierra        reduce using rule 53 (LISTAEXPRESIONES -> EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 103

    (40) DECLARACION -> let id igual . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 140
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 104

    (41) DECLARACION -> let id dosPuntos . TIPO igual EXPRESION
    (43) DECLARACION -> let id dosPuntos . TIPO
    (44) DECLARACION -> let id dosPuntos . TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> let id dosPuntos . TIPO c_Abre c_Cierra
    (92) TIPO -> . number
    (93) TIPO -> . string
    (94) TIPO -> . boolean
    (95) TIPO -> . any

    number          shift and go to state 142
    string          shift and go to state 143
    boolean         shift and go to state 144
    any             shift and go to state 145

    TIPO                           shift and go to state 141

state 105

    (51) IMPRIMIR -> console punto log p_Abre . LISTAEXPRESIONES p_Cierra
    (52) LISTAEXPRESIONES -> . LISTAEXPRESIONES coma EXPRESION
    (53) LISTAEXPRESIONES -> . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    LISTAEXPRESIONES               shift and go to state 146
    EXPRESION                      shift and go to state 102
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 106

    (35) IF -> if p_Abre EXPRESION p_Cierra . llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    llave_Abre      shift and go to state 147


state 107

    (34) WHILE -> while p_Abre EXPRESION p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 148


state 108

    (26) FOR -> for p_Abre DECLARACION puntoYcoma . EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 149
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 109

    (22) LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .

    puntoYcoma      reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    suma            reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    resta           reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    multiplicacion  reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    division        reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    potencia        reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    modulo          reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    and             reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    or              reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    mayor           reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    mayorigual      reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    menor           reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    menorigual      reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    igualacion      reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    diferente       reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    p_Cierra        reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    coma            reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)
    c_Cierra        reduce using rule 22 (LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra .)


state 110

    (25) PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 150
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 111

    (48) ASIGNACION -> id LISTAINDICES igual EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 48 (ASIGNACION -> id LISTAINDICES igual EXPRESION .)
    p_Cierra        reduce using rule 48 (ASIGNACION -> id LISTAINDICES igual EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 112

    (54) LISTAINDICES -> LISTAINDICES c_Abre EXPRESION . c_Cierra
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        shift and go to state 151
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 113

    (55) LISTAINDICES -> c_Abre EXPRESION c_Cierra .

    igual           reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    c_Abre          reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    puntoYcoma      reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    suma            reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    resta           reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    multiplicacion  reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    division        reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    potencia        reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    modulo          reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    and             reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    or              reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    mayor           reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    mayorigual      reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    menor           reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    menorigual      reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    igualacion      reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    diferente       reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    p_Cierra        reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    coma            reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    c_Cierra        reduce using rule 55 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)


state 114

    (19) PARAMETRO_DECLA_FUNC -> id . dosPuntos TIPO
    (20) PARAMETRO_DECLA_FUNC -> id . dosPuntos TIPO c_Abre c_Cierra

    dosPuntos       shift and go to state 152


state 115

    (15) FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC . p_Cierra llave_Abre ENTRADAS llave_Cierra
    (17) PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC . coma PARAMETRO_DECLA_FUNC

    p_Cierra        shift and go to state 153
    coma            shift and go to state 154


state 116

    (16) FUNC -> fn id p_Abre p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 155


state 117

    (18) PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC .

    p_Cierra        reduce using rule 18 (PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC .)
    coma            reduce using rule 18 (PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC .)


state 118

    (56) EXPRESION -> EXPRESION suma EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .)
    suma            reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .)
    resta           reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .)
    and             reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .)
    or              reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .)
    p_Cierra        reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .)
    coma            reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .)
    c_Cierra        reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .)
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96

  ! multiplicacion  [ reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! division        [ reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! potencia        [ reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! modulo          [ reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! mayor           [ reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! mayorigual      [ reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! menor           [ reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! menorigual      [ reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! igualacion      [ reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! diferente       [ reduce using rule 56 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]


state 119

    (57) EXPRESION -> EXPRESION resta EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .)
    suma            reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .)
    resta           reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .)
    and             reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .)
    or              reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .)
    p_Cierra        reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .)
    coma            reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .)
    c_Cierra        reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .)
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96

  ! multiplicacion  [ reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! division        [ reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! potencia        [ reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! modulo          [ reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! mayor           [ reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! mayorigual      [ reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! menor           [ reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! menorigual      [ reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! igualacion      [ reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! diferente       [ reduce using rule 57 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]


state 120

    (58) EXPRESION -> EXPRESION multiplicacion EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    suma            reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    resta           reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    multiplicacion  reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    division        reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    modulo          reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    and             reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    or              reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    mayor           reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    mayorigual      reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    menor           reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    menorigual      reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    igualacion      reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    diferente       reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    p_Cierra        reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    coma            reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    c_Cierra        reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    potencia        shift and go to state 87

  ! potencia        [ reduce using rule 58 (EXPRESION -> EXPRESION multiplicacion EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! multiplicacion  [ shift and go to state 85 ]
  ! division        [ shift and go to state 86 ]
  ! modulo          [ shift and go to state 88 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 121

    (59) EXPRESION -> EXPRESION division EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    suma            reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    resta           reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    multiplicacion  reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    division        reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    modulo          reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    and             reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    or              reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    mayor           reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    mayorigual      reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    menor           reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    menorigual      reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    igualacion      reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    diferente       reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    p_Cierra        reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    coma            reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    c_Cierra        reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .)
    potencia        shift and go to state 87

  ! potencia        [ reduce using rule 59 (EXPRESION -> EXPRESION division EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! multiplicacion  [ shift and go to state 85 ]
  ! division        [ shift and go to state 86 ]
  ! modulo          [ shift and go to state 88 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 122

    (60) EXPRESION -> EXPRESION potencia EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    suma            reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    resta           reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    multiplicacion  reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    division        reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    potencia        reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    modulo          reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    and             reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    or              reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    mayor           reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    mayorigual      reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    menor           reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    menorigual      reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    igualacion      reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    diferente       reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    p_Cierra        reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    coma            reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)
    c_Cierra        reduce using rule 60 (EXPRESION -> EXPRESION potencia EXPRESION .)

  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! multiplicacion  [ shift and go to state 85 ]
  ! division        [ shift and go to state 86 ]
  ! potencia        [ shift and go to state 87 ]
  ! modulo          [ shift and go to state 88 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 123

    (61) EXPRESION -> EXPRESION modulo EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    suma            reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    resta           reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    multiplicacion  reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    division        reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    modulo          reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    and             reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    or              reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayor           reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorigual      reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menor           reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorigual      reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    igualacion      reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    diferente       reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    p_Cierra        reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    coma            reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    c_Cierra        reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .)
    potencia        shift and go to state 87

  ! potencia        [ reduce using rule 61 (EXPRESION -> EXPRESION modulo EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! multiplicacion  [ shift and go to state 85 ]
  ! division        [ shift and go to state 86 ]
  ! modulo          [ shift and go to state 88 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 124

    (63) EXPRESION -> EXPRESION and EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .)
    and             reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .)
    or              reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .)
    p_Cierra        reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .)
    coma            reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .)
    c_Cierra        reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96

  ! suma            [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! resta           [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! multiplicacion  [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! division        [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! potencia        [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! modulo          [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayor           [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayorigual      [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menor           [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menorigual      [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! igualacion      [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! diferente       [ reduce using rule 63 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]


state 125

    (64) EXPRESION -> EXPRESION or EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .)
    or              reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .)
    p_Cierra        reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .)
    coma            reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .)
    c_Cierra        reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96

  ! suma            [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! resta           [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! multiplicacion  [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! division        [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! potencia        [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! modulo          [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! and             [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayor           [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayorigual      [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menor           [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menorigual      [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! igualacion      [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! diferente       [ reduce using rule 64 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! or              [ shift and go to state 90 ]


state 126

    (66) EXPRESION -> EXPRESION mayor EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    suma            reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    resta           reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    and             reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    or              reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mayor           reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mayorigual      reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menor           reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menorigual      reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    igualacion      reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    diferente       reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    p_Cierra        reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    coma            reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    c_Cierra        reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .)
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88

  ! multiplicacion  [ reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! division        [ reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! potencia        [ reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! modulo          [ reduce using rule 66 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 127

    (67) EXPRESION -> EXPRESION mayorigual EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    suma            reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    resta           reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    and             reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    or              reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mayor           reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mayorigual      reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menor           reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menorigual      reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    igualacion      reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    diferente       reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    p_Cierra        reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    coma            reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    c_Cierra        reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88

  ! multiplicacion  [ reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! division        [ reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! potencia        [ reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! modulo          [ reduce using rule 67 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 128

    (68) EXPRESION -> EXPRESION menor EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    suma            reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    resta           reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    and             reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    or              reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    mayor           reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    mayorigual      reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    menor           reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    menorigual      reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    igualacion      reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    diferente       reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    p_Cierra        reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    coma            reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    c_Cierra        reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .)
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88

  ! multiplicacion  [ reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! division        [ reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! potencia        [ reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! modulo          [ reduce using rule 68 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 129

    (69) EXPRESION -> EXPRESION menorigual EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    suma            reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    resta           reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    and             reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    or              reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mayor           reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mayorigual      reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menor           reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menorigual      reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    igualacion      reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    diferente       reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    p_Cierra        reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    coma            reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    c_Cierra        reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88

  ! multiplicacion  [ reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! division        [ reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! potencia        [ reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! modulo          [ reduce using rule 69 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 130

    (70) EXPRESION -> EXPRESION igualacion EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    suma            reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    resta           reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    and             reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    or              reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    mayor           reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    mayorigual      reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    menor           reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    menorigual      reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    igualacion      reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    diferente       reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    p_Cierra        reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    coma            reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    c_Cierra        reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88

  ! multiplicacion  [ reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! division        [ reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! potencia        [ reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! modulo          [ reduce using rule 70 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 131

    (71) EXPRESION -> EXPRESION diferente EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    suma            reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    resta           reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    and             reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    or              reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mayor           reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mayorigual      reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menor           reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menorigual      reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    igualacion      reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    diferente       reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    p_Cierra        reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    coma            reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    c_Cierra        reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .)
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88

  ! multiplicacion  [ reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! division        [ reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! potencia        [ reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! modulo          [ reduce using rule 71 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! suma            [ shift and go to state 83 ]
  ! resta           [ shift and go to state 84 ]
  ! and             [ shift and go to state 89 ]
  ! or              [ shift and go to state 90 ]
  ! mayor           [ shift and go to state 91 ]
  ! mayorigual      [ shift and go to state 92 ]
  ! menor           [ shift and go to state 93 ]
  ! menorigual      [ shift and go to state 94 ]
  ! igualacion      [ shift and go to state 95 ]
  ! diferente       [ shift and go to state 96 ]


state 132

    (78) FUNCION_TOFIXED -> id punto toFixed . p_Abre EXPRESION p_Cierra

    p_Abre          shift and go to state 156


state 133

    (79) FUNCION_TOEXPONENTIAL -> id punto toExponential . p_Abre EXPRESION p_Cierra

    p_Abre          shift and go to state 157


state 134

    (80) FUNCION_TOSTRING -> id punto toString . p_Abre p_Cierra

    p_Abre          shift and go to state 158


state 135

    (81) FUNCION_TOLOWERCASE -> id punto toLowerCase . p_Abre p_Cierra

    p_Abre          shift and go to state 159


state 136

    (82) FUNCION_TOUPPERCASE -> id punto toUpperCase . p_Abre p_Cierra

    p_Abre          shift and go to state 160


state 137

    (83) FUNCION_SPLIT -> id punto split . p_Abre EXPRESION p_Cierra

    p_Abre          shift and go to state 161


state 138

    (91) EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .

    puntoYcoma      reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    suma            reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    resta           reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    multiplicacion  reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    division        reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    potencia        reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    modulo          reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    and             reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    or              reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    mayor           reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    mayorigual      reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    menor           reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    menorigual      reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    igualacion      reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    diferente       reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    p_Cierra        reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    coma            reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    c_Cierra        reduce using rule 91 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)


state 139

    (52) LISTAEXPRESIONES -> LISTAEXPRESIONES coma . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 162
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 140

    (40) DECLARACION -> let id igual EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 40 (DECLARACION -> let id igual EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 141

    (41) DECLARACION -> let id dosPuntos TIPO . igual EXPRESION
    (43) DECLARACION -> let id dosPuntos TIPO .
    (44) DECLARACION -> let id dosPuntos TIPO . c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> let id dosPuntos TIPO . c_Abre c_Cierra

    igual           shift and go to state 163
    puntoYcoma      reduce using rule 43 (DECLARACION -> let id dosPuntos TIPO .)
    c_Abre          shift and go to state 164


state 142

    (92) TIPO -> number .

    igual           reduce using rule 92 (TIPO -> number .)
    c_Abre          reduce using rule 92 (TIPO -> number .)
    puntoYcoma      reduce using rule 92 (TIPO -> number .)
    p_Cierra        reduce using rule 92 (TIPO -> number .)
    coma            reduce using rule 92 (TIPO -> number .)


state 143

    (93) TIPO -> string .

    igual           reduce using rule 93 (TIPO -> string .)
    c_Abre          reduce using rule 93 (TIPO -> string .)
    puntoYcoma      reduce using rule 93 (TIPO -> string .)
    p_Cierra        reduce using rule 93 (TIPO -> string .)
    coma            reduce using rule 93 (TIPO -> string .)


state 144

    (94) TIPO -> boolean .

    igual           reduce using rule 94 (TIPO -> boolean .)
    c_Abre          reduce using rule 94 (TIPO -> boolean .)
    puntoYcoma      reduce using rule 94 (TIPO -> boolean .)
    p_Cierra        reduce using rule 94 (TIPO -> boolean .)
    coma            reduce using rule 94 (TIPO -> boolean .)


state 145

    (95) TIPO -> any .

    igual           reduce using rule 95 (TIPO -> any .)
    c_Abre          reduce using rule 95 (TIPO -> any .)
    puntoYcoma      reduce using rule 95 (TIPO -> any .)
    p_Cierra        reduce using rule 95 (TIPO -> any .)
    coma            reduce using rule 95 (TIPO -> any .)


state 146

    (51) IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES . p_Cierra
    (52) LISTAEXPRESIONES -> LISTAEXPRESIONES . coma EXPRESION

    p_Cierra        shift and go to state 165
    coma            shift and go to state 139


state 147

    (35) IF -> if p_Abre EXPRESION p_Cierra llave_Abre . ENTRADAS llave_Cierra COMPLEMENTO_IF
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADAS                       shift and go to state 166
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 148

    (34) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADAS                       shift and go to state 167
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 149

    (26) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION . puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      shift and go to state 168
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 150

    (25) PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 25 (PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION .)
    coma            reduce using rule 25 (PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 151

    (54) LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .

    igual           reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    c_Abre          reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    puntoYcoma      reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    suma            reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    resta           reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    multiplicacion  reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    division        reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    potencia        reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    modulo          reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    and             reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    or              reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    mayor           reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    mayorigual      reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    menor           reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    menorigual      reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    igualacion      reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    diferente       reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    p_Cierra        reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    coma            reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    c_Cierra        reduce using rule 54 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)


state 152

    (19) PARAMETRO_DECLA_FUNC -> id dosPuntos . TIPO
    (20) PARAMETRO_DECLA_FUNC -> id dosPuntos . TIPO c_Abre c_Cierra
    (92) TIPO -> . number
    (93) TIPO -> . string
    (94) TIPO -> . boolean
    (95) TIPO -> . any

    number          shift and go to state 142
    string          shift and go to state 143
    boolean         shift and go to state 144
    any             shift and go to state 145

    TIPO                           shift and go to state 169

state 153

    (15) FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 170


state 154

    (17) PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma . PARAMETRO_DECLA_FUNC
    (19) PARAMETRO_DECLA_FUNC -> . id dosPuntos TIPO
    (20) PARAMETRO_DECLA_FUNC -> . id dosPuntos TIPO c_Abre c_Cierra

    id              shift and go to state 114

    PARAMETRO_DECLA_FUNC           shift and go to state 171

state 155

    (16) FUNC -> fn id p_Abre p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADAS                       shift and go to state 172
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 156

    (78) FUNCION_TOFIXED -> id punto toFixed p_Abre . EXPRESION p_Cierra
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 173
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 157

    (79) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre . EXPRESION p_Cierra
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 174
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 158

    (80) FUNCION_TOSTRING -> id punto toString p_Abre . p_Cierra

    p_Cierra        shift and go to state 175


state 159

    (81) FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre . p_Cierra

    p_Cierra        shift and go to state 176


state 160

    (82) FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre . p_Cierra

    p_Cierra        shift and go to state 177


state 161

    (83) FUNCION_SPLIT -> id punto split p_Abre . EXPRESION p_Cierra
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 178
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 162

    (52) LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        reduce using rule 52 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    coma            reduce using rule 52 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    p_Cierra        reduce using rule 52 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 163

    (41) DECLARACION -> let id dosPuntos TIPO igual . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 179
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 164

    (44) DECLARACION -> let id dosPuntos TIPO c_Abre . c_Cierra igual EXPRESION
    (45) DECLARACION -> let id dosPuntos TIPO c_Abre . c_Cierra

    c_Cierra        shift and go to state 180


state 165

    (51) IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra .

    puntoYcoma      reduce using rule 51 (IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra .)


state 166

    (35) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS . llave_Cierra COMPLEMENTO_IF
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 181
    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADA                        shift and go to state 27
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 167

    (34) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 182
    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADA                        shift and go to state 27
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 168

    (26) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma . FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (27) FORITERADOR -> . ASIGNACION
    (28) FORITERADOR -> . INCREMENTO
    (29) FORITERADOR -> . DECREMENTO
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento

    id              shift and go to state 187

    FORITERADOR                    shift and go to state 183
    ASIGNACION                     shift and go to state 184
    INCREMENTO                     shift and go to state 185
    DECREMENTO                     shift and go to state 186

state 169

    (19) PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO .
    (20) PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO . c_Abre c_Cierra

    p_Cierra        reduce using rule 19 (PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO .)
    coma            reduce using rule 19 (PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO .)
    c_Abre          shift and go to state 188


state 170

    (15) FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADAS                       shift and go to state 189
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 171

    (17) PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC .

    p_Cierra        reduce using rule 17 (PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC .)
    coma            reduce using rule 17 (PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC .)


state 172

    (16) FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 190
    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADA                        shift and go to state 27
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 173

    (78) FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION . p_Cierra
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 191
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 174

    (79) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION . p_Cierra
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 192
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 175

    (80) FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .

    puntoYcoma      reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    suma            reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    resta           reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    multiplicacion  reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    division        reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    potencia        reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    modulo          reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    and             reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    or              reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    mayor           reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    mayorigual      reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    menor           reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    menorigual      reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    igualacion      reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    diferente       reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    p_Cierra        reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    coma            reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    c_Cierra        reduce using rule 80 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)


state 176

    (81) FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .

    puntoYcoma      reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    suma            reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    resta           reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    multiplicacion  reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    division        reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    potencia        reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    modulo          reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    and             reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    or              reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    mayor           reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    mayorigual      reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    menor           reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    menorigual      reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    igualacion      reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    diferente       reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    p_Cierra        reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    coma            reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    c_Cierra        reduce using rule 81 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)


state 177

    (82) FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .

    puntoYcoma      reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    suma            reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    resta           reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    multiplicacion  reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    division        reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    potencia        reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    modulo          reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    and             reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    or              reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    mayor           reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    mayorigual      reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    menor           reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    menorigual      reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    igualacion      reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    diferente       reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    p_Cierra        reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    coma            reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    c_Cierra        reduce using rule 82 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)


state 178

    (83) FUNCION_SPLIT -> id punto split p_Abre EXPRESION . p_Cierra
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 193
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 179

    (41) DECLARACION -> let id dosPuntos TIPO igual EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 41 (DECLARACION -> let id dosPuntos TIPO igual EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 180

    (44) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra . igual EXPRESION
    (45) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra .

    igual           shift and go to state 194
    puntoYcoma      reduce using rule 45 (DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra .)


state 181

    (35) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra . COMPLEMENTO_IF
    (36) COMPLEMENTO_IF -> . else IF
    (37) COMPLEMENTO_IF -> . else llave_Abre ENTRADAS llave_Cierra
    (38) COMPLEMENTO_IF -> .

    else            shift and go to state 196
    puntoYcoma      reduce using rule 38 (COMPLEMENTO_IF -> .)

    COMPLEMENTO_IF                 shift and go to state 195

state 182

    (34) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 34 (WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra .)


state 183

    (26) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR . p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Cierra        shift and go to state 197


state 184

    (27) FORITERADOR -> ASIGNACION .

    p_Cierra        reduce using rule 27 (FORITERADOR -> ASIGNACION .)


state 185

    (28) FORITERADOR -> INCREMENTO .

    p_Cierra        reduce using rule 28 (FORITERADOR -> INCREMENTO .)


state 186

    (29) FORITERADOR -> DECREMENTO .

    p_Cierra        reduce using rule 29 (FORITERADOR -> DECREMENTO .)


state 187

    (47) ASIGNACION -> id . igual EXPRESION
    (48) ASIGNACION -> id . LISTAINDICES igual EXPRESION
    (49) INCREMENTO -> id . incremento
    (50) DECREMENTO -> id . decremento
    (54) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (55) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    igual           shift and go to state 47
    incremento      shift and go to state 44
    decremento      shift and go to state 45
    c_Abre          shift and go to state 49

    LISTAINDICES                   shift and go to state 48

state 188

    (20) PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre . c_Cierra

    c_Cierra        shift and go to state 198


state 189

    (15) FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 199
    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADA                        shift and go to state 27
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 190

    (16) FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 16 (FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra .)


state 191

    (78) FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .

    puntoYcoma      reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    suma            reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    resta           reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    multiplicacion  reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    division        reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    potencia        reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    modulo          reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    and             reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    or              reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    mayor           reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    mayorigual      reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    menor           reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    menorigual      reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    igualacion      reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    diferente       reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    p_Cierra        reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    coma            reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    c_Cierra        reduce using rule 78 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)


state 192

    (79) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .

    puntoYcoma      reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    suma            reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    resta           reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    multiplicacion  reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    division        reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    potencia        reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    modulo          reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    and             reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    or              reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    mayor           reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    mayorigual      reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    menor           reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    menorigual      reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    igualacion      reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    diferente       reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    p_Cierra        reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    coma            reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    c_Cierra        reduce using rule 79 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)


state 193

    (83) FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .

    puntoYcoma      reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    suma            reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    resta           reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    multiplicacion  reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    division        reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    potencia        reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    modulo          reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    and             reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    or              reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    mayor           reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    mayorigual      reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    menor           reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    menorigual      reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    igualacion      reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    diferente       reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    p_Cierra        reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    coma            reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)
    c_Cierra        reduce using rule 83 (FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra .)


state 194

    (44) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual . EXPRESION
    (21) EXPRESION -> . LLAMADA_FUNCION
    (56) EXPRESION -> . EXPRESION suma EXPRESION
    (57) EXPRESION -> . EXPRESION resta EXPRESION
    (58) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (59) EXPRESION -> . EXPRESION division EXPRESION
    (60) EXPRESION -> . EXPRESION potencia EXPRESION
    (61) EXPRESION -> . EXPRESION modulo EXPRESION
    (62) EXPRESION -> . resta EXPRESION
    (63) EXPRESION -> . EXPRESION and EXPRESION
    (64) EXPRESION -> . EXPRESION or EXPRESION
    (65) EXPRESION -> . not EXPRESION
    (66) EXPRESION -> . EXPRESION mayor EXPRESION
    (67) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (68) EXPRESION -> . EXPRESION menor EXPRESION
    (69) EXPRESION -> . EXPRESION menorigual EXPRESION
    (70) EXPRESION -> . EXPRESION igualacion EXPRESION
    (71) EXPRESION -> . EXPRESION diferente EXPRESION
    (72) EXPRESION -> . FUNCION_TOFIXED
    (73) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (74) EXPRESION -> . FUNCION_TOSTRING
    (75) EXPRESION -> . FUNCION_TOLOWERCASE
    (76) EXPRESION -> . FUNCION_TOUPPERCASE
    (77) EXPRESION -> . FUNCION_SPLIT
    (84) EXPRESION -> . cadena
    (85) EXPRESION -> . numero
    (86) EXPRESION -> . true
    (87) EXPRESION -> . false
    (88) EXPRESION -> . null
    (89) EXPRESION -> . id
    (90) EXPRESION -> . id LISTAINDICES
    (91) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (78) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (79) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (80) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (81) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (82) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (83) FUNCION_SPLIT -> . id punto split p_Abre EXPRESION p_Cierra

    resta           shift and go to state 54
    not             shift and go to state 55
    cadena          shift and go to state 62
    numero          shift and go to state 63
    true            shift and go to state 64
    false           shift and go to state 65
    null            shift and go to state 66
    id              shift and go to state 67
    c_Abre          shift and go to state 68

    EXPRESION                      shift and go to state 200
    LLAMADA_FUNCION                shift and go to state 53
    FUNCION_TOFIXED                shift and go to state 56
    FUNCION_TOEXPONENTIAL          shift and go to state 57
    FUNCION_TOSTRING               shift and go to state 58
    FUNCION_TOLOWERCASE            shift and go to state 59
    FUNCION_TOUPPERCASE            shift and go to state 60
    FUNCION_SPLIT                  shift and go to state 61

state 195

    (35) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF .

    puntoYcoma      reduce using rule 35 (IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF .)


state 196

    (36) COMPLEMENTO_IF -> else . IF
    (37) COMPLEMENTO_IF -> else . llave_Abre ENTRADAS llave_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    llave_Abre      shift and go to state 202
    if              shift and go to state 18

    IF                             shift and go to state 201

state 197

    (26) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 203


state 198

    (20) PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra .

    p_Cierra        reduce using rule 20 (PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra .)
    coma            reduce using rule 20 (PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra .)


state 199

    (15) FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 15 (FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra .)


state 200

    (44) DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION .
    (56) EXPRESION -> EXPRESION . suma EXPRESION
    (57) EXPRESION -> EXPRESION . resta EXPRESION
    (58) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (59) EXPRESION -> EXPRESION . division EXPRESION
    (60) EXPRESION -> EXPRESION . potencia EXPRESION
    (61) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . and EXPRESION
    (64) EXPRESION -> EXPRESION . or EXPRESION
    (66) EXPRESION -> EXPRESION . mayor EXPRESION
    (67) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (68) EXPRESION -> EXPRESION . menor EXPRESION
    (69) EXPRESION -> EXPRESION . menorigual EXPRESION
    (70) EXPRESION -> EXPRESION . igualacion EXPRESION
    (71) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 44 (DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION .)
    suma            shift and go to state 83
    resta           shift and go to state 84
    multiplicacion  shift and go to state 85
    division        shift and go to state 86
    potencia        shift and go to state 87
    modulo          shift and go to state 88
    and             shift and go to state 89
    or              shift and go to state 90
    mayor           shift and go to state 91
    mayorigual      shift and go to state 92
    menor           shift and go to state 93
    menorigual      shift and go to state 94
    igualacion      shift and go to state 95
    diferente       shift and go to state 96


state 201

    (36) COMPLEMENTO_IF -> else IF .

    puntoYcoma      reduce using rule 36 (COMPLEMENTO_IF -> else IF .)


state 202

    (37) COMPLEMENTO_IF -> else llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADAS                       shift and go to state 204
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 203

    (26) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    DECLARACION                    shift and go to state 15
    ENTRADAS                       shift and go to state 205
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    ASIGNACION                     shift and go to state 16

state 204

    (37) COMPLEMENTO_IF -> else llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 206
    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    ENTRADA                        shift and go to state 27
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    DECLARACION                    shift and go to state 15
    ASIGNACION                     shift and go to state 16

state 205

    (26) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (10) ENTRADA -> . INCREMENTO puntoYcoma
    (11) ENTRADA -> . DECREMENTO puntoYcoma
    (12) ENTRADA -> . FUNC puntoYcoma
    (13) ENTRADA -> . LLAMADA_FUNCION puntoYcoma
    (14) ENTRADA -> . RETURN
    (39) ENTRADA -> . DECLARACION puntoYcoma
    (46) ENTRADA -> . ASIGNACION puntoYcoma
    (51) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (35) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (34) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (30) BREAK -> . break puntoYcoma
    (31) CONTINUE -> . continue puntoYcoma
    (26) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra
    (49) INCREMENTO -> . id incremento
    (50) DECREMENTO -> . id decremento
    (15) FUNC -> . fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra
    (16) FUNC -> . fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra
    (22) LLAMADA_FUNCION -> . id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra
    (23) LLAMADA_FUNCION -> . id p_Abre p_Cierra
    (32) RETURN -> . return EXPRESION puntoYcoma
    (33) RETURN -> . return puntoYcoma
    (40) DECLARACION -> . let id igual EXPRESION
    (41) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (42) DECLARACION -> . let id
    (43) DECLARACION -> . let id dosPuntos TIPO
    (44) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION
    (45) DECLARACION -> . let id dosPuntos TIPO c_Abre c_Cierra
    (47) ASIGNACION -> . id igual EXPRESION
    (48) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 207
    console         shift and go to state 17
    if              shift and go to state 18
    while           shift and go to state 19
    break           shift and go to state 20
    continue        shift and go to state 21
    for             shift and go to state 22
    id              shift and go to state 23
    fn              shift and go to state 24
    return          shift and go to state 25
    let             shift and go to state 26

    DECLARACION                    shift and go to state 15
    ENTRADA                        shift and go to state 27
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    INCREMENTO                     shift and go to state 10
    DECREMENTO                     shift and go to state 11
    FUNC                           shift and go to state 12
    LLAMADA_FUNCION                shift and go to state 13
    RETURN                         shift and go to state 14
    ASIGNACION                     shift and go to state 16

state 206

    (37) COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 37 (COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra .)


state 207

    (26) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 26 (FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra .)

