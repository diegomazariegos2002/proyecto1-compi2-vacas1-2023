Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    concat

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> ENTRADAS
Rule 2     ENTRADAS -> ENTRADAS ENTRADA
Rule 3     ENTRADAS -> ENTRADA
Rule 4     ENTRADA -> IMPRIMIR puntoYcoma
Rule 5     ENTRADA -> IF puntoYcoma
Rule 6     ENTRADA -> WHILE puntoYcoma
Rule 7     ENTRADA -> BREAK
Rule 8     ENTRADA -> CONTINUE
Rule 9     ENTRADA -> FOR puntoYcoma
Rule 10    FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 11    BREAK -> break puntoYcoma
Rule 12    CONTINUE -> continue puntoYcoma
Rule 13    WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
Rule 14    IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
Rule 15    COMPLEMENTO_IF -> else IF
Rule 16    COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra
Rule 17    COMPLEMENTO_IF -> <empty>
Rule 18    ENTRADA -> DECLARACION puntoYcoma
Rule 19    DECLARACION -> let id igual EXPRESION
Rule 20    DECLARACION -> let id dosPuntos TIPO igual EXPRESION
Rule 21    DECLARACION -> let id
Rule 22    DECLARACION -> let id dosPuntos TIPO
Rule 23    ENTRADA -> ASIGNACION puntoYcoma
Rule 24    ASIGNACION -> id igual EXPRESION
Rule 25    ASIGNACION -> id LISTAINDICES igual EXPRESION
Rule 26    IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra
Rule 27    LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION
Rule 28    LISTAEXPRESIONES -> EXPRESION
Rule 29    LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra
Rule 30    LISTAINDICES -> c_Abre EXPRESION c_Cierra
Rule 31    EXPRESION -> EXPRESION suma EXPRESION
Rule 32    EXPRESION -> EXPRESION resta EXPRESION
Rule 33    EXPRESION -> EXPRESION multiplicacion EXPRESION
Rule 34    EXPRESION -> EXPRESION division EXPRESION
Rule 35    EXPRESION -> EXPRESION potencia EXPRESION
Rule 36    EXPRESION -> EXPRESION modulo EXPRESION
Rule 37    EXPRESION -> resta EXPRESION
Rule 38    EXPRESION -> EXPRESION and EXPRESION
Rule 39    EXPRESION -> EXPRESION or EXPRESION
Rule 40    EXPRESION -> not EXPRESION
Rule 41    EXPRESION -> EXPRESION mayor EXPRESION
Rule 42    EXPRESION -> EXPRESION mayorigual EXPRESION
Rule 43    EXPRESION -> EXPRESION menor EXPRESION
Rule 44    EXPRESION -> EXPRESION menorigual EXPRESION
Rule 45    EXPRESION -> EXPRESION igualacion EXPRESION
Rule 46    EXPRESION -> EXPRESION diferente EXPRESION
Rule 47    EXPRESION -> FUNCION_TOFIXED
Rule 48    EXPRESION -> FUNCION_TOEXPONENTIAL
Rule 49    EXPRESION -> FUNCION_TOSTRING
Rule 50    EXPRESION -> FUNCION_TOLOWERCASE
Rule 51    EXPRESION -> FUNCION_TOUPPERCASE
Rule 52    EXPRESION -> FUNCION_SPLIT
Rule 53    FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra
Rule 54    FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra
Rule 55    FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra
Rule 56    FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra
Rule 57    FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra
Rule 58    FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra
Rule 59    EXPRESION -> cadena
Rule 60    EXPRESION -> numero
Rule 61    EXPRESION -> true
Rule 62    EXPRESION -> false
Rule 63    EXPRESION -> null
Rule 64    EXPRESION -> id
Rule 65    EXPRESION -> id LISTAINDICES
Rule 66    EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra
Rule 67    TIPO -> number
Rule 68    TIPO -> string
Rule 69    TIPO -> boolean
Rule 70    TIPO -> any

Terminals, with rules where they appear

and                  : 38
any                  : 70
boolean              : 69
break                : 11
c_Abre               : 29 30 66
c_Cierra             : 29 30 66
cadena               : 58 59
coma                 : 27
concat               : 
console              : 26
continue             : 12
diferente            : 46
division             : 34
dosPuntos            : 20 22
else                 : 15 16
error                : 
false                : 62
for                  : 10
id                   : 19 20 21 22 24 25 53 54 55 56 57 58 64 65
if                   : 14
igual                : 19 20 24 25
igualacion           : 45
let                  : 19 20 21 22
llave_Abre           : 10 13 14 16
llave_Cierra         : 10 13 14 16
log                  : 26
mayor                : 41
mayorigual           : 42
menor                : 43
menorigual           : 44
modulo               : 36
multiplicacion       : 33
not                  : 40
null                 : 63
number               : 67
numero               : 60
or                   : 39
p_Abre               : 10 13 14 26 53 54 55 56 57 58
p_Cierra             : 10 13 14 26 53 54 55 56 57 58
potencia             : 35
punto                : 26 53 54 55 56 57 58
puntoYcoma           : 4 5 6 9 10 10 11 12 18 23
resta                : 32 37
split                : 58
string               : 68
suma                 : 31
toExponential        : 54
toFixed              : 53
toLowerCase          : 56
toString             : 55
toUpperCase          : 57
true                 : 61
while                : 13

Nonterminals, with rules where they appear

ASIGNACION           : 10 23
BREAK                : 7
COMPLEMENTO_IF       : 14
CONTINUE             : 8
DECLARACION          : 10 18
ENTRADA              : 2 3
ENTRADAS             : 1 2 10 13 14 16
EXPRESION            : 10 13 14 19 20 24 25 27 28 29 30 31 31 32 32 33 33 34 34 35 35 36 36 37 38 38 39 39 40 41 41 42 42 43 43 44 44 45 45 46 46 53 54
FOR                  : 9
FUNCION_SPLIT        : 52
FUNCION_TOEXPONENTIAL : 48
FUNCION_TOFIXED      : 47
FUNCION_TOLOWERCASE  : 50
FUNCION_TOSTRING     : 49
FUNCION_TOUPPERCASE  : 51
IF                   : 5 15
IMPRIMIR             : 4
INICIO               : 0
LISTAEXPRESIONES     : 26 27 66
LISTAINDICES         : 25 29 65
TIPO                 : 20 22
WHILE                : 6

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . ENTRADAS
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (18) ENTRADA -> . DECLARACION puntoYcoma
    (23) ENTRADA -> . ASIGNACION puntoYcoma
    (26) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (13) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (11) BREAK -> . break puntoYcoma
    (12) CONTINUE -> . continue puntoYcoma
    (10) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 12
    if              shift and go to state 13
    while           shift and go to state 14
    break           shift and go to state 15
    continue        shift and go to state 16
    for             shift and go to state 17
    let             shift and go to state 18
    id              shift and go to state 19

    INICIO                         shift and go to state 1
    ENTRADAS                       shift and go to state 2
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    DECLARACION                    shift and go to state 10
    ASIGNACION                     shift and go to state 11

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> ENTRADAS .
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (18) ENTRADA -> . DECLARACION puntoYcoma
    (23) ENTRADA -> . ASIGNACION puntoYcoma
    (26) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (13) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (11) BREAK -> . break puntoYcoma
    (12) CONTINUE -> . continue puntoYcoma
    (10) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    $end            reduce using rule 1 (INICIO -> ENTRADAS .)
    console         shift and go to state 12
    if              shift and go to state 13
    while           shift and go to state 14
    break           shift and go to state 15
    continue        shift and go to state 16
    for             shift and go to state 17
    let             shift and go to state 18
    id              shift and go to state 19

    ENTRADA                        shift and go to state 20
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    DECLARACION                    shift and go to state 10
    ASIGNACION                     shift and go to state 11

state 3

    (3) ENTRADAS -> ENTRADA .

    console         reduce using rule 3 (ENTRADAS -> ENTRADA .)
    if              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    while           reduce using rule 3 (ENTRADAS -> ENTRADA .)
    break           reduce using rule 3 (ENTRADAS -> ENTRADA .)
    continue        reduce using rule 3 (ENTRADAS -> ENTRADA .)
    for             reduce using rule 3 (ENTRADAS -> ENTRADA .)
    let             reduce using rule 3 (ENTRADAS -> ENTRADA .)
    id              reduce using rule 3 (ENTRADAS -> ENTRADA .)
    $end            reduce using rule 3 (ENTRADAS -> ENTRADA .)
    llave_Cierra    reduce using rule 3 (ENTRADAS -> ENTRADA .)


state 4

    (4) ENTRADA -> IMPRIMIR . puntoYcoma

    puntoYcoma      shift and go to state 21


state 5

    (5) ENTRADA -> IF . puntoYcoma

    puntoYcoma      shift and go to state 22


state 6

    (6) ENTRADA -> WHILE . puntoYcoma

    puntoYcoma      shift and go to state 23


state 7

    (7) ENTRADA -> BREAK .

    console         reduce using rule 7 (ENTRADA -> BREAK .)
    if              reduce using rule 7 (ENTRADA -> BREAK .)
    while           reduce using rule 7 (ENTRADA -> BREAK .)
    break           reduce using rule 7 (ENTRADA -> BREAK .)
    continue        reduce using rule 7 (ENTRADA -> BREAK .)
    for             reduce using rule 7 (ENTRADA -> BREAK .)
    let             reduce using rule 7 (ENTRADA -> BREAK .)
    id              reduce using rule 7 (ENTRADA -> BREAK .)
    $end            reduce using rule 7 (ENTRADA -> BREAK .)
    llave_Cierra    reduce using rule 7 (ENTRADA -> BREAK .)


state 8

    (8) ENTRADA -> CONTINUE .

    console         reduce using rule 8 (ENTRADA -> CONTINUE .)
    if              reduce using rule 8 (ENTRADA -> CONTINUE .)
    while           reduce using rule 8 (ENTRADA -> CONTINUE .)
    break           reduce using rule 8 (ENTRADA -> CONTINUE .)
    continue        reduce using rule 8 (ENTRADA -> CONTINUE .)
    for             reduce using rule 8 (ENTRADA -> CONTINUE .)
    let             reduce using rule 8 (ENTRADA -> CONTINUE .)
    id              reduce using rule 8 (ENTRADA -> CONTINUE .)
    $end            reduce using rule 8 (ENTRADA -> CONTINUE .)
    llave_Cierra    reduce using rule 8 (ENTRADA -> CONTINUE .)


state 9

    (9) ENTRADA -> FOR . puntoYcoma

    puntoYcoma      shift and go to state 24


state 10

    (18) ENTRADA -> DECLARACION . puntoYcoma

    puntoYcoma      shift and go to state 25


state 11

    (23) ENTRADA -> ASIGNACION . puntoYcoma

    puntoYcoma      shift and go to state 26


state 12

    (26) IMPRIMIR -> console . punto log p_Abre LISTAEXPRESIONES p_Cierra

    punto           shift and go to state 27


state 13

    (14) IF -> if . p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    p_Abre          shift and go to state 28


state 14

    (13) WHILE -> while . p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 29


state 15

    (11) BREAK -> break . puntoYcoma

    puntoYcoma      shift and go to state 30


state 16

    (12) CONTINUE -> continue . puntoYcoma

    puntoYcoma      shift and go to state 31


state 17

    (10) FOR -> for . p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Abre          shift and go to state 32


state 18

    (19) DECLARACION -> let . id igual EXPRESION
    (20) DECLARACION -> let . id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> let . id
    (22) DECLARACION -> let . id dosPuntos TIPO

    id              shift and go to state 33


state 19

    (24) ASIGNACION -> id . igual EXPRESION
    (25) ASIGNACION -> id . LISTAINDICES igual EXPRESION
    (29) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (30) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    igual           shift and go to state 34
    c_Abre          shift and go to state 36

    LISTAINDICES                   shift and go to state 35

state 20

    (2) ENTRADAS -> ENTRADAS ENTRADA .

    console         reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    if              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    while           reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    break           reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    continue        reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    for             reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    let             reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    id              reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    $end            reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)
    llave_Cierra    reduce using rule 2 (ENTRADAS -> ENTRADAS ENTRADA .)


state 21

    (4) ENTRADA -> IMPRIMIR puntoYcoma .

    console         reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    if              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    while           reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    break           reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    continue        reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    for             reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    let             reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    id              reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    $end            reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)
    llave_Cierra    reduce using rule 4 (ENTRADA -> IMPRIMIR puntoYcoma .)


state 22

    (5) ENTRADA -> IF puntoYcoma .

    console         reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    if              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    while           reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    break           reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    continue        reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    for             reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    let             reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    id              reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    $end            reduce using rule 5 (ENTRADA -> IF puntoYcoma .)
    llave_Cierra    reduce using rule 5 (ENTRADA -> IF puntoYcoma .)


state 23

    (6) ENTRADA -> WHILE puntoYcoma .

    console         reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    if              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    while           reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    break           reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    continue        reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    for             reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    let             reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    id              reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    $end            reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)
    llave_Cierra    reduce using rule 6 (ENTRADA -> WHILE puntoYcoma .)


state 24

    (9) ENTRADA -> FOR puntoYcoma .

    console         reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    if              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    while           reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    break           reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    continue        reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    for             reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    let             reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    id              reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    $end            reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)
    llave_Cierra    reduce using rule 9 (ENTRADA -> FOR puntoYcoma .)


state 25

    (18) ENTRADA -> DECLARACION puntoYcoma .

    console         reduce using rule 18 (ENTRADA -> DECLARACION puntoYcoma .)
    if              reduce using rule 18 (ENTRADA -> DECLARACION puntoYcoma .)
    while           reduce using rule 18 (ENTRADA -> DECLARACION puntoYcoma .)
    break           reduce using rule 18 (ENTRADA -> DECLARACION puntoYcoma .)
    continue        reduce using rule 18 (ENTRADA -> DECLARACION puntoYcoma .)
    for             reduce using rule 18 (ENTRADA -> DECLARACION puntoYcoma .)
    let             reduce using rule 18 (ENTRADA -> DECLARACION puntoYcoma .)
    id              reduce using rule 18 (ENTRADA -> DECLARACION puntoYcoma .)
    $end            reduce using rule 18 (ENTRADA -> DECLARACION puntoYcoma .)
    llave_Cierra    reduce using rule 18 (ENTRADA -> DECLARACION puntoYcoma .)


state 26

    (23) ENTRADA -> ASIGNACION puntoYcoma .

    console         reduce using rule 23 (ENTRADA -> ASIGNACION puntoYcoma .)
    if              reduce using rule 23 (ENTRADA -> ASIGNACION puntoYcoma .)
    while           reduce using rule 23 (ENTRADA -> ASIGNACION puntoYcoma .)
    break           reduce using rule 23 (ENTRADA -> ASIGNACION puntoYcoma .)
    continue        reduce using rule 23 (ENTRADA -> ASIGNACION puntoYcoma .)
    for             reduce using rule 23 (ENTRADA -> ASIGNACION puntoYcoma .)
    let             reduce using rule 23 (ENTRADA -> ASIGNACION puntoYcoma .)
    id              reduce using rule 23 (ENTRADA -> ASIGNACION puntoYcoma .)
    $end            reduce using rule 23 (ENTRADA -> ASIGNACION puntoYcoma .)
    llave_Cierra    reduce using rule 23 (ENTRADA -> ASIGNACION puntoYcoma .)


state 27

    (26) IMPRIMIR -> console punto . log p_Abre LISTAEXPRESIONES p_Cierra

    log             shift and go to state 37


state 28

    (14) IF -> if p_Abre . EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 38
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 29

    (13) WHILE -> while p_Abre . EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 54
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 30

    (11) BREAK -> break puntoYcoma .

    console         reduce using rule 11 (BREAK -> break puntoYcoma .)
    if              reduce using rule 11 (BREAK -> break puntoYcoma .)
    while           reduce using rule 11 (BREAK -> break puntoYcoma .)
    break           reduce using rule 11 (BREAK -> break puntoYcoma .)
    continue        reduce using rule 11 (BREAK -> break puntoYcoma .)
    for             reduce using rule 11 (BREAK -> break puntoYcoma .)
    let             reduce using rule 11 (BREAK -> break puntoYcoma .)
    id              reduce using rule 11 (BREAK -> break puntoYcoma .)
    $end            reduce using rule 11 (BREAK -> break puntoYcoma .)
    llave_Cierra    reduce using rule 11 (BREAK -> break puntoYcoma .)


state 31

    (12) CONTINUE -> continue puntoYcoma .

    console         reduce using rule 12 (CONTINUE -> continue puntoYcoma .)
    if              reduce using rule 12 (CONTINUE -> continue puntoYcoma .)
    while           reduce using rule 12 (CONTINUE -> continue puntoYcoma .)
    break           reduce using rule 12 (CONTINUE -> continue puntoYcoma .)
    continue        reduce using rule 12 (CONTINUE -> continue puntoYcoma .)
    for             reduce using rule 12 (CONTINUE -> continue puntoYcoma .)
    let             reduce using rule 12 (CONTINUE -> continue puntoYcoma .)
    id              reduce using rule 12 (CONTINUE -> continue puntoYcoma .)
    $end            reduce using rule 12 (CONTINUE -> continue puntoYcoma .)
    llave_Cierra    reduce using rule 12 (CONTINUE -> continue puntoYcoma .)


state 32

    (10) FOR -> for p_Abre . DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO

    let             shift and go to state 18

    DECLARACION                    shift and go to state 55

state 33

    (19) DECLARACION -> let id . igual EXPRESION
    (20) DECLARACION -> let id . dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> let id .
    (22) DECLARACION -> let id . dosPuntos TIPO

    igual           shift and go to state 56
    dosPuntos       shift and go to state 57
    puntoYcoma      reduce using rule 21 (DECLARACION -> let id .)


state 34

    (24) ASIGNACION -> id igual . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 58
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 35

    (25) ASIGNACION -> id LISTAINDICES . igual EXPRESION
    (29) LISTAINDICES -> LISTAINDICES . c_Abre EXPRESION c_Cierra

    igual           shift and go to state 59
    c_Abre          shift and go to state 60


state 36

    (30) LISTAINDICES -> c_Abre . EXPRESION c_Cierra
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 61
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 37

    (26) IMPRIMIR -> console punto log . p_Abre LISTAEXPRESIONES p_Cierra

    p_Abre          shift and go to state 62


state 38

    (14) IF -> if p_Abre EXPRESION . p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 63
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 39

    (37) EXPRESION -> resta . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 78
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 40

    (40) EXPRESION -> not . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 79
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 41

    (47) EXPRESION -> FUNCION_TOFIXED .

    p_Cierra        reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    suma            reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    resta           reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    multiplicacion  reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    division        reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    potencia        reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    modulo          reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    and             reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    or              reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    mayor           reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    mayorigual      reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    menor           reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    menorigual      reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    igualacion      reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    diferente       reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    puntoYcoma      reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    c_Cierra        reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)
    coma            reduce using rule 47 (EXPRESION -> FUNCION_TOFIXED .)


state 42

    (48) EXPRESION -> FUNCION_TOEXPONENTIAL .

    p_Cierra        reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    suma            reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    resta           reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    multiplicacion  reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    division        reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    potencia        reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    modulo          reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    and             reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    or              reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    mayor           reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    mayorigual      reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    menor           reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    menorigual      reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    igualacion      reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    diferente       reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    puntoYcoma      reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    c_Cierra        reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)
    coma            reduce using rule 48 (EXPRESION -> FUNCION_TOEXPONENTIAL .)


state 43

    (49) EXPRESION -> FUNCION_TOSTRING .

    p_Cierra        reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    suma            reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    resta           reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    multiplicacion  reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    division        reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    potencia        reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    modulo          reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    and             reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    or              reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    mayor           reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    mayorigual      reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    menor           reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    menorigual      reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    igualacion      reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    diferente       reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    puntoYcoma      reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    c_Cierra        reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)
    coma            reduce using rule 49 (EXPRESION -> FUNCION_TOSTRING .)


state 44

    (50) EXPRESION -> FUNCION_TOLOWERCASE .

    p_Cierra        reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    suma            reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    resta           reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    multiplicacion  reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    division        reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    potencia        reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    modulo          reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    and             reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    or              reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    mayor           reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    mayorigual      reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    menor           reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    menorigual      reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    igualacion      reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    diferente       reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    puntoYcoma      reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    c_Cierra        reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)
    coma            reduce using rule 50 (EXPRESION -> FUNCION_TOLOWERCASE .)


state 45

    (51) EXPRESION -> FUNCION_TOUPPERCASE .

    p_Cierra        reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    suma            reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    resta           reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    multiplicacion  reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    division        reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    potencia        reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    modulo          reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    and             reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    or              reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    mayor           reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    mayorigual      reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    menor           reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    menorigual      reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    igualacion      reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    diferente       reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    puntoYcoma      reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    c_Cierra        reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)
    coma            reduce using rule 51 (EXPRESION -> FUNCION_TOUPPERCASE .)


state 46

    (52) EXPRESION -> FUNCION_SPLIT .

    p_Cierra        reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    suma            reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    resta           reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    multiplicacion  reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    division        reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    potencia        reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    modulo          reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    and             reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    or              reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    mayor           reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    mayorigual      reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    menor           reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    menorigual      reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    igualacion      reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    diferente       reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    puntoYcoma      reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    c_Cierra        reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)
    coma            reduce using rule 52 (EXPRESION -> FUNCION_SPLIT .)


state 47

    (59) EXPRESION -> cadena .

    p_Cierra        reduce using rule 59 (EXPRESION -> cadena .)
    suma            reduce using rule 59 (EXPRESION -> cadena .)
    resta           reduce using rule 59 (EXPRESION -> cadena .)
    multiplicacion  reduce using rule 59 (EXPRESION -> cadena .)
    division        reduce using rule 59 (EXPRESION -> cadena .)
    potencia        reduce using rule 59 (EXPRESION -> cadena .)
    modulo          reduce using rule 59 (EXPRESION -> cadena .)
    and             reduce using rule 59 (EXPRESION -> cadena .)
    or              reduce using rule 59 (EXPRESION -> cadena .)
    mayor           reduce using rule 59 (EXPRESION -> cadena .)
    mayorigual      reduce using rule 59 (EXPRESION -> cadena .)
    menor           reduce using rule 59 (EXPRESION -> cadena .)
    menorigual      reduce using rule 59 (EXPRESION -> cadena .)
    igualacion      reduce using rule 59 (EXPRESION -> cadena .)
    diferente       reduce using rule 59 (EXPRESION -> cadena .)
    puntoYcoma      reduce using rule 59 (EXPRESION -> cadena .)
    c_Cierra        reduce using rule 59 (EXPRESION -> cadena .)
    coma            reduce using rule 59 (EXPRESION -> cadena .)


state 48

    (60) EXPRESION -> numero .

    p_Cierra        reduce using rule 60 (EXPRESION -> numero .)
    suma            reduce using rule 60 (EXPRESION -> numero .)
    resta           reduce using rule 60 (EXPRESION -> numero .)
    multiplicacion  reduce using rule 60 (EXPRESION -> numero .)
    division        reduce using rule 60 (EXPRESION -> numero .)
    potencia        reduce using rule 60 (EXPRESION -> numero .)
    modulo          reduce using rule 60 (EXPRESION -> numero .)
    and             reduce using rule 60 (EXPRESION -> numero .)
    or              reduce using rule 60 (EXPRESION -> numero .)
    mayor           reduce using rule 60 (EXPRESION -> numero .)
    mayorigual      reduce using rule 60 (EXPRESION -> numero .)
    menor           reduce using rule 60 (EXPRESION -> numero .)
    menorigual      reduce using rule 60 (EXPRESION -> numero .)
    igualacion      reduce using rule 60 (EXPRESION -> numero .)
    diferente       reduce using rule 60 (EXPRESION -> numero .)
    puntoYcoma      reduce using rule 60 (EXPRESION -> numero .)
    c_Cierra        reduce using rule 60 (EXPRESION -> numero .)
    coma            reduce using rule 60 (EXPRESION -> numero .)


state 49

    (61) EXPRESION -> true .

    p_Cierra        reduce using rule 61 (EXPRESION -> true .)
    suma            reduce using rule 61 (EXPRESION -> true .)
    resta           reduce using rule 61 (EXPRESION -> true .)
    multiplicacion  reduce using rule 61 (EXPRESION -> true .)
    division        reduce using rule 61 (EXPRESION -> true .)
    potencia        reduce using rule 61 (EXPRESION -> true .)
    modulo          reduce using rule 61 (EXPRESION -> true .)
    and             reduce using rule 61 (EXPRESION -> true .)
    or              reduce using rule 61 (EXPRESION -> true .)
    mayor           reduce using rule 61 (EXPRESION -> true .)
    mayorigual      reduce using rule 61 (EXPRESION -> true .)
    menor           reduce using rule 61 (EXPRESION -> true .)
    menorigual      reduce using rule 61 (EXPRESION -> true .)
    igualacion      reduce using rule 61 (EXPRESION -> true .)
    diferente       reduce using rule 61 (EXPRESION -> true .)
    puntoYcoma      reduce using rule 61 (EXPRESION -> true .)
    c_Cierra        reduce using rule 61 (EXPRESION -> true .)
    coma            reduce using rule 61 (EXPRESION -> true .)


state 50

    (62) EXPRESION -> false .

    p_Cierra        reduce using rule 62 (EXPRESION -> false .)
    suma            reduce using rule 62 (EXPRESION -> false .)
    resta           reduce using rule 62 (EXPRESION -> false .)
    multiplicacion  reduce using rule 62 (EXPRESION -> false .)
    division        reduce using rule 62 (EXPRESION -> false .)
    potencia        reduce using rule 62 (EXPRESION -> false .)
    modulo          reduce using rule 62 (EXPRESION -> false .)
    and             reduce using rule 62 (EXPRESION -> false .)
    or              reduce using rule 62 (EXPRESION -> false .)
    mayor           reduce using rule 62 (EXPRESION -> false .)
    mayorigual      reduce using rule 62 (EXPRESION -> false .)
    menor           reduce using rule 62 (EXPRESION -> false .)
    menorigual      reduce using rule 62 (EXPRESION -> false .)
    igualacion      reduce using rule 62 (EXPRESION -> false .)
    diferente       reduce using rule 62 (EXPRESION -> false .)
    puntoYcoma      reduce using rule 62 (EXPRESION -> false .)
    c_Cierra        reduce using rule 62 (EXPRESION -> false .)
    coma            reduce using rule 62 (EXPRESION -> false .)


state 51

    (63) EXPRESION -> null .

    p_Cierra        reduce using rule 63 (EXPRESION -> null .)
    suma            reduce using rule 63 (EXPRESION -> null .)
    resta           reduce using rule 63 (EXPRESION -> null .)
    multiplicacion  reduce using rule 63 (EXPRESION -> null .)
    division        reduce using rule 63 (EXPRESION -> null .)
    potencia        reduce using rule 63 (EXPRESION -> null .)
    modulo          reduce using rule 63 (EXPRESION -> null .)
    and             reduce using rule 63 (EXPRESION -> null .)
    or              reduce using rule 63 (EXPRESION -> null .)
    mayor           reduce using rule 63 (EXPRESION -> null .)
    mayorigual      reduce using rule 63 (EXPRESION -> null .)
    menor           reduce using rule 63 (EXPRESION -> null .)
    menorigual      reduce using rule 63 (EXPRESION -> null .)
    igualacion      reduce using rule 63 (EXPRESION -> null .)
    diferente       reduce using rule 63 (EXPRESION -> null .)
    puntoYcoma      reduce using rule 63 (EXPRESION -> null .)
    c_Cierra        reduce using rule 63 (EXPRESION -> null .)
    coma            reduce using rule 63 (EXPRESION -> null .)


state 52

    (64) EXPRESION -> id .
    (65) EXPRESION -> id . LISTAINDICES
    (53) FUNCION_TOFIXED -> id . punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> id . punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> id . punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> id . punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> id . punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> id . punto split p_Abre cadena p_Cierra
    (29) LISTAINDICES -> . LISTAINDICES c_Abre EXPRESION c_Cierra
    (30) LISTAINDICES -> . c_Abre EXPRESION c_Cierra

    p_Cierra        reduce using rule 64 (EXPRESION -> id .)
    suma            reduce using rule 64 (EXPRESION -> id .)
    resta           reduce using rule 64 (EXPRESION -> id .)
    multiplicacion  reduce using rule 64 (EXPRESION -> id .)
    division        reduce using rule 64 (EXPRESION -> id .)
    potencia        reduce using rule 64 (EXPRESION -> id .)
    modulo          reduce using rule 64 (EXPRESION -> id .)
    and             reduce using rule 64 (EXPRESION -> id .)
    or              reduce using rule 64 (EXPRESION -> id .)
    mayor           reduce using rule 64 (EXPRESION -> id .)
    mayorigual      reduce using rule 64 (EXPRESION -> id .)
    menor           reduce using rule 64 (EXPRESION -> id .)
    menorigual      reduce using rule 64 (EXPRESION -> id .)
    igualacion      reduce using rule 64 (EXPRESION -> id .)
    diferente       reduce using rule 64 (EXPRESION -> id .)
    puntoYcoma      reduce using rule 64 (EXPRESION -> id .)
    c_Cierra        reduce using rule 64 (EXPRESION -> id .)
    coma            reduce using rule 64 (EXPRESION -> id .)
    punto           shift and go to state 81
    c_Abre          shift and go to state 36

    LISTAINDICES                   shift and go to state 80

state 53

    (66) EXPRESION -> c_Abre . LISTAEXPRESIONES c_Cierra
    (27) LISTAEXPRESIONES -> . LISTAEXPRESIONES coma EXPRESION
    (28) LISTAEXPRESIONES -> . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    LISTAEXPRESIONES               shift and go to state 82
    EXPRESION                      shift and go to state 83
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 54

    (13) WHILE -> while p_Abre EXPRESION . p_Cierra llave_Abre ENTRADAS llave_Cierra
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 84
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 55

    (10) FOR -> for p_Abre DECLARACION . puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra

    puntoYcoma      shift and go to state 85


state 56

    (19) DECLARACION -> let id igual . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 86
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 57

    (20) DECLARACION -> let id dosPuntos . TIPO igual EXPRESION
    (22) DECLARACION -> let id dosPuntos . TIPO
    (67) TIPO -> . number
    (68) TIPO -> . string
    (69) TIPO -> . boolean
    (70) TIPO -> . any

    number          shift and go to state 88
    string          shift and go to state 89
    boolean         shift and go to state 90
    any             shift and go to state 91

    TIPO                           shift and go to state 87

state 58

    (24) ASIGNACION -> id igual EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 24 (ASIGNACION -> id igual EXPRESION .)
    p_Cierra        reduce using rule 24 (ASIGNACION -> id igual EXPRESION .)
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 59

    (25) ASIGNACION -> id LISTAINDICES igual . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 92
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 60

    (29) LISTAINDICES -> LISTAINDICES c_Abre . EXPRESION c_Cierra
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 93
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 61

    (30) LISTAINDICES -> c_Abre EXPRESION . c_Cierra
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        shift and go to state 94
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 62

    (26) IMPRIMIR -> console punto log p_Abre . LISTAEXPRESIONES p_Cierra
    (27) LISTAEXPRESIONES -> . LISTAEXPRESIONES coma EXPRESION
    (28) LISTAEXPRESIONES -> . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    LISTAEXPRESIONES               shift and go to state 95
    EXPRESION                      shift and go to state 83
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 63

    (14) IF -> if p_Abre EXPRESION p_Cierra . llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    llave_Abre      shift and go to state 96


state 64

    (31) EXPRESION -> EXPRESION suma . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 97
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 65

    (32) EXPRESION -> EXPRESION resta . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 98
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 66

    (33) EXPRESION -> EXPRESION multiplicacion . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 99
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 67

    (34) EXPRESION -> EXPRESION division . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 100
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 68

    (35) EXPRESION -> EXPRESION potencia . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 101
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 69

    (36) EXPRESION -> EXPRESION modulo . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 102
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 70

    (38) EXPRESION -> EXPRESION and . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 103
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 71

    (39) EXPRESION -> EXPRESION or . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 104
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 72

    (41) EXPRESION -> EXPRESION mayor . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 105
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 73

    (42) EXPRESION -> EXPRESION mayorigual . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 106
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 74

    (43) EXPRESION -> EXPRESION menor . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 107
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 75

    (44) EXPRESION -> EXPRESION menorigual . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 108
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 76

    (45) EXPRESION -> EXPRESION igualacion . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 109
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 77

    (46) EXPRESION -> EXPRESION diferente . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 110
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 78

    (37) EXPRESION -> resta EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    suma            reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    resta           reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    multiplicacion  reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    division        reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    potencia        reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    modulo          reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    and             reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    or              reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    mayor           reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    mayorigual      reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    menor           reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    menorigual      reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    igualacion      reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    diferente       reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    puntoYcoma      reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    c_Cierra        reduce using rule 37 (EXPRESION -> resta EXPRESION .)
    coma            reduce using rule 37 (EXPRESION -> resta EXPRESION .)

  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! multiplicacion  [ shift and go to state 66 ]
  ! division        [ shift and go to state 67 ]
  ! potencia        [ shift and go to state 68 ]
  ! modulo          [ shift and go to state 69 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 79

    (40) EXPRESION -> not EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 40 (EXPRESION -> not EXPRESION .)
    suma            reduce using rule 40 (EXPRESION -> not EXPRESION .)
    resta           reduce using rule 40 (EXPRESION -> not EXPRESION .)
    multiplicacion  reduce using rule 40 (EXPRESION -> not EXPRESION .)
    division        reduce using rule 40 (EXPRESION -> not EXPRESION .)
    potencia        reduce using rule 40 (EXPRESION -> not EXPRESION .)
    modulo          reduce using rule 40 (EXPRESION -> not EXPRESION .)
    and             reduce using rule 40 (EXPRESION -> not EXPRESION .)
    or              reduce using rule 40 (EXPRESION -> not EXPRESION .)
    mayor           reduce using rule 40 (EXPRESION -> not EXPRESION .)
    mayorigual      reduce using rule 40 (EXPRESION -> not EXPRESION .)
    menor           reduce using rule 40 (EXPRESION -> not EXPRESION .)
    menorigual      reduce using rule 40 (EXPRESION -> not EXPRESION .)
    igualacion      reduce using rule 40 (EXPRESION -> not EXPRESION .)
    diferente       reduce using rule 40 (EXPRESION -> not EXPRESION .)
    puntoYcoma      reduce using rule 40 (EXPRESION -> not EXPRESION .)
    c_Cierra        reduce using rule 40 (EXPRESION -> not EXPRESION .)
    coma            reduce using rule 40 (EXPRESION -> not EXPRESION .)

  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! multiplicacion  [ shift and go to state 66 ]
  ! division        [ shift and go to state 67 ]
  ! potencia        [ shift and go to state 68 ]
  ! modulo          [ shift and go to state 69 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 80

    (65) EXPRESION -> id LISTAINDICES .
    (29) LISTAINDICES -> LISTAINDICES . c_Abre EXPRESION c_Cierra

    p_Cierra        reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    suma            reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    resta           reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    multiplicacion  reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    division        reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    potencia        reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    modulo          reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    and             reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    or              reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    mayor           reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    mayorigual      reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    menor           reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    menorigual      reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    igualacion      reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    diferente       reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    puntoYcoma      reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    c_Cierra        reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    coma            reduce using rule 65 (EXPRESION -> id LISTAINDICES .)
    c_Abre          shift and go to state 60


state 81

    (53) FUNCION_TOFIXED -> id punto . toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> id punto . toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> id punto . toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> id punto . toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> id punto . toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> id punto . split p_Abre cadena p_Cierra

    toFixed         shift and go to state 111
    toExponential   shift and go to state 112
    toString        shift and go to state 113
    toLowerCase     shift and go to state 114
    toUpperCase     shift and go to state 115
    split           shift and go to state 116


state 82

    (66) EXPRESION -> c_Abre LISTAEXPRESIONES . c_Cierra
    (27) LISTAEXPRESIONES -> LISTAEXPRESIONES . coma EXPRESION

    c_Cierra        shift and go to state 117
    coma            shift and go to state 118


state 83

    (28) LISTAEXPRESIONES -> EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        reduce using rule 28 (LISTAEXPRESIONES -> EXPRESION .)
    coma            reduce using rule 28 (LISTAEXPRESIONES -> EXPRESION .)
    p_Cierra        reduce using rule 28 (LISTAEXPRESIONES -> EXPRESION .)
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 84

    (13) WHILE -> while p_Abre EXPRESION p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 119


state 85

    (10) FOR -> for p_Abre DECLARACION puntoYcoma . EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 120
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 86

    (19) DECLARACION -> let id igual EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 19 (DECLARACION -> let id igual EXPRESION .)
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 87

    (20) DECLARACION -> let id dosPuntos TIPO . igual EXPRESION
    (22) DECLARACION -> let id dosPuntos TIPO .

    igual           shift and go to state 121
    puntoYcoma      reduce using rule 22 (DECLARACION -> let id dosPuntos TIPO .)


state 88

    (67) TIPO -> number .

    igual           reduce using rule 67 (TIPO -> number .)
    puntoYcoma      reduce using rule 67 (TIPO -> number .)


state 89

    (68) TIPO -> string .

    igual           reduce using rule 68 (TIPO -> string .)
    puntoYcoma      reduce using rule 68 (TIPO -> string .)


state 90

    (69) TIPO -> boolean .

    igual           reduce using rule 69 (TIPO -> boolean .)
    puntoYcoma      reduce using rule 69 (TIPO -> boolean .)


state 91

    (70) TIPO -> any .

    igual           reduce using rule 70 (TIPO -> any .)
    puntoYcoma      reduce using rule 70 (TIPO -> any .)


state 92

    (25) ASIGNACION -> id LISTAINDICES igual EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 25 (ASIGNACION -> id LISTAINDICES igual EXPRESION .)
    p_Cierra        reduce using rule 25 (ASIGNACION -> id LISTAINDICES igual EXPRESION .)
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 93

    (29) LISTAINDICES -> LISTAINDICES c_Abre EXPRESION . c_Cierra
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        shift and go to state 122
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 94

    (30) LISTAINDICES -> c_Abre EXPRESION c_Cierra .

    igual           reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    c_Abre          reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    p_Cierra        reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    suma            reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    resta           reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    multiplicacion  reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    division        reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    potencia        reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    modulo          reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    and             reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    or              reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    mayor           reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    mayorigual      reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    menor           reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    menorigual      reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    igualacion      reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    diferente       reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    puntoYcoma      reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    c_Cierra        reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)
    coma            reduce using rule 30 (LISTAINDICES -> c_Abre EXPRESION c_Cierra .)


state 95

    (26) IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES . p_Cierra
    (27) LISTAEXPRESIONES -> LISTAEXPRESIONES . coma EXPRESION

    p_Cierra        shift and go to state 123
    coma            shift and go to state 118


state 96

    (14) IF -> if p_Abre EXPRESION p_Cierra llave_Abre . ENTRADAS llave_Cierra COMPLEMENTO_IF
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (18) ENTRADA -> . DECLARACION puntoYcoma
    (23) ENTRADA -> . ASIGNACION puntoYcoma
    (26) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (13) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (11) BREAK -> . break puntoYcoma
    (12) CONTINUE -> . continue puntoYcoma
    (10) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 12
    if              shift and go to state 13
    while           shift and go to state 14
    break           shift and go to state 15
    continue        shift and go to state 16
    for             shift and go to state 17
    let             shift and go to state 18
    id              shift and go to state 19

    ENTRADAS                       shift and go to state 124
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    DECLARACION                    shift and go to state 10
    ASIGNACION                     shift and go to state 11

state 97

    (31) EXPRESION -> EXPRESION suma EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .)
    suma            reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .)
    resta           reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .)
    and             reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .)
    or              reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .)
    puntoYcoma      reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .)
    c_Cierra        reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .)
    coma            reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .)
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77

  ! multiplicacion  [ reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! division        [ reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! potencia        [ reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! modulo          [ reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! mayor           [ reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! mayorigual      [ reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! menor           [ reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! menorigual      [ reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! igualacion      [ reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! diferente       [ reduce using rule 31 (EXPRESION -> EXPRESION suma EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]


state 98

    (32) EXPRESION -> EXPRESION resta EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .)
    suma            reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .)
    resta           reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .)
    and             reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .)
    or              reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .)
    puntoYcoma      reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .)
    c_Cierra        reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .)
    coma            reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .)
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77

  ! multiplicacion  [ reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! division        [ reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! potencia        [ reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! modulo          [ reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! mayor           [ reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! mayorigual      [ reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! menor           [ reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! menorigual      [ reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! igualacion      [ reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! diferente       [ reduce using rule 32 (EXPRESION -> EXPRESION resta EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]


state 99

    (33) EXPRESION -> EXPRESION multiplicacion EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    suma            reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    resta           reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    multiplicacion  reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    division        reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    modulo          reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    and             reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    or              reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    mayor           reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    mayorigual      reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    menor           reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    menorigual      reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    igualacion      reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    diferente       reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    puntoYcoma      reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    c_Cierra        reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    coma            reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .)
    potencia        shift and go to state 68

  ! potencia        [ reduce using rule 33 (EXPRESION -> EXPRESION multiplicacion EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! multiplicacion  [ shift and go to state 66 ]
  ! division        [ shift and go to state 67 ]
  ! modulo          [ shift and go to state 69 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 100

    (34) EXPRESION -> EXPRESION division EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    suma            reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    resta           reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    multiplicacion  reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    division        reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    modulo          reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    and             reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    or              reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    mayor           reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    mayorigual      reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    menor           reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    menorigual      reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    igualacion      reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    diferente       reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    puntoYcoma      reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    c_Cierra        reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    coma            reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .)
    potencia        shift and go to state 68

  ! potencia        [ reduce using rule 34 (EXPRESION -> EXPRESION division EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! multiplicacion  [ shift and go to state 66 ]
  ! division        [ shift and go to state 67 ]
  ! modulo          [ shift and go to state 69 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 101

    (35) EXPRESION -> EXPRESION potencia EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    suma            reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    resta           reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    multiplicacion  reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    division        reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    potencia        reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    modulo          reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    and             reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    or              reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    mayor           reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    mayorigual      reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    menor           reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    menorigual      reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    igualacion      reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    diferente       reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    puntoYcoma      reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    c_Cierra        reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)
    coma            reduce using rule 35 (EXPRESION -> EXPRESION potencia EXPRESION .)

  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! multiplicacion  [ shift and go to state 66 ]
  ! division        [ shift and go to state 67 ]
  ! potencia        [ shift and go to state 68 ]
  ! modulo          [ shift and go to state 69 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 102

    (36) EXPRESION -> EXPRESION modulo EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    suma            reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    resta           reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    multiplicacion  reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    division        reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    modulo          reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    and             reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    or              reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayor           reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorigual      reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menor           reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorigual      reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    igualacion      reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    diferente       reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    puntoYcoma      reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    c_Cierra        reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    coma            reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .)
    potencia        shift and go to state 68

  ! potencia        [ reduce using rule 36 (EXPRESION -> EXPRESION modulo EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! multiplicacion  [ shift and go to state 66 ]
  ! division        [ shift and go to state 67 ]
  ! modulo          [ shift and go to state 69 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 103

    (38) EXPRESION -> EXPRESION and EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .)
    and             reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .)
    or              reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .)
    puntoYcoma      reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .)
    c_Cierra        reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .)
    coma            reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .)
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77

  ! suma            [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! resta           [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! multiplicacion  [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! division        [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! potencia        [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! modulo          [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayor           [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayorigual      [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menor           [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menorigual      [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! igualacion      [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! diferente       [ reduce using rule 38 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]


state 104

    (39) EXPRESION -> EXPRESION or EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .)
    or              reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .)
    puntoYcoma      reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .)
    c_Cierra        reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .)
    coma            reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .)
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77

  ! suma            [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! resta           [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! multiplicacion  [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! division        [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! potencia        [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! modulo          [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! and             [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayor           [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayorigual      [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menor           [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menorigual      [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! igualacion      [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! diferente       [ reduce using rule 39 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! or              [ shift and go to state 71 ]


state 105

    (41) EXPRESION -> EXPRESION mayor EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    suma            reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    resta           reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    and             reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    or              reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mayor           reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mayorigual      reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menor           reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menorigual      reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    igualacion      reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    diferente       reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    puntoYcoma      reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    c_Cierra        reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    coma            reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .)
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69

  ! multiplicacion  [ reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! division        [ reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! potencia        [ reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! modulo          [ reduce using rule 41 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 106

    (42) EXPRESION -> EXPRESION mayorigual EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    suma            reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    resta           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    and             reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    or              reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mayor           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mayorigual      reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menor           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menorigual      reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    igualacion      reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    diferente       reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    puntoYcoma      reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    c_Cierra        reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    coma            reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69

  ! multiplicacion  [ reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! division        [ reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! potencia        [ reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! modulo          [ reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 107

    (43) EXPRESION -> EXPRESION menor EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    suma            reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    resta           reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    and             reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    or              reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    mayor           reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    mayorigual      reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    menor           reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    menorigual      reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    igualacion      reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    diferente       reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    puntoYcoma      reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    c_Cierra        reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    coma            reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .)
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69

  ! multiplicacion  [ reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! division        [ reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! potencia        [ reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! modulo          [ reduce using rule 43 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 108

    (44) EXPRESION -> EXPRESION menorigual EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    suma            reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    resta           reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    and             reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    or              reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mayor           reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mayorigual      reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menor           reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menorigual      reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    igualacion      reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    diferente       reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    puntoYcoma      reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    c_Cierra        reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    coma            reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69

  ! multiplicacion  [ reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! division        [ reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! potencia        [ reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! modulo          [ reduce using rule 44 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 109

    (45) EXPRESION -> EXPRESION igualacion EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    suma            reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    resta           reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    and             reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    or              reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    mayor           reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    mayorigual      reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    menor           reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    menorigual      reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    igualacion      reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    diferente       reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    puntoYcoma      reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    c_Cierra        reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    coma            reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .)
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69

  ! multiplicacion  [ reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! division        [ reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! potencia        [ reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! modulo          [ reduce using rule 45 (EXPRESION -> EXPRESION igualacion EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 110

    (46) EXPRESION -> EXPRESION diferente EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    suma            reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    resta           reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    and             reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    or              reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mayor           reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mayorigual      reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menor           reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menorigual      reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    igualacion      reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    diferente       reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    puntoYcoma      reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    c_Cierra        reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    coma            reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .)
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69

  ! multiplicacion  [ reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! division        [ reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! potencia        [ reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! modulo          [ reduce using rule 46 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! suma            [ shift and go to state 64 ]
  ! resta           [ shift and go to state 65 ]
  ! and             [ shift and go to state 70 ]
  ! or              [ shift and go to state 71 ]
  ! mayor           [ shift and go to state 72 ]
  ! mayorigual      [ shift and go to state 73 ]
  ! menor           [ shift and go to state 74 ]
  ! menorigual      [ shift and go to state 75 ]
  ! igualacion      [ shift and go to state 76 ]
  ! diferente       [ shift and go to state 77 ]


state 111

    (53) FUNCION_TOFIXED -> id punto toFixed . p_Abre EXPRESION p_Cierra

    p_Abre          shift and go to state 125


state 112

    (54) FUNCION_TOEXPONENTIAL -> id punto toExponential . p_Abre EXPRESION p_Cierra

    p_Abre          shift and go to state 126


state 113

    (55) FUNCION_TOSTRING -> id punto toString . p_Abre p_Cierra

    p_Abre          shift and go to state 127


state 114

    (56) FUNCION_TOLOWERCASE -> id punto toLowerCase . p_Abre p_Cierra

    p_Abre          shift and go to state 128


state 115

    (57) FUNCION_TOUPPERCASE -> id punto toUpperCase . p_Abre p_Cierra

    p_Abre          shift and go to state 129


state 116

    (58) FUNCION_SPLIT -> id punto split . p_Abre cadena p_Cierra

    p_Abre          shift and go to state 130


state 117

    (66) EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .

    p_Cierra        reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    suma            reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    resta           reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    multiplicacion  reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    division        reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    potencia        reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    modulo          reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    and             reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    or              reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    mayor           reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    mayorigual      reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    menor           reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    menorigual      reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    igualacion      reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    diferente       reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    puntoYcoma      reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    c_Cierra        reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)
    coma            reduce using rule 66 (EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra .)


state 118

    (27) LISTAEXPRESIONES -> LISTAEXPRESIONES coma . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 131
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 119

    (13) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (18) ENTRADA -> . DECLARACION puntoYcoma
    (23) ENTRADA -> . ASIGNACION puntoYcoma
    (26) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (13) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (11) BREAK -> . break puntoYcoma
    (12) CONTINUE -> . continue puntoYcoma
    (10) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 12
    if              shift and go to state 13
    while           shift and go to state 14
    break           shift and go to state 15
    continue        shift and go to state 16
    for             shift and go to state 17
    let             shift and go to state 18
    id              shift and go to state 19

    ENTRADAS                       shift and go to state 132
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    DECLARACION                    shift and go to state 10
    ASIGNACION                     shift and go to state 11

state 120

    (10) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION . puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      shift and go to state 133
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 121

    (20) DECLARACION -> let id dosPuntos TIPO igual . EXPRESION
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 134
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 122

    (29) LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .

    igual           reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    c_Abre          reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    p_Cierra        reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    suma            reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    resta           reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    multiplicacion  reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    division        reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    potencia        reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    modulo          reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    and             reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    or              reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    mayor           reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    mayorigual      reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    menor           reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    menorigual      reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    igualacion      reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    diferente       reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    puntoYcoma      reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    c_Cierra        reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)
    coma            reduce using rule 29 (LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra .)


state 123

    (26) IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra .

    puntoYcoma      reduce using rule 26 (IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra .)


state 124

    (14) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS . llave_Cierra COMPLEMENTO_IF
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (18) ENTRADA -> . DECLARACION puntoYcoma
    (23) ENTRADA -> . ASIGNACION puntoYcoma
    (26) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (13) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (11) BREAK -> . break puntoYcoma
    (12) CONTINUE -> . continue puntoYcoma
    (10) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 135
    console         shift and go to state 12
    if              shift and go to state 13
    while           shift and go to state 14
    break           shift and go to state 15
    continue        shift and go to state 16
    for             shift and go to state 17
    let             shift and go to state 18
    id              shift and go to state 19

    ENTRADA                        shift and go to state 20
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    DECLARACION                    shift and go to state 10
    ASIGNACION                     shift and go to state 11

state 125

    (53) FUNCION_TOFIXED -> id punto toFixed p_Abre . EXPRESION p_Cierra
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 136
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 126

    (54) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre . EXPRESION p_Cierra
    (31) EXPRESION -> . EXPRESION suma EXPRESION
    (32) EXPRESION -> . EXPRESION resta EXPRESION
    (33) EXPRESION -> . EXPRESION multiplicacion EXPRESION
    (34) EXPRESION -> . EXPRESION division EXPRESION
    (35) EXPRESION -> . EXPRESION potencia EXPRESION
    (36) EXPRESION -> . EXPRESION modulo EXPRESION
    (37) EXPRESION -> . resta EXPRESION
    (38) EXPRESION -> . EXPRESION and EXPRESION
    (39) EXPRESION -> . EXPRESION or EXPRESION
    (40) EXPRESION -> . not EXPRESION
    (41) EXPRESION -> . EXPRESION mayor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menor EXPRESION
    (44) EXPRESION -> . EXPRESION menorigual EXPRESION
    (45) EXPRESION -> . EXPRESION igualacion EXPRESION
    (46) EXPRESION -> . EXPRESION diferente EXPRESION
    (47) EXPRESION -> . FUNCION_TOFIXED
    (48) EXPRESION -> . FUNCION_TOEXPONENTIAL
    (49) EXPRESION -> . FUNCION_TOSTRING
    (50) EXPRESION -> . FUNCION_TOLOWERCASE
    (51) EXPRESION -> . FUNCION_TOUPPERCASE
    (52) EXPRESION -> . FUNCION_SPLIT
    (59) EXPRESION -> . cadena
    (60) EXPRESION -> . numero
    (61) EXPRESION -> . true
    (62) EXPRESION -> . false
    (63) EXPRESION -> . null
    (64) EXPRESION -> . id
    (65) EXPRESION -> . id LISTAINDICES
    (66) EXPRESION -> . c_Abre LISTAEXPRESIONES c_Cierra
    (53) FUNCION_TOFIXED -> . id punto toFixed p_Abre EXPRESION p_Cierra
    (54) FUNCION_TOEXPONENTIAL -> . id punto toExponential p_Abre EXPRESION p_Cierra
    (55) FUNCION_TOSTRING -> . id punto toString p_Abre p_Cierra
    (56) FUNCION_TOLOWERCASE -> . id punto toLowerCase p_Abre p_Cierra
    (57) FUNCION_TOUPPERCASE -> . id punto toUpperCase p_Abre p_Cierra
    (58) FUNCION_SPLIT -> . id punto split p_Abre cadena p_Cierra

    resta           shift and go to state 39
    not             shift and go to state 40
    cadena          shift and go to state 47
    numero          shift and go to state 48
    true            shift and go to state 49
    false           shift and go to state 50
    null            shift and go to state 51
    id              shift and go to state 52
    c_Abre          shift and go to state 53

    EXPRESION                      shift and go to state 137
    FUNCION_TOFIXED                shift and go to state 41
    FUNCION_TOEXPONENTIAL          shift and go to state 42
    FUNCION_TOSTRING               shift and go to state 43
    FUNCION_TOLOWERCASE            shift and go to state 44
    FUNCION_TOUPPERCASE            shift and go to state 45
    FUNCION_SPLIT                  shift and go to state 46

state 127

    (55) FUNCION_TOSTRING -> id punto toString p_Abre . p_Cierra

    p_Cierra        shift and go to state 138


state 128

    (56) FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre . p_Cierra

    p_Cierra        shift and go to state 139


state 129

    (57) FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre . p_Cierra

    p_Cierra        shift and go to state 140


state 130

    (58) FUNCION_SPLIT -> id punto split p_Abre . cadena p_Cierra

    cadena          shift and go to state 141


state 131

    (27) LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    c_Cierra        reduce using rule 27 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    coma            reduce using rule 27 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    p_Cierra        reduce using rule 27 (LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION .)
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 132

    (13) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (18) ENTRADA -> . DECLARACION puntoYcoma
    (23) ENTRADA -> . ASIGNACION puntoYcoma
    (26) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (13) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (11) BREAK -> . break puntoYcoma
    (12) CONTINUE -> . continue puntoYcoma
    (10) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 142
    console         shift and go to state 12
    if              shift and go to state 13
    while           shift and go to state 14
    break           shift and go to state 15
    continue        shift and go to state 16
    for             shift and go to state 17
    let             shift and go to state 18
    id              shift and go to state 19

    ENTRADA                        shift and go to state 20
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    DECLARACION                    shift and go to state 10
    ASIGNACION                     shift and go to state 11

state 133

    (10) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma . ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    id              shift and go to state 19

    ASIGNACION                     shift and go to state 143

state 134

    (20) DECLARACION -> let id dosPuntos TIPO igual EXPRESION .
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    puntoYcoma      reduce using rule 20 (DECLARACION -> let id dosPuntos TIPO igual EXPRESION .)
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 135

    (14) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra . COMPLEMENTO_IF
    (15) COMPLEMENTO_IF -> . else IF
    (16) COMPLEMENTO_IF -> . else llave_Abre ENTRADAS llave_Cierra
    (17) COMPLEMENTO_IF -> .

    else            shift and go to state 145
    puntoYcoma      reduce using rule 17 (COMPLEMENTO_IF -> .)

    COMPLEMENTO_IF                 shift and go to state 144

state 136

    (53) FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION . p_Cierra
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 146
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 137

    (54) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION . p_Cierra
    (31) EXPRESION -> EXPRESION . suma EXPRESION
    (32) EXPRESION -> EXPRESION . resta EXPRESION
    (33) EXPRESION -> EXPRESION . multiplicacion EXPRESION
    (34) EXPRESION -> EXPRESION . division EXPRESION
    (35) EXPRESION -> EXPRESION . potencia EXPRESION
    (36) EXPRESION -> EXPRESION . modulo EXPRESION
    (38) EXPRESION -> EXPRESION . and EXPRESION
    (39) EXPRESION -> EXPRESION . or EXPRESION
    (41) EXPRESION -> EXPRESION . mayor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menor EXPRESION
    (44) EXPRESION -> EXPRESION . menorigual EXPRESION
    (45) EXPRESION -> EXPRESION . igualacion EXPRESION
    (46) EXPRESION -> EXPRESION . diferente EXPRESION

    p_Cierra        shift and go to state 147
    suma            shift and go to state 64
    resta           shift and go to state 65
    multiplicacion  shift and go to state 66
    division        shift and go to state 67
    potencia        shift and go to state 68
    modulo          shift and go to state 69
    and             shift and go to state 70
    or              shift and go to state 71
    mayor           shift and go to state 72
    mayorigual      shift and go to state 73
    menor           shift and go to state 74
    menorigual      shift and go to state 75
    igualacion      shift and go to state 76
    diferente       shift and go to state 77


state 138

    (55) FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .

    p_Cierra        reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    suma            reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    resta           reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    multiplicacion  reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    division        reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    potencia        reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    modulo          reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    and             reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    or              reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    mayor           reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    mayorigual      reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    menor           reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    menorigual      reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    igualacion      reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    diferente       reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    puntoYcoma      reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    c_Cierra        reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)
    coma            reduce using rule 55 (FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra .)


state 139

    (56) FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .

    p_Cierra        reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    suma            reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    resta           reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    multiplicacion  reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    division        reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    potencia        reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    modulo          reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    and             reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    or              reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    mayor           reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    mayorigual      reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    menor           reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    menorigual      reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    igualacion      reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    diferente       reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    puntoYcoma      reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    c_Cierra        reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)
    coma            reduce using rule 56 (FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra .)


state 140

    (57) FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .

    p_Cierra        reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    suma            reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    resta           reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    multiplicacion  reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    division        reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    potencia        reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    modulo          reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    and             reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    or              reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    mayor           reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    mayorigual      reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    menor           reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    menorigual      reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    igualacion      reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    diferente       reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    puntoYcoma      reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    c_Cierra        reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)
    coma            reduce using rule 57 (FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra .)


state 141

    (58) FUNCION_SPLIT -> id punto split p_Abre cadena . p_Cierra

    p_Cierra        shift and go to state 148


state 142

    (13) WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 13 (WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra .)


state 143

    (10) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION . p_Cierra llave_Abre ENTRADAS llave_Cierra

    p_Cierra        shift and go to state 149


state 144

    (14) IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF .

    puntoYcoma      reduce using rule 14 (IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF .)


state 145

    (15) COMPLEMENTO_IF -> else . IF
    (16) COMPLEMENTO_IF -> else . llave_Abre ENTRADAS llave_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF

    llave_Abre      shift and go to state 151
    if              shift and go to state 13

    IF                             shift and go to state 150

state 146

    (53) FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .

    p_Cierra        reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    suma            reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    resta           reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    multiplicacion  reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    division        reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    potencia        reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    modulo          reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    and             reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    or              reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    mayor           reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    mayorigual      reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    menor           reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    menorigual      reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    igualacion      reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    diferente       reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    puntoYcoma      reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    c_Cierra        reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)
    coma            reduce using rule 53 (FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra .)


state 147

    (54) FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .

    p_Cierra        reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    suma            reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    resta           reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    multiplicacion  reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    division        reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    potencia        reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    modulo          reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    and             reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    or              reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    mayor           reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    mayorigual      reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    menor           reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    menorigual      reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    igualacion      reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    diferente       reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    puntoYcoma      reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    c_Cierra        reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)
    coma            reduce using rule 54 (FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra .)


state 148

    (58) FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .

    p_Cierra        reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    suma            reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    resta           reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    multiplicacion  reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    division        reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    potencia        reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    modulo          reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    and             reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    or              reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    mayor           reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    mayorigual      reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    menor           reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    menorigual      reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    igualacion      reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    diferente       reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    puntoYcoma      reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    c_Cierra        reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)
    coma            reduce using rule 58 (FUNCION_SPLIT -> id punto split p_Abre cadena p_Cierra .)


state 149

    (10) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra . llave_Abre ENTRADAS llave_Cierra

    llave_Abre      shift and go to state 152


state 150

    (15) COMPLEMENTO_IF -> else IF .

    puntoYcoma      reduce using rule 15 (COMPLEMENTO_IF -> else IF .)


state 151

    (16) COMPLEMENTO_IF -> else llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (18) ENTRADA -> . DECLARACION puntoYcoma
    (23) ENTRADA -> . ASIGNACION puntoYcoma
    (26) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (13) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (11) BREAK -> . break puntoYcoma
    (12) CONTINUE -> . continue puntoYcoma
    (10) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 12
    if              shift and go to state 13
    while           shift and go to state 14
    break           shift and go to state 15
    continue        shift and go to state 16
    for             shift and go to state 17
    let             shift and go to state 18
    id              shift and go to state 19

    ENTRADAS                       shift and go to state 153
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    DECLARACION                    shift and go to state 10
    ASIGNACION                     shift and go to state 11

state 152

    (10) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre . ENTRADAS llave_Cierra
    (2) ENTRADAS -> . ENTRADAS ENTRADA
    (3) ENTRADAS -> . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (18) ENTRADA -> . DECLARACION puntoYcoma
    (23) ENTRADA -> . ASIGNACION puntoYcoma
    (26) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (13) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (11) BREAK -> . break puntoYcoma
    (12) CONTINUE -> . continue puntoYcoma
    (10) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    console         shift and go to state 12
    if              shift and go to state 13
    while           shift and go to state 14
    break           shift and go to state 15
    continue        shift and go to state 16
    for             shift and go to state 17
    let             shift and go to state 18
    id              shift and go to state 19

    DECLARACION                    shift and go to state 10
    ASIGNACION                     shift and go to state 11
    ENTRADAS                       shift and go to state 154
    ENTRADA                        shift and go to state 3
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9

state 153

    (16) COMPLEMENTO_IF -> else llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (18) ENTRADA -> . DECLARACION puntoYcoma
    (23) ENTRADA -> . ASIGNACION puntoYcoma
    (26) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (13) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (11) BREAK -> . break puntoYcoma
    (12) CONTINUE -> . continue puntoYcoma
    (10) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 155
    console         shift and go to state 12
    if              shift and go to state 13
    while           shift and go to state 14
    break           shift and go to state 15
    continue        shift and go to state 16
    for             shift and go to state 17
    let             shift and go to state 18
    id              shift and go to state 19

    ENTRADA                        shift and go to state 20
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9
    DECLARACION                    shift and go to state 10
    ASIGNACION                     shift and go to state 11

state 154

    (10) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS . llave_Cierra
    (2) ENTRADAS -> ENTRADAS . ENTRADA
    (4) ENTRADA -> . IMPRIMIR puntoYcoma
    (5) ENTRADA -> . IF puntoYcoma
    (6) ENTRADA -> . WHILE puntoYcoma
    (7) ENTRADA -> . BREAK
    (8) ENTRADA -> . CONTINUE
    (9) ENTRADA -> . FOR puntoYcoma
    (18) ENTRADA -> . DECLARACION puntoYcoma
    (23) ENTRADA -> . ASIGNACION puntoYcoma
    (26) IMPRIMIR -> . console punto log p_Abre LISTAEXPRESIONES p_Cierra
    (14) IF -> . if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF
    (13) WHILE -> . while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (11) BREAK -> . break puntoYcoma
    (12) CONTINUE -> . continue puntoYcoma
    (10) FOR -> . for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra
    (19) DECLARACION -> . let id igual EXPRESION
    (20) DECLARACION -> . let id dosPuntos TIPO igual EXPRESION
    (21) DECLARACION -> . let id
    (22) DECLARACION -> . let id dosPuntos TIPO
    (24) ASIGNACION -> . id igual EXPRESION
    (25) ASIGNACION -> . id LISTAINDICES igual EXPRESION

    llave_Cierra    shift and go to state 156
    console         shift and go to state 12
    if              shift and go to state 13
    while           shift and go to state 14
    break           shift and go to state 15
    continue        shift and go to state 16
    for             shift and go to state 17
    let             shift and go to state 18
    id              shift and go to state 19

    DECLARACION                    shift and go to state 10
    ASIGNACION                     shift and go to state 11
    ENTRADA                        shift and go to state 20
    IMPRIMIR                       shift and go to state 4
    IF                             shift and go to state 5
    WHILE                          shift and go to state 6
    BREAK                          shift and go to state 7
    CONTINUE                       shift and go to state 8
    FOR                            shift and go to state 9

state 155

    (16) COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 16 (COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra .)


state 156

    (10) FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra .

    puntoYcoma      reduce using rule 10 (FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma ASIGNACION p_Cierra llave_Abre ENTRADAS llave_Cierra .)

