
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandleftsumarestanonassocmenormayormenorigualmayorigualigualaciondiferenteleftmultiplicaciondivisionmoduloleftpotenciarightnotlefturestaand any boolean break c_Abre c_Cierra cadena coma concat console continue decremento diferente division dosPuntos else false fn for id if igual igualacion incremento let llave_Abre llave_Cierra log mayor mayorigual menor menorigual modulo multiplicacion not null number numero or p_Abre p_Cierra potencia punto puntoYcoma resta return split string suma toExponential toFixed toLowerCase toString toUpperCase true while\n    INICIO : ENTRADAS\n            | \n    \n    ENTRADAS : ENTRADAS ENTRADA\n    \n    ENTRADAS : ENTRADA\n    \n    ENTRADA : IMPRIMIR puntoYcoma\n            |   IF puntoYcoma\n            |   WHILE puntoYcoma\n            |   BREAK\n            |   CONTINUE\n            |   FOR puntoYcoma\n            |   INCREMENTO puntoYcoma\n            |   DECREMENTO puntoYcoma\n            |   FUNC puntoYcoma\n            |   LLAMADA_FUNCION puntoYcoma\n            |   RETURN\n    \n   FUNC : fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra\n   \n    FUNC : fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    PARAMETROS_DECLA_FUNC : PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC\n                            | PARAMETRO_DECLA_FUNC\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO c_Abre c_Cierra\n    \n    EXPRESION : LLAMADA_FUNCION\n    \n    LLAMADA_FUNCION : id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra\n    \n    LLAMADA_FUNCION : id p_Abre p_Cierra\n    \n    PARAMETROS_LLAMA_FUNC : EXPRESION\n                          | PARAMETROS_LLAMA_FUNC coma EXPRESION\n    \n    FOR : for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FORITERADOR : ASIGNACION\n                | INCREMENTO\n                | DECREMENTO\n    \n    BREAK : break puntoYcoma\n    \n    CONTINUE : continue puntoYcoma\n    \n    RETURN : return EXPRESION puntoYcoma\n    \n    RETURN : return puntoYcoma\n    \n    WHILE : while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF\n    \n    COMPLEMENTO_IF : else IF\n                    | else llave_Abre ENTRADAS llave_Cierra\n                    | \n    \n    ENTRADA : DECLARACION puntoYcoma\n    \n    DECLARACION : let id igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO igual EXPRESION\n    \n    DECLARACION : let id \n    \n    DECLARACION : let id dosPuntos TIPO\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra\n    \n    ENTRADA : ASIGNACION puntoYcoma\n    \n    ASIGNACION : id igual EXPRESION\n    \n    ASIGNACION : id LISTAINDICES igual EXPRESION\n    \n    INCREMENTO : id incremento \n    \n    DECREMENTO : id decremento\n    \n    IMPRIMIR : console punto log p_Abre LISTAEXPRESIONES p_Cierra\n    \n    LISTAEXPRESIONES :  LISTAEXPRESIONES coma EXPRESION\n    \n    LISTAEXPRESIONES : EXPRESION\n    \n    LISTAINDICES :  LISTAINDICES c_Abre EXPRESION c_Cierra\n    \n    LISTAINDICES : c_Abre EXPRESION c_Cierra\n    \n    EXPRESION : EXPRESION suma EXPRESION\n    \n    EXPRESION : EXPRESION resta EXPRESION\n    \n    EXPRESION : EXPRESION multiplicacion EXPRESION\n    \n    EXPRESION : EXPRESION division EXPRESION\n    \n    EXPRESION : EXPRESION potencia EXPRESION\n    \n    EXPRESION : EXPRESION modulo EXPRESION\n    \n    EXPRESION : resta EXPRESION %prec uresta\n    \n    EXPRESION : EXPRESION and EXPRESION\n    \n    EXPRESION : EXPRESION or EXPRESION\n    \n    EXPRESION : not EXPRESION\n    \n    EXPRESION : EXPRESION mayor EXPRESION\n    \n    EXPRESION : EXPRESION mayorigual EXPRESION\n    \n    EXPRESION : EXPRESION menor EXPRESION\n    \n    EXPRESION : EXPRESION menorigual EXPRESION\n    \n    EXPRESION : EXPRESION igualacion EXPRESION\n    \n    EXPRESION : EXPRESION diferente EXPRESION\n    \n    EXPRESION : FUNCION_TOFIXED\n            | FUNCION_TOEXPONENTIAL\n            | FUNCION_TOSTRING\n            | FUNCION_TOLOWERCASE\n            | FUNCION_TOUPPERCASE\n            | FUNCION_SPLIT\n            | FUNCION_CONCAT\n    \n    FUNCION_TOFIXED : id punto toFixed p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOEXPONENTIAL : id punto toExponential p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOSTRING : id punto toString p_Abre p_Cierra\n    \n    FUNCION_TOLOWERCASE : id punto toLowerCase p_Abre p_Cierra\n    \n    FUNCION_TOUPPERCASE : id punto toUpperCase p_Abre p_Cierra\n    \n    FUNCION_SPLIT : id punto split p_Abre EXPRESION p_Cierra\n    \n    FUNCION_CONCAT : id punto concat p_Abre LISTAEXPRESIONES p_Cierra\n    \n    EXPRESION : cadena\n    \n    EXPRESION : numero\n    \n    EXPRESION : true\n                | false\n    \n    EXPRESION : null\n    \n    EXPRESION : id\n    \n    EXPRESION : id LISTAINDICES\n    \n    EXPRESION : c_Abre LISTAEXPRESIONES c_Cierra\n    \n    EXPRESION : TIPO p_Abre EXPRESION p_Cierra\n    \n    TIPO : number\n    \n    TIPO : string\n    \n    TIPO : boolean\n    \n    TIPO : any\n    '
    
_lr_action_items = {'$end':([0,1,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,88,],[-2,0,-1,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,]),'console':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,88,152,153,160,173,174,177,179,197,211,212,213,214,],[17,17,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,17,17,17,17,17,17,17,17,17,17,17,17,]),'if':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,88,152,153,160,173,174,177,179,197,205,211,212,213,214,],[18,18,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'while':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,88,152,153,160,173,174,177,179,197,211,212,213,214,],[19,19,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,19,19,19,19,19,19,19,19,19,19,19,19,]),'break':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,88,152,153,160,173,174,177,179,197,211,212,213,214,],[20,20,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,20,20,20,20,20,20,20,20,20,20,20,20,]),'continue':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,88,152,153,160,173,174,177,179,197,211,212,213,214,],[21,21,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,21,21,21,21,21,21,21,21,21,21,21,21,]),'for':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,88,152,153,160,173,174,177,179,197,211,212,213,214,],[22,22,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,22,22,22,22,22,22,22,22,22,22,22,22,]),'id':([0,2,3,7,8,14,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,46,47,49,52,54,55,69,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,152,153,159,160,161,162,166,167,170,173,174,175,177,179,197,203,211,212,213,214,],[23,23,-4,-8,-9,-15,50,68,75,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,68,68,-31,-32,68,68,68,-34,68,68,68,68,68,121,-33,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,23,23,121,23,68,68,68,68,68,23,23,195,23,23,23,68,23,23,23,23,]),'fn':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,88,152,153,160,173,174,177,179,197,211,212,213,214,],[24,24,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,24,24,24,24,24,24,24,24,24,24,24,24,]),'return':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,88,152,153,160,173,174,177,179,197,211,212,213,214,],[25,25,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,25,25,25,25,25,25,25,25,25,25,25,25,]),'let':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,43,52,88,152,153,160,173,174,177,179,197,211,212,213,214,],[26,26,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,26,-34,-33,26,26,26,26,26,26,26,26,26,26,26,26,]),'llave_Cierra':([3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,88,173,174,179,197,213,214,],[-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,189,190,198,208,215,216,]),'puntoYcoma':([4,5,6,9,10,11,12,13,15,16,20,21,25,44,45,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,79,81,83,103,104,105,116,118,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,149,150,154,156,169,172,182,183,184,187,188,189,190,198,199,200,201,202,204,208,209,210,215,216,],[28,29,30,31,32,33,34,35,36,37,41,42,52,-50,-51,88,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,-96,-97,-98,-99,-43,115,-24,-48,-63,-66,-93,-23,-49,-56,-57,-58,-59,-60,-61,-62,-64,-65,-67,-68,-69,-70,-71,-72,-94,-41,-44,175,-55,-95,-52,-82,-83,-84,-42,-46,-39,-35,-17,-80,-81,-85,-86,-36,-16,-45,-37,-38,-27,]),'punto':([17,68,],[38,106,]),'p_Abre':([18,19,22,23,50,68,70,71,72,73,74,76,139,140,141,142,143,144,145,],[39,40,43,46,87,46,109,-96,-97,-98,-99,112,161,162,163,164,165,166,167,]),'incremento':([23,195,],[44,44,]),'decremento':([23,195,],[45,45,]),'igual':([23,48,71,72,73,74,75,120,150,156,188,195,],[47,84,-96,-97,-98,-99,110,-56,170,-55,203,47,]),'c_Abre':([23,25,39,40,46,47,48,49,54,55,68,69,71,72,73,74,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,109,110,112,115,117,120,147,150,156,161,162,166,167,170,176,195,203,],[49,69,69,69,69,69,85,69,69,69,49,69,-96,-97,-98,-99,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,85,69,69,69,69,69,-56,69,171,-55,69,69,69,69,69,196,49,69,]),'resta':([25,39,40,46,47,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,112,115,116,117,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,147,148,149,154,155,156,161,162,166,167,168,169,170,180,181,182,183,184,185,187,199,200,201,202,203,209,],[54,54,54,54,54,54,90,-22,54,54,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,54,90,90,-24,90,90,54,54,90,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-63,-66,-93,90,54,54,54,54,-23,54,90,90,-56,-57,-58,-59,-60,-61,-62,90,90,-67,-68,-69,-70,-71,-72,-94,54,90,90,90,90,-55,54,54,54,54,90,-95,54,90,90,-82,-83,-84,90,90,-80,-81,-85,-86,54,90,]),'not':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'cadena':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'numero':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'true':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'false':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'null':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'number':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,112,115,117,147,157,161,162,166,167,170,203,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'string':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,112,115,117,147,157,161,162,166,167,170,203,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'boolean':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,112,115,117,147,157,161,162,166,167,170,203,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'any':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,112,115,117,147,157,161,162,166,167,170,203,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'log':([38,],[76,]),'p_Cierra':([44,45,46,53,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,77,78,80,81,82,83,87,103,104,105,108,116,118,120,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,151,155,156,163,164,165,168,169,176,178,180,181,182,183,184,185,186,191,192,193,194,199,200,201,202,207,],[-50,-51,81,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,-96,-97,-98,-99,113,114,116,-24,-25,-48,123,-63,-66,-93,-54,-23,-49,-56,158,-19,-57,-58,-59,-60,-61,-62,-64,-65,-67,-68,-69,-70,-71,-72,-94,169,172,-26,-55,182,183,184,-53,-95,-20,-18,199,200,-82,-83,-84,201,202,206,-28,-29,-30,-80,-81,-85,-86,-21,]),'suma':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[89,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,89,89,-24,89,89,89,-63,-66,-93,89,-23,89,89,-56,-57,-58,-59,-60,-61,-62,89,89,-67,-68,-69,-70,-71,-72,-94,89,89,89,89,-55,89,-95,89,89,-82,-83,-84,89,89,-80,-81,-85,-86,89,]),'multiplicacion':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[91,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,91,91,-24,91,91,91,-63,-66,-93,91,-23,91,91,-56,91,91,-59,-60,-61,-62,91,91,91,91,91,91,91,91,-94,91,91,91,91,-55,91,-95,91,91,-82,-83,-84,91,91,-80,-81,-85,-86,91,]),'division':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[92,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,92,92,-24,92,92,92,-63,-66,-93,92,-23,92,92,-56,92,92,-59,-60,-61,-62,92,92,92,92,92,92,92,92,-94,92,92,92,92,-55,92,-95,92,92,-82,-83,-84,92,92,-80,-81,-85,-86,92,]),'potencia':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[93,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,93,93,-24,93,93,93,-63,-66,-93,93,-23,93,93,-56,93,93,93,93,-61,93,93,93,93,93,93,93,93,93,-94,93,93,93,93,-55,93,-95,93,93,-82,-83,-84,93,93,-80,-81,-85,-86,93,]),'modulo':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[94,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,94,94,-24,94,94,94,-63,-66,-93,94,-23,94,94,-56,94,94,-59,-60,-61,-62,94,94,94,94,94,94,94,94,-94,94,94,94,94,-55,94,-95,94,94,-82,-83,-84,94,94,-80,-81,-85,-86,94,]),'and':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[95,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,95,95,-24,95,95,95,-63,-66,-93,95,-23,95,95,-56,-57,-58,-59,-60,-61,-62,-64,95,-67,-68,-69,-70,-71,-72,-94,95,95,95,95,-55,95,-95,95,95,-82,-83,-84,95,95,-80,-81,-85,-86,95,]),'or':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[96,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,96,96,-24,96,96,96,-63,-66,-93,96,-23,96,96,-56,-57,-58,-59,-60,-61,-62,-64,-65,-67,-68,-69,-70,-71,-72,-94,96,96,96,96,-55,96,-95,96,96,-82,-83,-84,96,96,-80,-81,-85,-86,96,]),'mayor':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[97,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,97,97,-24,97,97,97,-63,-66,-93,97,-23,97,97,-56,97,97,-59,-60,-61,-62,97,97,None,None,None,None,None,None,-94,97,97,97,97,-55,97,-95,97,97,-82,-83,-84,97,97,-80,-81,-85,-86,97,]),'mayorigual':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[98,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,98,98,-24,98,98,98,-63,-66,-93,98,-23,98,98,-56,98,98,-59,-60,-61,-62,98,98,None,None,None,None,None,None,-94,98,98,98,98,-55,98,-95,98,98,-82,-83,-84,98,98,-80,-81,-85,-86,98,]),'menor':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[99,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,99,99,-24,99,99,99,-63,-66,-93,99,-23,99,99,-56,99,99,-59,-60,-61,-62,99,99,None,None,None,None,None,None,-94,99,99,99,99,-55,99,-95,99,99,-82,-83,-84,99,99,-80,-81,-85,-86,99,]),'menorigual':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[100,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,100,100,-24,100,100,100,-63,-66,-93,100,-23,100,100,-56,100,100,-59,-60,-61,-62,100,100,None,None,None,None,None,None,-94,100,100,100,100,-55,100,-95,100,100,-82,-83,-84,100,100,-80,-81,-85,-86,100,]),'igualacion':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[101,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,101,101,-24,101,101,101,-63,-66,-93,101,-23,101,101,-56,101,101,-59,-60,-61,-62,101,101,None,None,None,None,None,None,-94,101,101,101,101,-55,101,-95,101,101,-82,-83,-84,101,101,-80,-81,-85,-86,101,]),'diferente':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,81,82,83,86,103,104,105,108,116,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,154,155,156,168,169,180,181,182,183,184,185,187,199,200,201,202,209,],[102,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,102,102,-24,102,102,102,-63,-66,-93,102,-23,102,102,-56,102,102,-59,-60,-61,-62,102,102,None,None,None,None,None,None,-94,102,102,102,102,-55,102,-95,102,102,-82,-83,-84,102,102,-80,-81,-85,-86,102,]),'coma':([53,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,80,81,82,103,104,105,107,108,116,120,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,151,155,156,168,169,176,178,182,183,184,186,199,200,201,202,207,],[-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,-96,-97,-98,-99,117,-24,-25,-63,-66,-93,147,-54,-23,-56,159,-19,-57,-58,-59,-60,-61,-62,-64,-65,-67,-68,-69,-70,-71,-72,-94,147,-26,-55,-53,-95,-20,-18,-82,-83,-84,147,-80,-81,-85,-86,-21,]),'c_Cierra':([53,56,57,58,59,60,61,62,63,64,65,66,67,68,81,86,103,104,105,107,108,116,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,156,168,169,171,182,183,184,196,199,200,201,202,],[-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,-24,120,-63,-66,-93,146,-54,-23,156,-56,-57,-58,-59,-60,-61,-62,-64,-65,-67,-68,-69,-70,-71,-72,-94,-55,-53,-95,188,-82,-83,-84,207,-80,-81,-85,-86,]),'dosPuntos':([75,121,],[111,157,]),'toFixed':([106,],[139,]),'toExponential':([106,],[140,]),'toString':([106,],[141,]),'toLowerCase':([106,],[142,]),'toUpperCase':([106,],[143,]),'split':([106,],[144,]),'concat':([106,],[145,]),'llave_Abre':([113,114,123,158,205,206,],[152,153,160,177,211,212,]),'else':([189,],[205,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'ENTRADAS':([0,152,153,160,177,211,212,],[2,173,174,179,197,213,214,]),'ENTRADA':([0,2,152,153,160,173,174,177,179,197,211,212,213,214,],[3,27,3,3,3,27,27,3,27,27,3,3,27,27,]),'IMPRIMIR':([0,2,152,153,160,173,174,177,179,197,211,212,213,214,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'IF':([0,2,152,153,160,173,174,177,179,197,205,211,212,213,214,],[5,5,5,5,5,5,5,5,5,5,210,5,5,5,5,]),'WHILE':([0,2,152,153,160,173,174,177,179,197,211,212,213,214,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BREAK':([0,2,152,153,160,173,174,177,179,197,211,212,213,214,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CONTINUE':([0,2,152,153,160,173,174,177,179,197,211,212,213,214,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FOR':([0,2,152,153,160,173,174,177,179,197,211,212,213,214,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INCREMENTO':([0,2,152,153,160,173,174,175,177,179,197,211,212,213,214,],[10,10,10,10,10,10,10,193,10,10,10,10,10,10,10,]),'DECREMENTO':([0,2,152,153,160,173,174,175,177,179,197,211,212,213,214,],[11,11,11,11,11,11,11,194,11,11,11,11,11,11,11,]),'FUNC':([0,2,152,153,160,173,174,177,179,197,211,212,213,214,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'LLAMADA_FUNCION':([0,2,25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,152,153,160,161,162,166,167,170,173,174,177,179,197,203,211,212,213,214,],[13,13,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,13,13,13,53,53,53,53,53,13,13,13,13,13,53,13,13,13,13,]),'RETURN':([0,2,152,153,160,173,174,177,179,197,211,212,213,214,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DECLARACION':([0,2,43,152,153,160,173,174,177,179,197,211,212,213,214,],[15,15,79,15,15,15,15,15,15,15,15,15,15,15,15,]),'ASIGNACION':([0,2,152,153,160,173,174,175,177,179,197,211,212,213,214,],[16,16,16,16,16,16,16,192,16,16,16,16,16,16,16,]),'LISTAINDICES':([23,68,195,],[48,105,48,]),'EXPRESION':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[51,77,78,82,83,86,103,104,108,118,119,125,126,127,128,129,130,131,132,133,134,135,136,137,138,148,149,108,154,155,168,180,181,185,108,187,209,]),'FUNCION_TOFIXED':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'FUNCION_TOEXPONENTIAL':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FUNCION_TOSTRING':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FUNCION_TOLOWERCASE':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'FUNCION_TOUPPERCASE':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'FUNCION_SPLIT':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FUNCION_CONCAT':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,112,115,117,147,161,162,166,167,170,203,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'TIPO':([25,39,40,46,47,49,54,55,69,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,112,115,117,147,157,161,162,166,167,170,203,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,150,70,70,70,70,176,70,70,70,70,70,70,]),'PARAMETROS_LLAMA_FUNC':([46,],[80,]),'LISTAEXPRESIONES':([69,112,167,],[107,151,186,]),'PARAMETROS_DECLA_FUNC':([87,],[122,]),'PARAMETRO_DECLA_FUNC':([87,159,],[124,178,]),'FORITERADOR':([175,],[191,]),'COMPLEMENTO_IF':([189,],[204,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> ENTRADAS','INICIO',1,'p_INICIO','parser.py',66),
  ('INICIO -> <empty>','INICIO',0,'p_INICIO','parser.py',67),
  ('ENTRADAS -> ENTRADAS ENTRADA','ENTRADAS',2,'p_ENTRADAS_PARTE_1','parser.py',76),
  ('ENTRADAS -> ENTRADA','ENTRADAS',1,'p_ENTRADAS_PARTE_2','parser.py',83),
  ('ENTRADA -> IMPRIMIR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',89),
  ('ENTRADA -> IF puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',90),
  ('ENTRADA -> WHILE puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',91),
  ('ENTRADA -> BREAK','ENTRADA',1,'p_ENTRADA','parser.py',92),
  ('ENTRADA -> CONTINUE','ENTRADA',1,'p_ENTRADA','parser.py',93),
  ('ENTRADA -> FOR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',94),
  ('ENTRADA -> INCREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',95),
  ('ENTRADA -> DECREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',96),
  ('ENTRADA -> FUNC puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',97),
  ('ENTRADA -> LLAMADA_FUNCION puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',98),
  ('ENTRADA -> RETURN','ENTRADA',1,'p_ENTRADA','parser.py',99),
  ('FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',8,'p_FUNC_1','parser.py',117),
  ('FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',7,'p_FUNC_2','parser.py',124),
  ('PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',3,'p_PARAMETROS_DECLA_FUNC','parser.py',131),
  ('PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',1,'p_PARAMETROS_DECLA_FUNC','parser.py',132),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO','PARAMETRO_DECLA_FUNC',3,'p_PARAMETRO_DECLA_FUNC_1','parser.py',142),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra','PARAMETRO_DECLA_FUNC',5,'p_PARAMETRO_DECLA_FUNC_2','parser.py',148),
  ('EXPRESION -> LLAMADA_FUNCION','EXPRESION',1,'p_EXPRESION_LLAMA_FUNC','parser.py',155),
  ('LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra','LLAMADA_FUNCION',4,'p_LLAMADA_FUNCION_1','parser.py',162),
  ('LLAMADA_FUNCION -> id p_Abre p_Cierra','LLAMADA_FUNCION',3,'p_LLAMADA_FUNCION_2','parser.py',168),
  ('PARAMETROS_LLAMA_FUNC -> EXPRESION','PARAMETROS_LLAMA_FUNC',1,'p_PARAMETROS_LLAMA_FUNC','parser.py',174),
  ('PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION','PARAMETROS_LLAMA_FUNC',3,'p_PARAMETROS_LLAMA_FUNC','parser.py',175),
  ('FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',11,'p_FOR','parser.py',186),
  ('FORITERADOR -> ASIGNACION','FORITERADOR',1,'p_FORITERADOR','parser.py',192),
  ('FORITERADOR -> INCREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',193),
  ('FORITERADOR -> DECREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',194),
  ('BREAK -> break puntoYcoma','BREAK',2,'p_BREAK','parser.py',201),
  ('CONTINUE -> continue puntoYcoma','CONTINUE',2,'p_CONTINUE','parser.py',207),
  ('RETURN -> return EXPRESION puntoYcoma','RETURN',3,'p_RETURN_1','parser.py',213),
  ('RETURN -> return puntoYcoma','RETURN',2,'p_RETURN_2','parser.py',219),
  ('WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','WHILE',7,'p_WHILE','parser.py',228),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF','IF',8,'p_IF','parser.py',235),
  ('COMPLEMENTO_IF -> else IF','COMPLEMENTO_IF',2,'p_COMPLEMENTO_IF','parser.py',241),
  ('COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra','COMPLEMENTO_IF',4,'p_COMPLEMENTO_IF','parser.py',242),
  ('COMPLEMENTO_IF -> <empty>','COMPLEMENTO_IF',0,'p_COMPLEMENTO_IF','parser.py',243),
  ('ENTRADA -> DECLARACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Declaracion','parser.py',256),
  ('DECLARACION -> let id igual EXPRESION','DECLARACION',4,'p_DECLARACION_NoTipada','parser.py',262),
  ('DECLARACION -> let id dosPuntos TIPO igual EXPRESION','DECLARACION',6,'p_DECLARACION_Tipada','parser.py',269),
  ('DECLARACION -> let id','DECLARACION',2,'p_DECLARACION_SinExpresion_SinTipado','parser.py',275),
  ('DECLARACION -> let id dosPuntos TIPO','DECLARACION',4,'p_DECLARACION_SinExpresion_Tipado','parser.py',281),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION','DECLARACION',8,'p_DECLARACION_Tipada_VECTOR','parser.py',287),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra','DECLARACION',6,'p_DECLARACION_SinExpresion_Tipado_VECTOR','parser.py',293),
  ('ENTRADA -> ASIGNACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Asignacion','parser.py',302),
  ('ASIGNACION -> id igual EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',308),
  ('ASIGNACION -> id LISTAINDICES igual EXPRESION','ASIGNACION',4,'p_ASIGNACION_VEC','parser.py',314),
  ('INCREMENTO -> id incremento','INCREMENTO',2,'p_INCREMENTO','parser.py',322),
  ('DECREMENTO -> id decremento','DECREMENTO',2,'p_DECREMENTO','parser.py',328),
  ('IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra','IMPRIMIR',6,'p_IMPRIMIR_1','parser.py',335),
  ('LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION','LISTAEXPRESIONES',3,'p_LISTAEXPRESIONES_1','parser.py',341),
  ('LISTAEXPRESIONES -> EXPRESION','LISTAEXPRESIONES',1,'p_LISTAEXPRESIONES_2','parser.py',348),
  ('LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra','LISTAINDICES',4,'p_LISTAEXPRESIONES_Indices','parser.py',354),
  ('LISTAINDICES -> c_Abre EXPRESION c_Cierra','LISTAINDICES',3,'p_LISTAEXPRESIONES_Indices_2','parser.py',361),
  ('EXPRESION -> EXPRESION suma EXPRESION','EXPRESION',3,'p_EXPRESION_suma','parser.py',369),
  ('EXPRESION -> EXPRESION resta EXPRESION','EXPRESION',3,'p_EXPRESION_resta','parser.py',376),
  ('EXPRESION -> EXPRESION multiplicacion EXPRESION','EXPRESION',3,'p_EXPRESION_multiplicacion','parser.py',383),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_EXPRESION_division','parser.py',390),
  ('EXPRESION -> EXPRESION potencia EXPRESION','EXPRESION',3,'p_EXPRESION_potencia','parser.py',397),
  ('EXPRESION -> EXPRESION modulo EXPRESION','EXPRESION',3,'p_EXPRESION_modulo','parser.py',404),
  ('EXPRESION -> resta EXPRESION','EXPRESION',2,'p_EXPRESION_negativo','parser.py',411),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_EXPRESION_and','parser.py',420),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_EXPRESION_or','parser.py',427),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_EXPRESION_not','parser.py',434),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_EXPRESION_mayor','parser.py',443),
  ('EXPRESION -> EXPRESION mayorigual EXPRESION','EXPRESION',3,'p_EXPRESION_mayorigual','parser.py',450),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_EXPRESION_menor','parser.py',457),
  ('EXPRESION -> EXPRESION menorigual EXPRESION','EXPRESION',3,'p_EXPRESION_menorigual','parser.py',464),
  ('EXPRESION -> EXPRESION igualacion EXPRESION','EXPRESION',3,'p_EXPRESION_igualacion','parser.py',471),
  ('EXPRESION -> EXPRESION diferente EXPRESION','EXPRESION',3,'p_EXPRESION_diferente','parser.py',478),
  ('EXPRESION -> FUNCION_TOFIXED','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',487),
  ('EXPRESION -> FUNCION_TOEXPONENTIAL','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',488),
  ('EXPRESION -> FUNCION_TOSTRING','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',489),
  ('EXPRESION -> FUNCION_TOLOWERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',490),
  ('EXPRESION -> FUNCION_TOUPPERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',491),
  ('EXPRESION -> FUNCION_SPLIT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',492),
  ('EXPRESION -> FUNCION_CONCAT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',493),
  ('FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra','FUNCION_TOFIXED',6,'p_FUNCION_TOFIXED','parser.py',499),
  ('FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra','FUNCION_TOEXPONENTIAL',6,'p_FUNCION_TOEXPONENTIAL','parser.py',506),
  ('FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra','FUNCION_TOSTRING',5,'p_FUNCION_TOSTRING','parser.py',513),
  ('FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra','FUNCION_TOLOWERCASE',5,'p_FUNCION_TOLOWERCASE','parser.py',520),
  ('FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra','FUNCION_TOUPPERCASE',5,'p_FUNCION_TOUPPERCASE','parser.py',527),
  ('FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra','FUNCION_SPLIT',6,'p_FUNCION_SPLIT','parser.py',534),
  ('FUNCION_CONCAT -> id punto concat p_Abre LISTAEXPRESIONES p_Cierra','FUNCION_CONCAT',6,'p_FUNCION_CONCAT','parser.py',541),
  ('EXPRESION -> cadena','EXPRESION',1,'p_EXPRESION_cadena','parser.py',551),
  ('EXPRESION -> numero','EXPRESION',1,'p_EXPRESION_numero','parser.py',558),
  ('EXPRESION -> true','EXPRESION',1,'p_EXPRESION_booleano','parser.py',565),
  ('EXPRESION -> false','EXPRESION',1,'p_EXPRESION_booleano','parser.py',566),
  ('EXPRESION -> null','EXPRESION',1,'p_EXPRESION_null','parser.py',573),
  ('EXPRESION -> id','EXPRESION',1,'p_EXPRESION_Acceso','parser.py',580),
  ('EXPRESION -> id LISTAINDICES','EXPRESION',2,'p_EXPRESION_Acceso_Vector','parser.py',587),
  ('EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra','EXPRESION',3,'p_EXPRESION_Vector','parser.py',594),
  ('EXPRESION -> TIPO p_Abre EXPRESION p_Cierra','EXPRESION',4,'p_EXPRESION_Casteo','parser.py',601),
  ('TIPO -> number','TIPO',1,'p_TIPO_NUMBER','parser.py',609),
  ('TIPO -> string','TIPO',1,'p_TIPO_STRING','parser.py',615),
  ('TIPO -> boolean','TIPO',1,'p_TIPO_BOOLEAN','parser.py',621),
  ('TIPO -> any','TIPO',1,'p_TIPO_ANY','parser.py',627),
]
