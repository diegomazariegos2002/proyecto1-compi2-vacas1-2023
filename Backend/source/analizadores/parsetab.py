
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandleftsumarestanonassocmenormayormenorigualmayorigualigualaciondiferenteleftmultiplicaciondivisionmoduloleftpotenciarightnotlefturestaand any boolean break c_Abre c_Cierra cadena coma concat console continue decremento diferente division dosPuntos else false fn for id if igual igualacion incremento let llave_Abre llave_Cierra log mayor mayorigual menor menorigual modulo multiplicacion not null number numero or p_Abre p_Cierra potencia punto puntoYcoma resta return split string suma toExponential toFixed toLowerCase toString toUpperCase true while\n    INICIO : ENTRADAS\n            | \n    \n    ENTRADAS : ENTRADAS ENTRADA\n    \n    ENTRADAS : ENTRADA\n    \n    ENTRADA : IMPRIMIR puntoYcoma\n            |   IF puntoYcoma\n            |   WHILE puntoYcoma\n            |   BREAK\n            |   CONTINUE\n            |   FOR puntoYcoma\n            |   INCREMENTO puntoYcoma\n            |   DECREMENTO puntoYcoma\n            |   FUNC puntoYcoma\n            |   LLAMADA_FUNCION puntoYcoma\n            |   RETURN\n    \n   FUNC : fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra\n   \n    FUNC : fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    PARAMETROS_DECLA_FUNC : PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC\n                            | PARAMETRO_DECLA_FUNC\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO c_Abre c_Cierra\n    \n    EXPRESION : LLAMADA_FUNCION\n    \n    LLAMADA_FUNCION : id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra\n    \n    LLAMADA_FUNCION : id p_Abre p_Cierra\n    \n    PARAMETROS_LLAMA_FUNC : EXPRESION\n                          | PARAMETROS_LLAMA_FUNC coma EXPRESION\n    \n    FOR : for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FORITERADOR : ASIGNACION\n                | INCREMENTO\n                | DECREMENTO\n    \n    BREAK : break puntoYcoma\n    \n    CONTINUE : continue puntoYcoma\n    \n    RETURN : return EXPRESION puntoYcoma\n    \n    RETURN : return puntoYcoma\n    \n    WHILE : while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF\n    \n    COMPLEMENTO_IF : else IF\n                    | else llave_Abre ENTRADAS llave_Cierra\n                    | \n    \n    ENTRADA : DECLARACION puntoYcoma\n    \n    DECLARACION : let id igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO igual EXPRESION\n    \n    DECLARACION : let id \n    \n    DECLARACION : let id dosPuntos TIPO\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra\n    \n    ENTRADA : ASIGNACION puntoYcoma\n    \n    ASIGNACION : id igual EXPRESION\n    \n    ASIGNACION : id LISTAINDICES igual EXPRESION\n    \n    INCREMENTO : id incremento \n    \n    DECREMENTO : id decremento\n    \n    IMPRIMIR : console punto log p_Abre LISTAEXPRESIONES p_Cierra\n    \n    LISTAEXPRESIONES :  LISTAEXPRESIONES coma EXPRESION\n    \n    LISTAEXPRESIONES : EXPRESION\n    \n    LISTAINDICES :  LISTAINDICES c_Abre EXPRESION c_Cierra\n    \n    LISTAINDICES : c_Abre EXPRESION c_Cierra\n    \n    EXPRESION : EXPRESION suma EXPRESION\n    \n    EXPRESION : EXPRESION resta EXPRESION\n    \n    EXPRESION : EXPRESION multiplicacion EXPRESION\n    \n    EXPRESION : EXPRESION division EXPRESION\n    \n    EXPRESION : EXPRESION potencia EXPRESION\n    \n    EXPRESION : EXPRESION modulo EXPRESION\n    \n    EXPRESION : resta EXPRESION %prec uresta\n    \n    EXPRESION : EXPRESION and EXPRESION\n    \n    EXPRESION : EXPRESION or EXPRESION\n    \n    EXPRESION : not EXPRESION\n    \n    EXPRESION : EXPRESION mayor EXPRESION\n    \n    EXPRESION : EXPRESION mayorigual EXPRESION\n    \n    EXPRESION : EXPRESION menor EXPRESION\n    \n    EXPRESION : EXPRESION menorigual EXPRESION\n    \n    EXPRESION : EXPRESION igualacion EXPRESION\n    \n    EXPRESION : EXPRESION diferente EXPRESION\n    \n    EXPRESION : FUNCION_TOFIXED\n            | FUNCION_TOEXPONENTIAL\n            | FUNCION_TOSTRING\n            | FUNCION_TOLOWERCASE\n            | FUNCION_TOUPPERCASE\n            | FUNCION_SPLIT\n            | FUNCION_CONCAT\n    \n    FUNCION_TOFIXED : id punto toFixed p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOEXPONENTIAL : id punto toExponential p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOSTRING : id punto toString p_Abre p_Cierra\n    \n    FUNCION_TOLOWERCASE : id punto toLowerCase p_Abre p_Cierra\n    \n    FUNCION_TOUPPERCASE : id punto toUpperCase p_Abre p_Cierra\n    \n    FUNCION_SPLIT : id punto split p_Abre EXPRESION p_Cierra\n    \n    FUNCION_CONCAT : id punto concat p_Abre LISTAEXPRESIONES p_Cierra\n    \n    EXPRESION : cadena\n    \n    EXPRESION : numero\n    \n    EXPRESION : true\n                | false\n    \n    EXPRESION : null\n    \n    EXPRESION : id\n    \n    EXPRESION : id LISTAINDICES\n    \n    EXPRESION : c_Abre LISTAEXPRESIONES c_Cierra\n    \n    TIPO : number\n    \n    TIPO : string\n    \n    TIPO : boolean\n    \n    TIPO : any\n    '
    
_lr_action_items = {'$end':([0,1,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,83,],[-2,0,-1,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,]),'console':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,83,149,150,157,169,170,173,175,193,207,208,209,210,],[17,17,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,17,17,17,17,17,17,17,17,17,17,17,17,]),'if':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,83,149,150,157,169,170,173,175,193,201,207,208,209,210,],[18,18,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'while':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,83,149,150,157,169,170,173,175,193,207,208,209,210,],[19,19,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,19,19,19,19,19,19,19,19,19,19,19,19,]),'break':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,83,149,150,157,169,170,173,175,193,207,208,209,210,],[20,20,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,20,20,20,20,20,20,20,20,20,20,20,20,]),'continue':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,83,149,150,157,169,170,173,175,193,207,208,209,210,],[21,21,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,21,21,21,21,21,21,21,21,21,21,21,21,]),'for':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,83,149,150,157,169,170,173,175,193,207,208,209,210,],[22,22,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,22,22,22,22,22,22,22,22,22,22,22,22,]),'id':([0,2,3,7,8,14,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,46,47,49,52,54,55,69,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,149,150,156,157,158,159,163,164,166,169,170,171,173,175,193,199,207,208,209,210,],[23,23,-4,-8,-9,-15,50,68,70,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,68,68,-31,-32,68,68,68,-34,68,68,68,68,68,115,-33,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,23,23,115,23,68,68,68,68,68,23,23,191,23,23,23,68,23,23,23,23,]),'fn':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,83,149,150,157,169,170,173,175,193,207,208,209,210,],[24,24,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,24,24,24,24,24,24,24,24,24,24,24,24,]),'return':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,83,149,150,157,169,170,173,175,193,207,208,209,210,],[25,25,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,25,25,25,25,25,25,25,25,25,25,25,25,]),'let':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,43,52,83,149,150,157,169,170,173,175,193,207,208,209,210,],[26,26,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,26,-34,-33,26,26,26,26,26,26,26,26,26,26,26,26,]),'llave_Cierra':([3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,83,169,170,175,193,209,210,],[-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-40,-47,-31,-32,-34,-33,185,186,194,204,211,212,]),'puntoYcoma':([4,5,6,9,10,11,12,13,15,16,20,21,25,44,45,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,76,78,98,99,100,110,112,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,143,144,145,146,147,151,153,168,178,179,180,183,184,185,186,194,195,196,197,198,200,204,205,206,211,212,],[28,29,30,31,32,33,34,35,36,37,41,42,52,-50,-51,83,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,-43,109,-24,-48,-63,-66,-93,-23,-49,-56,-57,-58,-59,-60,-61,-62,-64,-65,-67,-68,-69,-70,-71,-72,-94,-41,-44,-95,-96,-97,-98,171,-55,-52,-82,-83,-84,-42,-46,-39,-35,-17,-80,-81,-85,-86,-36,-16,-45,-37,-38,-27,]),'punto':([17,68,],[38,101,]),'p_Abre':([18,19,22,23,50,68,71,133,134,135,136,137,138,139,],[39,40,43,46,82,46,106,158,159,160,161,162,163,164,]),'incremento':([23,191,],[44,44,]),'decremento':([23,191,],[45,45,]),'igual':([23,48,70,114,143,144,145,146,147,153,184,191,],[47,79,104,-56,166,-95,-96,-97,-98,-55,199,47,]),'c_Abre':([23,25,39,40,46,47,48,49,54,55,68,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,104,106,109,111,114,141,143,144,145,146,147,153,158,159,163,164,166,172,191,199,],[49,69,69,69,69,69,80,69,69,69,49,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,80,69,69,69,69,-56,69,167,-95,-96,-97,-98,-55,69,69,69,69,69,192,49,69,]),'resta':([25,39,40,46,47,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,76,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,106,109,110,111,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,141,142,151,152,153,158,159,163,164,165,166,176,177,178,179,180,181,183,195,196,197,198,199,205,],[54,54,54,54,54,54,85,-22,54,54,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,54,85,85,-24,85,85,54,54,85,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-63,-66,-93,85,54,54,54,-23,54,85,85,-56,-57,-58,-59,-60,-61,-62,85,85,-67,-68,-69,-70,-71,-72,-94,54,85,85,85,-55,54,54,54,54,85,54,85,85,-82,-83,-84,85,85,-80,-81,-85,-86,54,85,]),'not':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'cadena':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'numero':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'true':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'false':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'null':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'log':([38,],[71,]),'p_Cierra':([44,45,46,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,75,76,77,78,82,98,99,100,103,110,112,114,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,144,145,146,147,148,152,153,160,161,162,165,172,174,176,177,178,179,180,181,182,187,188,189,190,195,196,197,198,203,],[-50,-51,76,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,107,108,110,-24,-25,-48,117,-63,-66,-93,-54,-23,-49,-56,155,-19,-57,-58,-59,-60,-61,-62,-64,-65,-67,-68,-69,-70,-71,-72,-94,-95,-96,-97,-98,168,-26,-55,178,179,180,-53,-20,-18,195,196,-82,-83,-84,197,198,202,-28,-29,-30,-80,-81,-85,-86,-21,]),'suma':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[84,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,84,84,-24,84,84,84,-63,-66,-93,84,-23,84,84,-56,-57,-58,-59,-60,-61,-62,84,84,-67,-68,-69,-70,-71,-72,-94,84,84,84,-55,84,84,84,-82,-83,-84,84,84,-80,-81,-85,-86,84,]),'multiplicacion':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[86,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,86,86,-24,86,86,86,-63,-66,-93,86,-23,86,86,-56,86,86,-59,-60,-61,-62,86,86,86,86,86,86,86,86,-94,86,86,86,-55,86,86,86,-82,-83,-84,86,86,-80,-81,-85,-86,86,]),'division':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[87,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,87,87,-24,87,87,87,-63,-66,-93,87,-23,87,87,-56,87,87,-59,-60,-61,-62,87,87,87,87,87,87,87,87,-94,87,87,87,-55,87,87,87,-82,-83,-84,87,87,-80,-81,-85,-86,87,]),'potencia':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[88,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,88,88,-24,88,88,88,-63,-66,-93,88,-23,88,88,-56,88,88,88,88,-61,88,88,88,88,88,88,88,88,88,-94,88,88,88,-55,88,88,88,-82,-83,-84,88,88,-80,-81,-85,-86,88,]),'modulo':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[89,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,89,89,-24,89,89,89,-63,-66,-93,89,-23,89,89,-56,89,89,-59,-60,-61,-62,89,89,89,89,89,89,89,89,-94,89,89,89,-55,89,89,89,-82,-83,-84,89,89,-80,-81,-85,-86,89,]),'and':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[90,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,90,90,-24,90,90,90,-63,-66,-93,90,-23,90,90,-56,-57,-58,-59,-60,-61,-62,-64,90,-67,-68,-69,-70,-71,-72,-94,90,90,90,-55,90,90,90,-82,-83,-84,90,90,-80,-81,-85,-86,90,]),'or':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[91,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,91,91,-24,91,91,91,-63,-66,-93,91,-23,91,91,-56,-57,-58,-59,-60,-61,-62,-64,-65,-67,-68,-69,-70,-71,-72,-94,91,91,91,-55,91,91,91,-82,-83,-84,91,91,-80,-81,-85,-86,91,]),'mayor':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[92,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,92,92,-24,92,92,92,-63,-66,-93,92,-23,92,92,-56,92,92,-59,-60,-61,-62,92,92,None,None,None,None,None,None,-94,92,92,92,-55,92,92,92,-82,-83,-84,92,92,-80,-81,-85,-86,92,]),'mayorigual':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[93,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,93,93,-24,93,93,93,-63,-66,-93,93,-23,93,93,-56,93,93,-59,-60,-61,-62,93,93,None,None,None,None,None,None,-94,93,93,93,-55,93,93,93,-82,-83,-84,93,93,-80,-81,-85,-86,93,]),'menor':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[94,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,94,94,-24,94,94,94,-63,-66,-93,94,-23,94,94,-56,94,94,-59,-60,-61,-62,94,94,None,None,None,None,None,None,-94,94,94,94,-55,94,94,94,-82,-83,-84,94,94,-80,-81,-85,-86,94,]),'menorigual':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[95,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,95,95,-24,95,95,95,-63,-66,-93,95,-23,95,95,-56,95,95,-59,-60,-61,-62,95,95,None,None,None,None,None,None,-94,95,95,95,-55,95,95,95,-82,-83,-84,95,95,-80,-81,-85,-86,95,]),'igualacion':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[96,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,96,96,-24,96,96,96,-63,-66,-93,96,-23,96,96,-56,96,96,-59,-60,-61,-62,96,96,None,None,None,None,None,None,-94,96,96,96,-55,96,96,96,-82,-83,-84,96,96,-80,-81,-85,-86,96,]),'diferente':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,76,77,78,81,98,99,100,103,110,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,142,151,152,153,165,176,177,178,179,180,181,183,195,196,197,198,205,],[97,-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,97,97,-24,97,97,97,-63,-66,-93,97,-23,97,97,-56,97,97,-59,-60,-61,-62,97,97,None,None,None,None,None,None,-94,97,97,97,-55,97,97,97,-82,-83,-84,97,97,-80,-81,-85,-86,97,]),'coma':([53,56,57,58,59,60,61,62,63,64,65,66,67,68,75,76,77,98,99,100,102,103,110,114,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,144,145,146,147,148,152,153,165,172,174,178,179,180,182,195,196,197,198,203,],[-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,111,-24,-25,-63,-66,-93,141,-54,-23,-56,156,-19,-57,-58,-59,-60,-61,-62,-64,-65,-67,-68,-69,-70,-71,-72,-94,-95,-96,-97,-98,141,-26,-55,-53,-20,-18,-82,-83,-84,141,-80,-81,-85,-86,-21,]),'c_Cierra':([53,56,57,58,59,60,61,62,63,64,65,66,67,68,76,81,98,99,100,102,103,110,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,153,165,167,178,179,180,192,195,196,197,198,],[-22,-73,-74,-75,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,-24,114,-63,-66,-93,140,-54,-23,153,-56,-57,-58,-59,-60,-61,-62,-64,-65,-67,-68,-69,-70,-71,-72,-94,-55,-53,184,-82,-83,-84,203,-80,-81,-85,-86,]),'dosPuntos':([70,115,],[105,154,]),'toFixed':([101,],[133,]),'toExponential':([101,],[134,]),'toString':([101,],[135,]),'toLowerCase':([101,],[136,]),'toUpperCase':([101,],[137,]),'split':([101,],[138,]),'concat':([101,],[139,]),'number':([105,154,],[144,144,]),'string':([105,154,],[145,145,]),'boolean':([105,154,],[146,146,]),'any':([105,154,],[147,147,]),'llave_Abre':([107,108,117,155,201,202,],[149,150,157,173,207,208,]),'else':([185,],[201,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'ENTRADAS':([0,149,150,157,173,207,208,],[2,169,170,175,193,209,210,]),'ENTRADA':([0,2,149,150,157,169,170,173,175,193,207,208,209,210,],[3,27,3,3,3,27,27,3,27,27,3,3,27,27,]),'IMPRIMIR':([0,2,149,150,157,169,170,173,175,193,207,208,209,210,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'IF':([0,2,149,150,157,169,170,173,175,193,201,207,208,209,210,],[5,5,5,5,5,5,5,5,5,5,206,5,5,5,5,]),'WHILE':([0,2,149,150,157,169,170,173,175,193,207,208,209,210,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BREAK':([0,2,149,150,157,169,170,173,175,193,207,208,209,210,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CONTINUE':([0,2,149,150,157,169,170,173,175,193,207,208,209,210,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FOR':([0,2,149,150,157,169,170,173,175,193,207,208,209,210,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INCREMENTO':([0,2,149,150,157,169,170,171,173,175,193,207,208,209,210,],[10,10,10,10,10,10,10,189,10,10,10,10,10,10,10,]),'DECREMENTO':([0,2,149,150,157,169,170,171,173,175,193,207,208,209,210,],[11,11,11,11,11,11,11,190,11,11,11,11,11,11,11,]),'FUNC':([0,2,149,150,157,169,170,173,175,193,207,208,209,210,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'LLAMADA_FUNCION':([0,2,25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,149,150,157,158,159,163,164,166,169,170,173,175,193,199,207,208,209,210,],[13,13,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,13,13,13,53,53,53,53,53,13,13,13,13,13,53,13,13,13,13,]),'RETURN':([0,2,149,150,157,169,170,173,175,193,207,208,209,210,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DECLARACION':([0,2,43,149,150,157,169,170,173,175,193,207,208,209,210,],[15,15,74,15,15,15,15,15,15,15,15,15,15,15,15,]),'ASIGNACION':([0,2,149,150,157,169,170,171,173,175,193,207,208,209,210,],[16,16,16,16,16,16,16,188,16,16,16,16,16,16,16,]),'LISTAINDICES':([23,68,191,],[48,100,48,]),'EXPRESION':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[51,72,73,77,78,81,98,99,103,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,142,103,151,152,165,176,177,181,103,183,205,]),'FUNCION_TOFIXED':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'FUNCION_TOEXPONENTIAL':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FUNCION_TOSTRING':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FUNCION_TOLOWERCASE':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'FUNCION_TOUPPERCASE':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'FUNCION_SPLIT':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FUNCION_CONCAT':([25,39,40,46,47,49,54,55,69,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,111,141,158,159,163,164,166,199,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'PARAMETROS_LLAMA_FUNC':([46,],[75,]),'LISTAEXPRESIONES':([69,106,164,],[102,148,182,]),'PARAMETROS_DECLA_FUNC':([82,],[116,]),'PARAMETRO_DECLA_FUNC':([82,156,],[118,174,]),'TIPO':([105,154,],[143,172,]),'FORITERADOR':([171,],[187,]),'COMPLEMENTO_IF':([185,],[200,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> ENTRADAS','INICIO',1,'p_INICIO','parser.py',65),
  ('INICIO -> <empty>','INICIO',0,'p_INICIO','parser.py',66),
  ('ENTRADAS -> ENTRADAS ENTRADA','ENTRADAS',2,'p_ENTRADAS_PARTE_1','parser.py',75),
  ('ENTRADAS -> ENTRADA','ENTRADAS',1,'p_ENTRADAS_PARTE_2','parser.py',82),
  ('ENTRADA -> IMPRIMIR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',88),
  ('ENTRADA -> IF puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',89),
  ('ENTRADA -> WHILE puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',90),
  ('ENTRADA -> BREAK','ENTRADA',1,'p_ENTRADA','parser.py',91),
  ('ENTRADA -> CONTINUE','ENTRADA',1,'p_ENTRADA','parser.py',92),
  ('ENTRADA -> FOR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',93),
  ('ENTRADA -> INCREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',94),
  ('ENTRADA -> DECREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',95),
  ('ENTRADA -> FUNC puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',96),
  ('ENTRADA -> LLAMADA_FUNCION puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',97),
  ('ENTRADA -> RETURN','ENTRADA',1,'p_ENTRADA','parser.py',98),
  ('FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',8,'p_FUNC_1','parser.py',116),
  ('FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',7,'p_FUNC_2','parser.py',123),
  ('PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',3,'p_PARAMETROS_DECLA_FUNC','parser.py',130),
  ('PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',1,'p_PARAMETROS_DECLA_FUNC','parser.py',131),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO','PARAMETRO_DECLA_FUNC',3,'p_PARAMETRO_DECLA_FUNC_1','parser.py',141),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra','PARAMETRO_DECLA_FUNC',5,'p_PARAMETRO_DECLA_FUNC_2','parser.py',147),
  ('EXPRESION -> LLAMADA_FUNCION','EXPRESION',1,'p_EXPRESION_LLAMA_FUNC','parser.py',154),
  ('LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra','LLAMADA_FUNCION',4,'p_LLAMADA_FUNCION_1','parser.py',161),
  ('LLAMADA_FUNCION -> id p_Abre p_Cierra','LLAMADA_FUNCION',3,'p_LLAMADA_FUNCION_2','parser.py',167),
  ('PARAMETROS_LLAMA_FUNC -> EXPRESION','PARAMETROS_LLAMA_FUNC',1,'p_PARAMETROS_LLAMA_FUNC','parser.py',173),
  ('PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION','PARAMETROS_LLAMA_FUNC',3,'p_PARAMETROS_LLAMA_FUNC','parser.py',174),
  ('FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',11,'p_FOR','parser.py',185),
  ('FORITERADOR -> ASIGNACION','FORITERADOR',1,'p_FORITERADOR','parser.py',191),
  ('FORITERADOR -> INCREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',192),
  ('FORITERADOR -> DECREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',193),
  ('BREAK -> break puntoYcoma','BREAK',2,'p_BREAK','parser.py',200),
  ('CONTINUE -> continue puntoYcoma','CONTINUE',2,'p_CONTINUE','parser.py',206),
  ('RETURN -> return EXPRESION puntoYcoma','RETURN',3,'p_RETURN_1','parser.py',212),
  ('RETURN -> return puntoYcoma','RETURN',2,'p_RETURN_2','parser.py',218),
  ('WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','WHILE',7,'p_WHILE','parser.py',227),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF','IF',8,'p_IF','parser.py',234),
  ('COMPLEMENTO_IF -> else IF','COMPLEMENTO_IF',2,'p_COMPLEMENTO_IF','parser.py',240),
  ('COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra','COMPLEMENTO_IF',4,'p_COMPLEMENTO_IF','parser.py',241),
  ('COMPLEMENTO_IF -> <empty>','COMPLEMENTO_IF',0,'p_COMPLEMENTO_IF','parser.py',242),
  ('ENTRADA -> DECLARACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Declaracion','parser.py',255),
  ('DECLARACION -> let id igual EXPRESION','DECLARACION',4,'p_DECLARACION_NoTipada','parser.py',261),
  ('DECLARACION -> let id dosPuntos TIPO igual EXPRESION','DECLARACION',6,'p_DECLARACION_Tipada','parser.py',268),
  ('DECLARACION -> let id','DECLARACION',2,'p_DECLARACION_SinExpresion_SinTipado','parser.py',274),
  ('DECLARACION -> let id dosPuntos TIPO','DECLARACION',4,'p_DECLARACION_SinExpresion_Tipado','parser.py',280),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION','DECLARACION',8,'p_DECLARACION_Tipada_VECTOR','parser.py',286),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra','DECLARACION',6,'p_DECLARACION_SinExpresion_Tipado_VECTOR','parser.py',292),
  ('ENTRADA -> ASIGNACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Asignacion','parser.py',301),
  ('ASIGNACION -> id igual EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',307),
  ('ASIGNACION -> id LISTAINDICES igual EXPRESION','ASIGNACION',4,'p_ASIGNACION_VEC','parser.py',313),
  ('INCREMENTO -> id incremento','INCREMENTO',2,'p_INCREMENTO','parser.py',321),
  ('DECREMENTO -> id decremento','DECREMENTO',2,'p_DECREMENTO','parser.py',327),
  ('IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra','IMPRIMIR',6,'p_IMPRIMIR_1','parser.py',334),
  ('LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION','LISTAEXPRESIONES',3,'p_LISTAEXPRESIONES_1','parser.py',340),
  ('LISTAEXPRESIONES -> EXPRESION','LISTAEXPRESIONES',1,'p_LISTAEXPRESIONES_2','parser.py',347),
  ('LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra','LISTAINDICES',4,'p_LISTAEXPRESIONES_Indices','parser.py',353),
  ('LISTAINDICES -> c_Abre EXPRESION c_Cierra','LISTAINDICES',3,'p_LISTAEXPRESIONES_Indices_2','parser.py',360),
  ('EXPRESION -> EXPRESION suma EXPRESION','EXPRESION',3,'p_EXPRESION_suma','parser.py',368),
  ('EXPRESION -> EXPRESION resta EXPRESION','EXPRESION',3,'p_EXPRESION_resta','parser.py',375),
  ('EXPRESION -> EXPRESION multiplicacion EXPRESION','EXPRESION',3,'p_EXPRESION_multiplicacion','parser.py',382),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_EXPRESION_division','parser.py',389),
  ('EXPRESION -> EXPRESION potencia EXPRESION','EXPRESION',3,'p_EXPRESION_potencia','parser.py',396),
  ('EXPRESION -> EXPRESION modulo EXPRESION','EXPRESION',3,'p_EXPRESION_modulo','parser.py',403),
  ('EXPRESION -> resta EXPRESION','EXPRESION',2,'p_EXPRESION_negativo','parser.py',410),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_EXPRESION_and','parser.py',419),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_EXPRESION_or','parser.py',426),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_EXPRESION_not','parser.py',433),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_EXPRESION_mayor','parser.py',442),
  ('EXPRESION -> EXPRESION mayorigual EXPRESION','EXPRESION',3,'p_EXPRESION_mayorigual','parser.py',449),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_EXPRESION_menor','parser.py',456),
  ('EXPRESION -> EXPRESION menorigual EXPRESION','EXPRESION',3,'p_EXPRESION_menorigual','parser.py',463),
  ('EXPRESION -> EXPRESION igualacion EXPRESION','EXPRESION',3,'p_EXPRESION_igualacion','parser.py',470),
  ('EXPRESION -> EXPRESION diferente EXPRESION','EXPRESION',3,'p_EXPRESION_diferente','parser.py',477),
  ('EXPRESION -> FUNCION_TOFIXED','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',486),
  ('EXPRESION -> FUNCION_TOEXPONENTIAL','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',487),
  ('EXPRESION -> FUNCION_TOSTRING','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',488),
  ('EXPRESION -> FUNCION_TOLOWERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',489),
  ('EXPRESION -> FUNCION_TOUPPERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',490),
  ('EXPRESION -> FUNCION_SPLIT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',491),
  ('EXPRESION -> FUNCION_CONCAT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',492),
  ('FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra','FUNCION_TOFIXED',6,'p_FUNCION_TOFIXED','parser.py',498),
  ('FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra','FUNCION_TOEXPONENTIAL',6,'p_FUNCION_TOEXPONENTIAL','parser.py',505),
  ('FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra','FUNCION_TOSTRING',5,'p_FUNCION_TOSTRING','parser.py',512),
  ('FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra','FUNCION_TOLOWERCASE',5,'p_FUNCION_TOLOWERCASE','parser.py',519),
  ('FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra','FUNCION_TOUPPERCASE',5,'p_FUNCION_TOUPPERCASE','parser.py',526),
  ('FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra','FUNCION_SPLIT',6,'p_FUNCION_SPLIT','parser.py',533),
  ('FUNCION_CONCAT -> id punto concat p_Abre LISTAEXPRESIONES p_Cierra','FUNCION_CONCAT',6,'p_FUNCION_CONCAT','parser.py',540),
  ('EXPRESION -> cadena','EXPRESION',1,'p_EXPRESION_cadena','parser.py',550),
  ('EXPRESION -> numero','EXPRESION',1,'p_EXPRESION_numero','parser.py',557),
  ('EXPRESION -> true','EXPRESION',1,'p_EXPRESION_booleano','parser.py',564),
  ('EXPRESION -> false','EXPRESION',1,'p_EXPRESION_booleano','parser.py',565),
  ('EXPRESION -> null','EXPRESION',1,'p_EXPRESION_null','parser.py',572),
  ('EXPRESION -> id','EXPRESION',1,'p_EXPRESION_Acceso','parser.py',579),
  ('EXPRESION -> id LISTAINDICES','EXPRESION',2,'p_EXPRESION_Acceso_Vector','parser.py',586),
  ('EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra','EXPRESION',3,'p_EXPRESION_Vector','parser.py',593),
  ('TIPO -> number','TIPO',1,'p_TIPO_NUMBER','parser.py',601),
  ('TIPO -> string','TIPO',1,'p_TIPO_STRING','parser.py',607),
  ('TIPO -> boolean','TIPO',1,'p_TIPO_BOOLEAN','parser.py',613),
  ('TIPO -> any','TIPO',1,'p_TIPO_ANY','parser.py',619),
]
