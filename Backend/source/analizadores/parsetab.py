
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandleftsumarestanonassocmenormayormenorigualmayorigualigualaciondiferenteleftmultiplicaciondivisionmoduloleftpotenciarightnotlefturestaand any boolean break c_Abre c_Cierra cadena coma concat console continue decremento diferente division dosPuntos else false fn for id if igual igualacion incremento let llave_Abre llave_Cierra log mayor mayorigual menor menorigual modulo multiplicacion not null number numero of or p_Abre p_Cierra potencia punto puntoYcoma resta return split string stringMayus suma toExponential toFixed toLowerCase toString toUpperCase true typeof while\n    INICIO : ENTRADAS\n            | \n    \n    ENTRADAS : ENTRADAS ENTRADA\n    \n    ENTRADAS : ENTRADA\n    \n    ENTRADA : IMPRIMIR puntoYcoma\n            |   IF puntoYcoma\n            |   WHILE puntoYcoma\n            |   BREAK\n            |   CONTINUE\n            |   FOR puntoYcoma\n            |   INCREMENTO puntoYcoma\n            |   DECREMENTO puntoYcoma\n            |   FUNC puntoYcoma\n            |   LLAMADA_FUNCION puntoYcoma\n            |   RETURN\n    \n   FUNC : fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra\n   \n    FUNC : fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    PARAMETROS_DECLA_FUNC : PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC\n                            | PARAMETRO_DECLA_FUNC\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO c_Abre c_Cierra\n    \n    EXPRESION : LLAMADA_FUNCION\n    \n    LLAMADA_FUNCION : id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra\n    \n    LLAMADA_FUNCION : id p_Abre p_Cierra\n    \n    PARAMETROS_LLAMA_FUNC : EXPRESION\n                          | PARAMETROS_LLAMA_FUNC coma EXPRESION\n    \n    FOR : for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FOR : for p_Abre DECLARACION of EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FORITERADOR : ASIGNACION\n                | INCREMENTO\n                | DECREMENTO\n    \n    BREAK : break puntoYcoma\n    \n    CONTINUE : continue puntoYcoma\n    \n    RETURN : return EXPRESION puntoYcoma\n    \n    RETURN : return puntoYcoma\n    \n    WHILE : while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF\n    \n    COMPLEMENTO_IF : else IF\n                    | else llave_Abre ENTRADAS llave_Cierra\n                    | \n    \n    ENTRADA : DECLARACION puntoYcoma\n    \n    DECLARACION : let id igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO igual EXPRESION\n    \n    DECLARACION : let id \n    \n    DECLARACION : let id dosPuntos TIPO\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra\n    \n    ENTRADA : ASIGNACION puntoYcoma\n    \n    ASIGNACION : id igual EXPRESION\n    \n    ASIGNACION : id LISTAINDICES igual EXPRESION\n    \n    INCREMENTO : id incremento \n    \n    DECREMENTO : id decremento\n    \n    IMPRIMIR : console punto log p_Abre LISTAEXPRESIONES p_Cierra\n    \n    LISTAEXPRESIONES :  LISTAEXPRESIONES coma EXPRESION\n    \n    LISTAEXPRESIONES : EXPRESION\n    \n    LISTAINDICES :  LISTAINDICES c_Abre EXPRESION c_Cierra\n    \n    LISTAINDICES : c_Abre EXPRESION c_Cierra\n    \n    EXPRESION : EXPRESION suma EXPRESION\n    \n    EXPRESION : EXPRESION resta EXPRESION\n    \n    EXPRESION : EXPRESION multiplicacion EXPRESION\n    \n    EXPRESION : EXPRESION division EXPRESION\n    \n    EXPRESION : EXPRESION potencia EXPRESION\n    \n    EXPRESION : EXPRESION modulo EXPRESION\n    \n    EXPRESION : resta EXPRESION %prec uresta\n    \n    EXPRESION : EXPRESION and EXPRESION\n    \n    EXPRESION : EXPRESION or EXPRESION\n    \n    EXPRESION : not EXPRESION\n    \n    EXPRESION : EXPRESION mayor EXPRESION\n    \n    EXPRESION : EXPRESION mayorigual EXPRESION\n    \n    EXPRESION : EXPRESION menor EXPRESION\n    \n    EXPRESION : EXPRESION menorigual EXPRESION\n    \n    EXPRESION : EXPRESION igualacion EXPRESION\n    \n    EXPRESION : EXPRESION diferente EXPRESION\n    \n    EXPRESION : FUNCION_TOFIXED\n            | FUNCION_TOEXPONENTIAL\n            | FUNCION_TOSTRING\n            | FUNCION_TOLOWERCASE\n            | FUNCION_TOUPPERCASE\n            | FUNCION_SPLIT\n            | FUNCION_CONCAT\n            | FUNCION_TYPEOF\n    \n    FUNCION_TOFIXED : id punto toFixed p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOEXPONENTIAL : id punto toExponential p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOSTRING : id punto toString p_Abre p_Cierra\n    \n    FUNCION_TOLOWERCASE : id punto toLowerCase p_Abre p_Cierra\n    \n    FUNCION_TOUPPERCASE : id punto toUpperCase p_Abre p_Cierra\n    \n    FUNCION_SPLIT : id punto split p_Abre EXPRESION p_Cierra\n    \n    FUNCION_CONCAT : id punto concat p_Abre LISTAEXPRESIONES p_Cierra\n    \n    FUNCION_TYPEOF : typeof p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : cadena\n    \n    EXPRESION : numero\n    \n    EXPRESION : true\n                | false\n    \n    EXPRESION : null\n    \n    EXPRESION : id\n    \n    EXPRESION : id LISTAINDICES\n    \n    EXPRESION : c_Abre LISTAEXPRESIONES c_Cierra\n    \n    EXPRESION : TIPO p_Abre EXPRESION p_Cierra\n    \n    TIPO : number\n    \n    TIPO : string\n    \n    TIPO : stringMayus\n    \n    TIPO : boolean\n    \n    TIPO : any\n    '
    
_lr_action_items = {'$end':([0,1,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,91,],[-2,0,-1,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,]),'console':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,91,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[17,17,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'if':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,91,158,159,167,181,182,186,188,205,207,215,217,222,223,225,226,],[18,18,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'while':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,91,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[19,19,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'break':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,91,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[20,20,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'continue':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,91,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[21,21,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'for':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,91,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[22,22,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'id':([0,2,3,7,8,14,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,46,47,49,52,54,55,70,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,158,159,166,167,168,169,173,174,178,181,182,183,186,188,205,207,213,217,222,223,225,226,],[23,23,-4,-8,-9,-15,50,69,78,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,69,69,-32,-33,69,69,69,-35,69,69,69,69,69,126,-34,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,23,23,126,23,69,69,69,69,69,23,23,204,23,23,23,23,69,23,23,23,23,23,]),'fn':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,91,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[24,24,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'return':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,91,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[25,25,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'let':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,43,52,91,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[26,26,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,26,-35,-34,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'llave_Cierra':([3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,91,181,182,188,207,217,225,226,],[-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,198,199,208,219,224,227,228,]),'puntoYcoma':([4,5,6,9,10,11,12,13,15,16,20,21,25,44,45,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,76,77,78,82,84,86,106,107,108,121,123,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,155,156,160,163,176,177,180,191,192,193,196,197,198,199,208,209,210,211,212,214,219,220,221,224,227,228,],[28,29,30,31,32,33,34,35,36,37,41,42,52,-51,-52,91,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,-99,-100,-101,-102,-103,-44,119,-24,-49,-64,-67,-96,-23,-50,-57,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-97,-42,-45,183,-56,-98,-89,-53,-84,-85,-86,-43,-47,-40,-36,-17,-82,-83,-87,-88,-37,-16,-46,-38,-28,-39,-27,]),'punto':([17,69,],[38,109,]),'p_Abre':([18,19,22,23,50,69,71,72,73,74,75,76,77,79,144,145,146,147,148,149,150,],[39,40,43,46,90,46,112,113,-99,-100,-101,-102,-103,116,168,169,170,171,172,173,174,]),'incremento':([23,204,],[44,44,]),'decremento':([23,204,],[45,45,]),'igual':([23,48,73,74,75,76,77,78,125,156,163,197,204,],[47,87,-99,-100,-101,-102,-103,114,-57,178,-56,213,47,]),'c_Abre':([23,25,39,40,46,47,48,49,54,55,69,70,73,74,75,76,77,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,112,113,114,116,119,120,122,125,152,156,163,168,169,173,174,178,185,204,213,],[49,70,70,70,70,70,88,70,70,70,49,70,-99,-100,-101,-102,-103,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,88,70,70,70,70,70,70,70,-57,70,179,-56,70,70,70,70,70,206,49,70,]),'resta':([25,39,40,46,47,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,80,81,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,116,119,120,121,122,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,152,153,154,155,160,161,162,163,168,169,173,174,175,176,177,178,189,190,191,192,193,194,196,209,210,211,212,213,220,],[54,54,54,54,54,54,93,-22,54,54,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,54,93,93,-24,93,93,54,54,93,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-64,-67,-96,93,54,54,54,54,54,54,-23,54,93,93,-57,-58,-59,-60,-61,-62,-63,93,93,-68,-69,-70,-71,-72,-73,-97,54,93,93,93,93,93,93,-56,54,54,54,54,93,-98,-89,54,93,93,-84,-85,-86,93,93,-82,-83,-87,-88,54,93,]),'not':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'cadena':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'numero':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'true':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'false':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'null':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'typeof':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'number':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,115,116,119,120,122,152,164,168,169,173,174,178,213,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'string':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,115,116,119,120,122,152,164,168,169,173,174,178,213,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'stringMayus':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,115,116,119,120,122,152,164,168,169,173,174,178,213,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'boolean':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,115,116,119,120,122,152,164,168,169,173,174,178,213,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'any':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,115,116,119,120,122,152,164,168,169,173,174,178,213,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'log':([38,],[79,]),'p_Cierra':([44,45,46,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,76,77,80,81,83,84,85,86,90,106,107,108,111,121,123,125,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,157,161,162,163,170,171,172,175,176,177,185,187,189,190,191,192,193,194,195,200,201,202,203,209,210,211,212,218,],[-51,-52,84,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,-99,-100,-101,-102,-103,117,118,121,-24,-25,-49,128,-64,-67,-96,-55,-23,-50,-57,165,-19,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-97,176,177,180,184,-26,-56,191,192,193,-54,-98,-89,-20,-18,209,210,-84,-85,-86,211,212,216,-29,-30,-31,-82,-83,-87,-88,-21,]),'suma':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[92,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,92,92,-24,92,92,92,-64,-67,-96,92,-23,92,92,-57,-58,-59,-60,-61,-62,-63,92,92,-68,-69,-70,-71,-72,-73,-97,92,92,92,92,92,92,-56,92,-98,-89,92,92,-84,-85,-86,92,92,-82,-83,-87,-88,92,]),'multiplicacion':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[94,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,94,94,-24,94,94,94,-64,-67,-96,94,-23,94,94,-57,94,94,-60,-61,-62,-63,94,94,94,94,94,94,94,94,-97,94,94,94,94,94,94,-56,94,-98,-89,94,94,-84,-85,-86,94,94,-82,-83,-87,-88,94,]),'division':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[95,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,95,95,-24,95,95,95,-64,-67,-96,95,-23,95,95,-57,95,95,-60,-61,-62,-63,95,95,95,95,95,95,95,95,-97,95,95,95,95,95,95,-56,95,-98,-89,95,95,-84,-85,-86,95,95,-82,-83,-87,-88,95,]),'potencia':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[96,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,96,96,-24,96,96,96,-64,-67,-96,96,-23,96,96,-57,96,96,96,96,-62,96,96,96,96,96,96,96,96,96,-97,96,96,96,96,96,96,-56,96,-98,-89,96,96,-84,-85,-86,96,96,-82,-83,-87,-88,96,]),'modulo':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[97,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,97,97,-24,97,97,97,-64,-67,-96,97,-23,97,97,-57,97,97,-60,-61,-62,-63,97,97,97,97,97,97,97,97,-97,97,97,97,97,97,97,-56,97,-98,-89,97,97,-84,-85,-86,97,97,-82,-83,-87,-88,97,]),'and':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[98,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,98,98,-24,98,98,98,-64,-67,-96,98,-23,98,98,-57,-58,-59,-60,-61,-62,-63,-65,98,-68,-69,-70,-71,-72,-73,-97,98,98,98,98,98,98,-56,98,-98,-89,98,98,-84,-85,-86,98,98,-82,-83,-87,-88,98,]),'or':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[99,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,99,99,-24,99,99,99,-64,-67,-96,99,-23,99,99,-57,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-97,99,99,99,99,99,99,-56,99,-98,-89,99,99,-84,-85,-86,99,99,-82,-83,-87,-88,99,]),'mayor':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[100,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,100,100,-24,100,100,100,-64,-67,-96,100,-23,100,100,-57,100,100,-60,-61,-62,-63,100,100,None,None,None,None,None,None,-97,100,100,100,100,100,100,-56,100,-98,-89,100,100,-84,-85,-86,100,100,-82,-83,-87,-88,100,]),'mayorigual':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[101,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,101,101,-24,101,101,101,-64,-67,-96,101,-23,101,101,-57,101,101,-60,-61,-62,-63,101,101,None,None,None,None,None,None,-97,101,101,101,101,101,101,-56,101,-98,-89,101,101,-84,-85,-86,101,101,-82,-83,-87,-88,101,]),'menor':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[102,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,102,102,-24,102,102,102,-64,-67,-96,102,-23,102,102,-57,102,102,-60,-61,-62,-63,102,102,None,None,None,None,None,None,-97,102,102,102,102,102,102,-56,102,-98,-89,102,102,-84,-85,-86,102,102,-82,-83,-87,-88,102,]),'menorigual':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[103,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,103,103,-24,103,103,103,-64,-67,-96,103,-23,103,103,-57,103,103,-60,-61,-62,-63,103,103,None,None,None,None,None,None,-97,103,103,103,103,103,103,-56,103,-98,-89,103,103,-84,-85,-86,103,103,-82,-83,-87,-88,103,]),'igualacion':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[104,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,104,104,-24,104,104,104,-64,-67,-96,104,-23,104,104,-57,104,104,-60,-61,-62,-63,104,104,None,None,None,None,None,None,-97,104,104,104,104,104,104,-56,104,-98,-89,104,104,-84,-85,-86,104,104,-82,-83,-87,-88,104,]),'diferente':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,80,81,84,85,86,89,106,107,108,111,121,123,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,153,154,155,160,161,162,163,175,176,177,189,190,191,192,193,194,196,209,210,211,212,220,],[105,-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,105,105,-24,105,105,105,-64,-67,-96,105,-23,105,105,-57,105,105,-60,-61,-62,-63,105,105,None,None,None,None,None,None,-97,105,105,105,105,105,105,-56,105,-98,-89,105,105,-84,-85,-86,105,105,-82,-83,-87,-88,105,]),'coma':([53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,76,77,83,84,85,106,107,108,110,111,121,125,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,157,162,163,175,176,177,185,187,191,192,193,195,209,210,211,212,218,],[-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,-99,-100,-101,-102,-103,122,-24,-25,-64,-67,-96,152,-55,-23,-57,166,-19,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-97,152,-26,-56,-54,-98,-89,-20,-18,-84,-85,-86,152,-82,-83,-87,-88,-21,]),'c_Cierra':([53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,84,89,106,107,108,110,111,121,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,163,175,176,177,179,191,192,193,206,209,210,211,212,],[-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,-24,125,-64,-67,-96,151,-55,-23,163,-57,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-97,-56,-54,-98,-89,197,-84,-85,-86,218,-82,-83,-87,-88,]),'of':([53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,76,77,78,82,84,106,107,108,121,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,151,155,156,163,176,177,191,192,193,196,197,209,210,211,212,220,],[-22,-74,-75,-76,-77,-78,-79,-80,-81,-90,-91,-92,-93,-94,-95,-99,-100,-101,-102,-103,-44,120,-24,-64,-67,-96,-23,-57,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-97,-42,-45,-56,-98,-89,-84,-85,-86,-43,-47,-82,-83,-87,-88,-46,]),'dosPuntos':([78,126,],[115,164,]),'toFixed':([109,],[144,]),'toExponential':([109,],[145,]),'toString':([109,],[146,]),'toLowerCase':([109,],[147,]),'toUpperCase':([109,],[148,]),'split':([109,],[149,]),'concat':([109,],[150,]),'llave_Abre':([117,118,128,165,184,215,216,],[158,159,167,186,205,222,223,]),'else':([198,],[215,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'ENTRADAS':([0,158,159,167,186,205,222,223,],[2,181,182,188,207,217,225,226,]),'ENTRADA':([0,2,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[3,27,3,3,3,27,27,3,27,3,27,27,3,3,27,27,]),'IMPRIMIR':([0,2,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'IF':([0,2,158,159,167,181,182,186,188,205,207,215,217,222,223,225,226,],[5,5,5,5,5,5,5,5,5,5,5,221,5,5,5,5,5,]),'WHILE':([0,2,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BREAK':([0,2,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CONTINUE':([0,2,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FOR':([0,2,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INCREMENTO':([0,2,158,159,167,181,182,183,186,188,205,207,217,222,223,225,226,],[10,10,10,10,10,10,10,202,10,10,10,10,10,10,10,10,10,]),'DECREMENTO':([0,2,158,159,167,181,182,183,186,188,205,207,217,222,223,225,226,],[11,11,11,11,11,11,11,203,11,11,11,11,11,11,11,11,11,]),'FUNC':([0,2,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'LLAMADA_FUNCION':([0,2,25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,158,159,167,168,169,173,174,178,181,182,186,188,205,207,213,217,222,223,225,226,],[13,13,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,13,13,13,53,53,53,53,53,13,13,13,13,13,13,53,13,13,13,13,13,]),'RETURN':([0,2,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DECLARACION':([0,2,43,158,159,167,181,182,186,188,205,207,217,222,223,225,226,],[15,15,82,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'ASIGNACION':([0,2,158,159,167,181,182,183,186,188,205,207,217,222,223,225,226,],[16,16,16,16,16,16,16,201,16,16,16,16,16,16,16,16,16,]),'LISTAINDICES':([23,69,204,],[48,108,48,]),'EXPRESION':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[51,80,81,85,86,89,106,107,111,123,124,130,131,132,133,134,135,136,137,138,139,140,141,142,143,153,154,155,111,160,161,162,175,189,190,194,111,196,220,]),'FUNCION_TOFIXED':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'FUNCION_TOEXPONENTIAL':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FUNCION_TOSTRING':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FUNCION_TOLOWERCASE':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'FUNCION_TOUPPERCASE':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'FUNCION_SPLIT':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FUNCION_CONCAT':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'FUNCION_TYPEOF':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,116,119,120,122,152,168,169,173,174,178,213,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'TIPO':([25,39,40,46,47,49,54,55,70,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,114,115,116,119,120,122,152,164,168,169,173,174,178,213,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,156,71,71,71,71,71,185,71,71,71,71,71,71,]),'PARAMETROS_LLAMA_FUNC':([46,],[83,]),'LISTAEXPRESIONES':([70,116,174,],[110,157,195,]),'PARAMETROS_DECLA_FUNC':([90,],[127,]),'PARAMETRO_DECLA_FUNC':([90,166,],[129,187,]),'FORITERADOR':([183,],[200,]),'COMPLEMENTO_IF':([198,],[214,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> ENTRADAS','INICIO',1,'p_INICIO','parser.py',68),
  ('INICIO -> <empty>','INICIO',0,'p_INICIO','parser.py',69),
  ('ENTRADAS -> ENTRADAS ENTRADA','ENTRADAS',2,'p_ENTRADAS_PARTE_1','parser.py',78),
  ('ENTRADAS -> ENTRADA','ENTRADAS',1,'p_ENTRADAS_PARTE_2','parser.py',85),
  ('ENTRADA -> IMPRIMIR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',91),
  ('ENTRADA -> IF puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',92),
  ('ENTRADA -> WHILE puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',93),
  ('ENTRADA -> BREAK','ENTRADA',1,'p_ENTRADA','parser.py',94),
  ('ENTRADA -> CONTINUE','ENTRADA',1,'p_ENTRADA','parser.py',95),
  ('ENTRADA -> FOR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',96),
  ('ENTRADA -> INCREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',97),
  ('ENTRADA -> DECREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',98),
  ('ENTRADA -> FUNC puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',99),
  ('ENTRADA -> LLAMADA_FUNCION puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',100),
  ('ENTRADA -> RETURN','ENTRADA',1,'p_ENTRADA','parser.py',101),
  ('FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',8,'p_FUNC_1','parser.py',119),
  ('FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',7,'p_FUNC_2','parser.py',126),
  ('PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',3,'p_PARAMETROS_DECLA_FUNC','parser.py',133),
  ('PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',1,'p_PARAMETROS_DECLA_FUNC','parser.py',134),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO','PARAMETRO_DECLA_FUNC',3,'p_PARAMETRO_DECLA_FUNC_1','parser.py',144),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra','PARAMETRO_DECLA_FUNC',5,'p_PARAMETRO_DECLA_FUNC_2','parser.py',150),
  ('EXPRESION -> LLAMADA_FUNCION','EXPRESION',1,'p_EXPRESION_LLAMA_FUNC','parser.py',157),
  ('LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra','LLAMADA_FUNCION',4,'p_LLAMADA_FUNCION_1','parser.py',164),
  ('LLAMADA_FUNCION -> id p_Abre p_Cierra','LLAMADA_FUNCION',3,'p_LLAMADA_FUNCION_2','parser.py',170),
  ('PARAMETROS_LLAMA_FUNC -> EXPRESION','PARAMETROS_LLAMA_FUNC',1,'p_PARAMETROS_LLAMA_FUNC','parser.py',176),
  ('PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION','PARAMETROS_LLAMA_FUNC',3,'p_PARAMETROS_LLAMA_FUNC','parser.py',177),
  ('FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',11,'p_FOR','parser.py',188),
  ('FOR -> for p_Abre DECLARACION of EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',9,'p_FOR_Vector_Cadena','parser.py',194),
  ('FORITERADOR -> ASIGNACION','FORITERADOR',1,'p_FORITERADOR','parser.py',200),
  ('FORITERADOR -> INCREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',201),
  ('FORITERADOR -> DECREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',202),
  ('BREAK -> break puntoYcoma','BREAK',2,'p_BREAK','parser.py',209),
  ('CONTINUE -> continue puntoYcoma','CONTINUE',2,'p_CONTINUE','parser.py',215),
  ('RETURN -> return EXPRESION puntoYcoma','RETURN',3,'p_RETURN_1','parser.py',221),
  ('RETURN -> return puntoYcoma','RETURN',2,'p_RETURN_2','parser.py',227),
  ('WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','WHILE',7,'p_WHILE','parser.py',236),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF','IF',8,'p_IF','parser.py',243),
  ('COMPLEMENTO_IF -> else IF','COMPLEMENTO_IF',2,'p_COMPLEMENTO_IF','parser.py',249),
  ('COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra','COMPLEMENTO_IF',4,'p_COMPLEMENTO_IF','parser.py',250),
  ('COMPLEMENTO_IF -> <empty>','COMPLEMENTO_IF',0,'p_COMPLEMENTO_IF','parser.py',251),
  ('ENTRADA -> DECLARACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Declaracion','parser.py',264),
  ('DECLARACION -> let id igual EXPRESION','DECLARACION',4,'p_DECLARACION_NoTipada','parser.py',270),
  ('DECLARACION -> let id dosPuntos TIPO igual EXPRESION','DECLARACION',6,'p_DECLARACION_Tipada','parser.py',277),
  ('DECLARACION -> let id','DECLARACION',2,'p_DECLARACION_SinExpresion_SinTipado','parser.py',283),
  ('DECLARACION -> let id dosPuntos TIPO','DECLARACION',4,'p_DECLARACION_SinExpresion_Tipado','parser.py',289),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION','DECLARACION',8,'p_DECLARACION_Tipada_VECTOR','parser.py',295),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra','DECLARACION',6,'p_DECLARACION_SinExpresion_Tipado_VECTOR','parser.py',301),
  ('ENTRADA -> ASIGNACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Asignacion','parser.py',310),
  ('ASIGNACION -> id igual EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',316),
  ('ASIGNACION -> id LISTAINDICES igual EXPRESION','ASIGNACION',4,'p_ASIGNACION_VEC','parser.py',322),
  ('INCREMENTO -> id incremento','INCREMENTO',2,'p_INCREMENTO','parser.py',330),
  ('DECREMENTO -> id decremento','DECREMENTO',2,'p_DECREMENTO','parser.py',336),
  ('IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra','IMPRIMIR',6,'p_IMPRIMIR_1','parser.py',343),
  ('LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION','LISTAEXPRESIONES',3,'p_LISTAEXPRESIONES_1','parser.py',349),
  ('LISTAEXPRESIONES -> EXPRESION','LISTAEXPRESIONES',1,'p_LISTAEXPRESIONES_2','parser.py',356),
  ('LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra','LISTAINDICES',4,'p_LISTAEXPRESIONES_Indices','parser.py',362),
  ('LISTAINDICES -> c_Abre EXPRESION c_Cierra','LISTAINDICES',3,'p_LISTAEXPRESIONES_Indices_2','parser.py',369),
  ('EXPRESION -> EXPRESION suma EXPRESION','EXPRESION',3,'p_EXPRESION_suma','parser.py',377),
  ('EXPRESION -> EXPRESION resta EXPRESION','EXPRESION',3,'p_EXPRESION_resta','parser.py',384),
  ('EXPRESION -> EXPRESION multiplicacion EXPRESION','EXPRESION',3,'p_EXPRESION_multiplicacion','parser.py',391),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_EXPRESION_division','parser.py',398),
  ('EXPRESION -> EXPRESION potencia EXPRESION','EXPRESION',3,'p_EXPRESION_potencia','parser.py',405),
  ('EXPRESION -> EXPRESION modulo EXPRESION','EXPRESION',3,'p_EXPRESION_modulo','parser.py',412),
  ('EXPRESION -> resta EXPRESION','EXPRESION',2,'p_EXPRESION_negativo','parser.py',419),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_EXPRESION_and','parser.py',428),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_EXPRESION_or','parser.py',435),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_EXPRESION_not','parser.py',442),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_EXPRESION_mayor','parser.py',451),
  ('EXPRESION -> EXPRESION mayorigual EXPRESION','EXPRESION',3,'p_EXPRESION_mayorigual','parser.py',458),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_EXPRESION_menor','parser.py',465),
  ('EXPRESION -> EXPRESION menorigual EXPRESION','EXPRESION',3,'p_EXPRESION_menorigual','parser.py',472),
  ('EXPRESION -> EXPRESION igualacion EXPRESION','EXPRESION',3,'p_EXPRESION_igualacion','parser.py',479),
  ('EXPRESION -> EXPRESION diferente EXPRESION','EXPRESION',3,'p_EXPRESION_diferente','parser.py',486),
  ('EXPRESION -> FUNCION_TOFIXED','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',495),
  ('EXPRESION -> FUNCION_TOEXPONENTIAL','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',496),
  ('EXPRESION -> FUNCION_TOSTRING','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',497),
  ('EXPRESION -> FUNCION_TOLOWERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',498),
  ('EXPRESION -> FUNCION_TOUPPERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',499),
  ('EXPRESION -> FUNCION_SPLIT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',500),
  ('EXPRESION -> FUNCION_CONCAT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',501),
  ('EXPRESION -> FUNCION_TYPEOF','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',502),
  ('FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra','FUNCION_TOFIXED',6,'p_FUNCION_TOFIXED','parser.py',508),
  ('FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra','FUNCION_TOEXPONENTIAL',6,'p_FUNCION_TOEXPONENTIAL','parser.py',515),
  ('FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra','FUNCION_TOSTRING',5,'p_FUNCION_TOSTRING','parser.py',522),
  ('FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra','FUNCION_TOLOWERCASE',5,'p_FUNCION_TOLOWERCASE','parser.py',529),
  ('FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra','FUNCION_TOUPPERCASE',5,'p_FUNCION_TOUPPERCASE','parser.py',536),
  ('FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra','FUNCION_SPLIT',6,'p_FUNCION_SPLIT','parser.py',543),
  ('FUNCION_CONCAT -> id punto concat p_Abre LISTAEXPRESIONES p_Cierra','FUNCION_CONCAT',6,'p_FUNCION_CONCAT','parser.py',550),
  ('FUNCION_TYPEOF -> typeof p_Abre EXPRESION p_Cierra','FUNCION_TYPEOF',4,'p_FUNCION_TYPEOF','parser.py',557),
  ('EXPRESION -> cadena','EXPRESION',1,'p_EXPRESION_cadena','parser.py',565),
  ('EXPRESION -> numero','EXPRESION',1,'p_EXPRESION_numero','parser.py',572),
  ('EXPRESION -> true','EXPRESION',1,'p_EXPRESION_booleano','parser.py',579),
  ('EXPRESION -> false','EXPRESION',1,'p_EXPRESION_booleano','parser.py',580),
  ('EXPRESION -> null','EXPRESION',1,'p_EXPRESION_null','parser.py',587),
  ('EXPRESION -> id','EXPRESION',1,'p_EXPRESION_Acceso','parser.py',594),
  ('EXPRESION -> id LISTAINDICES','EXPRESION',2,'p_EXPRESION_Acceso_Vector','parser.py',601),
  ('EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra','EXPRESION',3,'p_EXPRESION_Vector','parser.py',608),
  ('EXPRESION -> TIPO p_Abre EXPRESION p_Cierra','EXPRESION',4,'p_EXPRESION_Casteo','parser.py',615),
  ('TIPO -> number','TIPO',1,'p_TIPO_NUMBER','parser.py',623),
  ('TIPO -> string','TIPO',1,'p_TIPO_STRING','parser.py',629),
  ('TIPO -> stringMayus','TIPO',1,'p_TIPO_STRINGMayus','parser.py',635),
  ('TIPO -> boolean','TIPO',1,'p_TIPO_BOOLEAN','parser.py',641),
  ('TIPO -> any','TIPO',1,'p_TIPO_ANY','parser.py',647),
]
