
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'cadena p_Abre p_Cierre println puntoYcoma\n    INICIO : ENTRADAS\n    \n    ENTRADAS : ENTRADAS ENTRADA\n    \n    ENTRADAS : ENTRADA\n    \n    ENTRADA : INSTRUCCION\n    \n    INSTRUCCION : PRINTLN\n    \n    PRINTLN : println p_Abre EXPRESION p_Cierre puntoYcoma\n    \n    EXPRESION : cadena\n    '
    
_lr_action_items = {'println':([0,2,3,4,5,7,12,],[6,6,-3,-4,-5,-2,-6,]),'$end':([1,2,3,4,5,7,12,],[0,-1,-3,-4,-5,-2,-6,]),'p_Abre':([6,],[8,]),'cadena':([8,],[10,]),'p_Cierre':([9,10,],[11,-7,]),'puntoYcoma':([11,],[12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'ENTRADAS':([0,],[2,]),'ENTRADA':([0,2,],[3,7,]),'INSTRUCCION':([0,2,],[4,4,]),'PRINTLN':([0,2,],[5,5,]),'EXPRESION':([8,],[9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> ENTRADAS','INICIO',1,'p_INICIO','gramatica.py',56),
  ('ENTRADAS -> ENTRADAS ENTRADA','ENTRADAS',2,'p_ENTRADAS_PARTE_1','gramatica.py',62),
  ('ENTRADAS -> ENTRADA','ENTRADAS',1,'p_ENTRADAS_PARTE_2','gramatica.py',68),
  ('ENTRADA -> INSTRUCCION','ENTRADA',1,'p_ENTRADA','gramatica.py',76),
  ('INSTRUCCION -> PRINTLN','INSTRUCCION',1,'p_INSTRUCCION_PRINTLN','gramatica.py',82),
  ('PRINTLN -> println p_Abre EXPRESION p_Cierre puntoYcoma','PRINTLN',5,'p_PRINTLN','gramatica.py',89),
  ('EXPRESION -> cadena','EXPRESION',1,'p_EXPRESION','gramatica.py',95),
]
