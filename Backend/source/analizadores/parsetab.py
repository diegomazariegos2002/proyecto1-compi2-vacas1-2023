
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandleftsumarestanonassocmenormayormenorigualmayorigualigualaciondiferenteleftmultiplicaciondivisionmoduloleftpotenciarightnotlefturestaand any boolean break c_Abre c_Cierra cadena coma concat console continue decremento diferente division dosPuntos else false fn for id if igual igualacion incremento let llave_Abre llave_Cierra log mayor mayorigual menor menorigual modulo multiplicacion not null number numero or p_Abre p_Cierra potencia punto puntoYcoma resta return split string suma toExponential toFixed toLowerCase toString toUpperCase true while\n    INICIO : ENTRADAS\n    \n    ENTRADAS : ENTRADAS ENTRADA\n    \n    ENTRADAS : ENTRADA\n    \n    ENTRADA : IMPRIMIR puntoYcoma\n            |   IF puntoYcoma\n            |   WHILE puntoYcoma\n            |   BREAK\n            |   CONTINUE\n            |   FOR puntoYcoma\n            |   INCREMENTO puntoYcoma\n            |   DECREMENTO puntoYcoma\n            |   FUNC puntoYcoma\n            |   LLAMADA_FUNCION puntoYcoma\n            |   RETURN\n    \n   FUNC : fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra\n   \n    FUNC : fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    PARAMETROS_DECLA_FUNC : PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC\n                            | PARAMETRO_DECLA_FUNC\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO c_Abre c_Cierra\n    \n    EXPRESION : LLAMADA_FUNCION\n    \n    LLAMADA_FUNCION : id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra\n    \n    LLAMADA_FUNCION : id p_Abre p_Cierra\n    \n    PARAMETROS_LLAMA_FUNC : EXPRESION\n                          | PARAMETROS_LLAMA_FUNC coma EXPRESION\n    \n    FOR : for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FORITERADOR : ASIGNACION\n                | INCREMENTO\n                | DECREMENTO\n    \n    BREAK : break puntoYcoma\n    \n    CONTINUE : continue puntoYcoma\n    \n    RETURN : return EXPRESION puntoYcoma\n    \n    RETURN : return puntoYcoma\n    \n    WHILE : while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF\n    \n    COMPLEMENTO_IF : else IF\n                    | else llave_Abre ENTRADAS llave_Cierra\n                    | \n    \n    ENTRADA : DECLARACION puntoYcoma\n    \n    DECLARACION : let id igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO igual EXPRESION\n    \n    DECLARACION : let id \n    \n    DECLARACION : let id dosPuntos TIPO\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra\n    \n    ENTRADA : ASIGNACION puntoYcoma\n    \n    ASIGNACION : id igual EXPRESION\n    \n    ASIGNACION : id LISTAINDICES igual EXPRESION\n    \n    INCREMENTO : id incremento \n    \n    DECREMENTO : id decremento\n    \n    IMPRIMIR : console punto log p_Abre LISTAEXPRESIONES p_Cierra\n    \n    LISTAEXPRESIONES :  LISTAEXPRESIONES coma EXPRESION\n    \n    LISTAEXPRESIONES : EXPRESION\n    \n    LISTAINDICES :  LISTAINDICES c_Abre EXPRESION c_Cierra\n    \n    LISTAINDICES : c_Abre EXPRESION c_Cierra\n    \n    EXPRESION : EXPRESION suma EXPRESION\n    \n    EXPRESION : EXPRESION resta EXPRESION\n    \n    EXPRESION : EXPRESION multiplicacion EXPRESION\n    \n    EXPRESION : EXPRESION division EXPRESION\n    \n    EXPRESION : EXPRESION potencia EXPRESION\n    \n    EXPRESION : EXPRESION modulo EXPRESION\n    \n    EXPRESION : resta EXPRESION %prec uresta\n    \n    EXPRESION : EXPRESION and EXPRESION\n    \n    EXPRESION : EXPRESION or EXPRESION\n    \n    EXPRESION : not EXPRESION\n    \n    EXPRESION : EXPRESION mayor EXPRESION\n    \n    EXPRESION : EXPRESION mayorigual EXPRESION\n    \n    EXPRESION : EXPRESION menor EXPRESION\n    \n    EXPRESION : EXPRESION menorigual EXPRESION\n    \n    EXPRESION : EXPRESION igualacion EXPRESION\n    \n    EXPRESION : EXPRESION diferente EXPRESION\n    \n    EXPRESION : FUNCION_TOFIXED\n            | FUNCION_TOEXPONENTIAL\n            | FUNCION_TOSTRING\n            | FUNCION_TOLOWERCASE\n            | FUNCION_TOUPPERCASE\n            | FUNCION_SPLIT\n    \n    FUNCION_TOFIXED : id punto toFixed p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOEXPONENTIAL : id punto toExponential p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOSTRING : id punto toString p_Abre p_Cierra\n    \n    FUNCION_TOLOWERCASE : id punto toLowerCase p_Abre p_Cierra\n    \n    FUNCION_TOUPPERCASE : id punto toUpperCase p_Abre p_Cierra\n    \n    FUNCION_SPLIT : id punto split p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : cadena\n    \n    EXPRESION : numero\n    \n    EXPRESION : true\n                | false\n    \n    EXPRESION : null\n    \n    EXPRESION : id\n    \n    EXPRESION : id LISTAINDICES\n    \n    EXPRESION : c_Abre LISTAEXPRESIONES c_Cierra\n    \n    TIPO : number\n    \n    TIPO : string\n    \n    TIPO : boolean\n    \n    TIPO : any\n    '
    
_lr_action_items = {'console':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,82,147,148,155,166,167,170,172,189,202,203,204,205,],[17,17,-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,-33,-32,17,17,17,17,17,17,17,17,17,17,17,17,]),'if':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,82,147,148,155,166,167,170,172,189,196,202,203,204,205,],[18,18,-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,-33,-32,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'while':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,82,147,148,155,166,167,170,172,189,202,203,204,205,],[19,19,-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,-33,-32,19,19,19,19,19,19,19,19,19,19,19,19,]),'break':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,82,147,148,155,166,167,170,172,189,202,203,204,205,],[20,20,-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,-33,-32,20,20,20,20,20,20,20,20,20,20,20,20,]),'continue':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,82,147,148,155,166,167,170,172,189,202,203,204,205,],[21,21,-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,-33,-32,21,21,21,21,21,21,21,21,21,21,21,21,]),'for':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,82,147,148,155,166,167,170,172,189,202,203,204,205,],[22,22,-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,-33,-32,22,22,22,22,22,22,22,22,22,22,22,22,]),'id':([0,2,3,7,8,14,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,46,47,49,52,54,55,68,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,147,148,154,155,156,157,161,163,166,167,168,170,172,189,194,202,203,204,205,],[23,23,-3,-7,-8,-14,50,67,69,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,67,67,-30,-31,67,67,67,-33,67,67,67,67,67,114,-32,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,23,23,114,23,67,67,67,67,23,23,187,23,23,23,67,23,23,23,23,]),'fn':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,82,147,148,155,166,167,170,172,189,202,203,204,205,],[24,24,-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,-33,-32,24,24,24,24,24,24,24,24,24,24,24,24,]),'return':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,82,147,148,155,166,167,170,172,189,202,203,204,205,],[25,25,-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,-33,-32,25,25,25,25,25,25,25,25,25,25,25,25,]),'let':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,43,52,82,147,148,155,166,167,170,172,189,202,203,204,205,],[26,26,-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,26,-33,-32,26,26,26,26,26,26,26,26,26,26,26,26,]),'$end':([1,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,82,],[0,-1,-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,-33,-32,]),'llave_Cierra':([3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,82,166,167,172,189,204,205,],[-3,-7,-8,-14,-2,-4,-5,-6,-9,-10,-11,-12,-13,-39,-46,-30,-31,-33,-32,181,182,190,199,206,207,]),'puntoYcoma':([4,5,6,9,10,11,12,13,15,16,20,21,25,44,45,51,53,56,57,58,59,60,61,62,63,64,65,66,67,69,73,75,77,97,98,99,109,111,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,141,142,143,144,145,149,151,165,175,176,177,179,180,181,182,190,191,192,193,195,199,200,201,206,207,],[28,29,30,31,32,33,34,35,36,37,41,42,52,-49,-50,82,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,-42,108,-23,-47,-62,-65,-90,-22,-48,-55,-56,-57,-58,-59,-60,-61,-63,-64,-66,-67,-68,-69,-70,-71,-91,-40,-43,-92,-93,-94,-95,168,-54,-51,-80,-81,-82,-41,-45,-38,-34,-16,-78,-79,-83,-35,-15,-44,-36,-37,-26,]),'punto':([17,67,],[38,100,]),'p_Abre':([18,19,22,23,50,67,70,132,133,134,135,136,137,],[39,40,43,46,81,46,105,156,157,158,159,160,161,]),'incremento':([23,187,],[44,44,]),'decremento':([23,187,],[45,45,]),'igual':([23,48,69,113,141,142,143,144,145,151,180,187,],[47,78,103,-55,163,-92,-93,-94,-95,-54,194,47,]),'c_Abre':([23,25,39,40,46,47,48,49,54,55,67,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,103,105,108,110,113,139,141,142,143,144,145,151,156,157,161,163,169,187,194,],[49,68,68,68,68,68,79,68,68,68,49,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,79,68,68,68,68,-55,68,164,-92,-93,-94,-95,-54,68,68,68,68,188,49,68,]),'resta':([25,39,40,46,47,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,105,108,109,110,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,139,140,149,150,151,156,157,161,162,163,173,174,175,176,177,178,179,191,192,193,194,200,],[54,54,54,54,54,54,84,-21,54,54,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,54,84,84,-23,84,84,54,54,84,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-62,-65,-90,84,54,54,54,-22,54,84,84,-55,-56,-57,-58,-59,-60,-61,84,84,-66,-67,-68,-69,-70,-71,-91,54,84,84,84,-54,54,54,54,84,54,84,84,-80,-81,-82,84,84,-78,-79,-83,54,84,]),'not':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'cadena':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'numero':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'true':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'false':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'null':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'log':([38,],[70,]),'p_Cierra':([44,45,46,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,74,75,76,77,81,97,98,99,102,109,111,113,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,142,143,144,145,146,150,151,158,159,160,162,169,171,173,174,175,176,177,178,183,184,185,186,191,192,193,198,],[-49,-50,75,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,106,107,109,-23,-24,-47,116,-62,-65,-90,-53,-22,-48,-55,153,-18,-56,-57,-58,-59,-60,-61,-63,-64,-66,-67,-68,-69,-70,-71,-91,-92,-93,-94,-95,165,-25,-54,175,176,177,-52,-19,-17,191,192,-80,-81,-82,193,197,-27,-28,-29,-78,-79,-83,-20,]),'suma':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[83,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,83,83,-23,83,83,83,-62,-65,-90,83,-22,83,83,-55,-56,-57,-58,-59,-60,-61,83,83,-66,-67,-68,-69,-70,-71,-91,83,83,83,-54,83,83,83,-80,-81,-82,83,83,-78,-79,-83,83,]),'multiplicacion':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[85,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,85,85,-23,85,85,85,-62,-65,-90,85,-22,85,85,-55,85,85,-58,-59,-60,-61,85,85,85,85,85,85,85,85,-91,85,85,85,-54,85,85,85,-80,-81,-82,85,85,-78,-79,-83,85,]),'division':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[86,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,86,86,-23,86,86,86,-62,-65,-90,86,-22,86,86,-55,86,86,-58,-59,-60,-61,86,86,86,86,86,86,86,86,-91,86,86,86,-54,86,86,86,-80,-81,-82,86,86,-78,-79,-83,86,]),'potencia':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[87,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,87,87,-23,87,87,87,-62,-65,-90,87,-22,87,87,-55,87,87,87,87,-60,87,87,87,87,87,87,87,87,87,-91,87,87,87,-54,87,87,87,-80,-81,-82,87,87,-78,-79,-83,87,]),'modulo':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[88,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,88,88,-23,88,88,88,-62,-65,-90,88,-22,88,88,-55,88,88,-58,-59,-60,-61,88,88,88,88,88,88,88,88,-91,88,88,88,-54,88,88,88,-80,-81,-82,88,88,-78,-79,-83,88,]),'and':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[89,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,89,89,-23,89,89,89,-62,-65,-90,89,-22,89,89,-55,-56,-57,-58,-59,-60,-61,-63,89,-66,-67,-68,-69,-70,-71,-91,89,89,89,-54,89,89,89,-80,-81,-82,89,89,-78,-79,-83,89,]),'or':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[90,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,90,90,-23,90,90,90,-62,-65,-90,90,-22,90,90,-55,-56,-57,-58,-59,-60,-61,-63,-64,-66,-67,-68,-69,-70,-71,-91,90,90,90,-54,90,90,90,-80,-81,-82,90,90,-78,-79,-83,90,]),'mayor':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[91,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,91,91,-23,91,91,91,-62,-65,-90,91,-22,91,91,-55,91,91,-58,-59,-60,-61,91,91,None,None,None,None,None,None,-91,91,91,91,-54,91,91,91,-80,-81,-82,91,91,-78,-79,-83,91,]),'mayorigual':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[92,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,92,92,-23,92,92,92,-62,-65,-90,92,-22,92,92,-55,92,92,-58,-59,-60,-61,92,92,None,None,None,None,None,None,-91,92,92,92,-54,92,92,92,-80,-81,-82,92,92,-78,-79,-83,92,]),'menor':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[93,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,93,93,-23,93,93,93,-62,-65,-90,93,-22,93,93,-55,93,93,-58,-59,-60,-61,93,93,None,None,None,None,None,None,-91,93,93,93,-54,93,93,93,-80,-81,-82,93,93,-78,-79,-83,93,]),'menorigual':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[94,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,94,94,-23,94,94,94,-62,-65,-90,94,-22,94,94,-55,94,94,-58,-59,-60,-61,94,94,None,None,None,None,None,None,-91,94,94,94,-54,94,94,94,-80,-81,-82,94,94,-78,-79,-83,94,]),'igualacion':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[95,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,95,95,-23,95,95,95,-62,-65,-90,95,-22,95,95,-55,95,95,-58,-59,-60,-61,95,95,None,None,None,None,None,None,-91,95,95,95,-54,95,95,95,-80,-81,-82,95,95,-78,-79,-83,95,]),'diferente':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,71,72,75,76,77,80,97,98,99,102,109,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,140,149,150,151,162,173,174,175,176,177,178,179,191,192,193,200,],[96,-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,96,96,-23,96,96,96,-62,-65,-90,96,-22,96,96,-55,96,96,-58,-59,-60,-61,96,96,None,None,None,None,None,None,-91,96,96,96,-54,96,96,96,-80,-81,-82,96,96,-78,-79,-83,96,]),'coma':([53,56,57,58,59,60,61,62,63,64,65,66,67,74,75,76,97,98,99,101,102,109,113,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,142,143,144,145,146,150,151,162,169,171,175,176,177,191,192,193,198,],[-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,110,-23,-24,-62,-65,-90,139,-53,-22,-55,154,-18,-56,-57,-58,-59,-60,-61,-63,-64,-66,-67,-68,-69,-70,-71,-91,-92,-93,-94,-95,139,-25,-54,-52,-19,-17,-80,-81,-82,-78,-79,-83,-20,]),'c_Cierra':([53,56,57,58,59,60,61,62,63,64,65,66,67,75,80,97,98,99,101,102,109,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,151,162,164,175,176,177,188,191,192,193,],[-21,-72,-73,-74,-75,-76,-77,-84,-85,-86,-87,-88,-89,-23,113,-62,-65,-90,138,-53,-22,151,-55,-56,-57,-58,-59,-60,-61,-63,-64,-66,-67,-68,-69,-70,-71,-91,-54,-52,180,-80,-81,-82,198,-78,-79,-83,]),'dosPuntos':([69,114,],[104,152,]),'toFixed':([100,],[132,]),'toExponential':([100,],[133,]),'toString':([100,],[134,]),'toLowerCase':([100,],[135,]),'toUpperCase':([100,],[136,]),'split':([100,],[137,]),'number':([104,152,],[142,142,]),'string':([104,152,],[143,143,]),'boolean':([104,152,],[144,144,]),'any':([104,152,],[145,145,]),'llave_Abre':([106,107,116,153,196,197,],[147,148,155,170,202,203,]),'else':([181,],[196,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'ENTRADAS':([0,147,148,155,170,202,203,],[2,166,167,172,189,204,205,]),'ENTRADA':([0,2,147,148,155,166,167,170,172,189,202,203,204,205,],[3,27,3,3,3,27,27,3,27,27,3,3,27,27,]),'IMPRIMIR':([0,2,147,148,155,166,167,170,172,189,202,203,204,205,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'IF':([0,2,147,148,155,166,167,170,172,189,196,202,203,204,205,],[5,5,5,5,5,5,5,5,5,5,201,5,5,5,5,]),'WHILE':([0,2,147,148,155,166,167,170,172,189,202,203,204,205,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BREAK':([0,2,147,148,155,166,167,170,172,189,202,203,204,205,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CONTINUE':([0,2,147,148,155,166,167,170,172,189,202,203,204,205,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FOR':([0,2,147,148,155,166,167,170,172,189,202,203,204,205,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INCREMENTO':([0,2,147,148,155,166,167,168,170,172,189,202,203,204,205,],[10,10,10,10,10,10,10,185,10,10,10,10,10,10,10,]),'DECREMENTO':([0,2,147,148,155,166,167,168,170,172,189,202,203,204,205,],[11,11,11,11,11,11,11,186,11,11,11,11,11,11,11,]),'FUNC':([0,2,147,148,155,166,167,170,172,189,202,203,204,205,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'LLAMADA_FUNCION':([0,2,25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,147,148,155,156,157,161,163,166,167,170,172,189,194,202,203,204,205,],[13,13,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,13,13,13,53,53,53,53,13,13,13,13,13,53,13,13,13,13,]),'RETURN':([0,2,147,148,155,166,167,170,172,189,202,203,204,205,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DECLARACION':([0,2,43,147,148,155,166,167,170,172,189,202,203,204,205,],[15,15,73,15,15,15,15,15,15,15,15,15,15,15,15,]),'ASIGNACION':([0,2,147,148,155,166,167,168,170,172,189,202,203,204,205,],[16,16,16,16,16,16,16,184,16,16,16,16,16,16,16,]),'LISTAINDICES':([23,67,187,],[48,99,48,]),'EXPRESION':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[51,71,72,76,77,80,97,98,102,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,140,102,149,150,162,173,174,178,179,200,]),'FUNCION_TOFIXED':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'FUNCION_TOEXPONENTIAL':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FUNCION_TOSTRING':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FUNCION_TOLOWERCASE':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'FUNCION_TOUPPERCASE':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'FUNCION_SPLIT':([25,39,40,46,47,49,54,55,68,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,105,108,110,139,156,157,161,163,194,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'PARAMETROS_LLAMA_FUNC':([46,],[74,]),'LISTAEXPRESIONES':([68,105,],[101,146,]),'PARAMETROS_DECLA_FUNC':([81,],[115,]),'PARAMETRO_DECLA_FUNC':([81,154,],[117,171,]),'TIPO':([104,152,],[141,169,]),'FORITERADOR':([168,],[183,]),'COMPLEMENTO_IF':([181,],[195,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> ENTRADAS','INICIO',1,'p_INICIO','parser.py',64),
  ('ENTRADAS -> ENTRADAS ENTRADA','ENTRADAS',2,'p_ENTRADAS_PARTE_1','parser.py',70),
  ('ENTRADAS -> ENTRADA','ENTRADAS',1,'p_ENTRADAS_PARTE_2','parser.py',77),
  ('ENTRADA -> IMPRIMIR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',83),
  ('ENTRADA -> IF puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',84),
  ('ENTRADA -> WHILE puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',85),
  ('ENTRADA -> BREAK','ENTRADA',1,'p_ENTRADA','parser.py',86),
  ('ENTRADA -> CONTINUE','ENTRADA',1,'p_ENTRADA','parser.py',87),
  ('ENTRADA -> FOR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',88),
  ('ENTRADA -> INCREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',89),
  ('ENTRADA -> DECREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',90),
  ('ENTRADA -> FUNC puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',91),
  ('ENTRADA -> LLAMADA_FUNCION puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',92),
  ('ENTRADA -> RETURN','ENTRADA',1,'p_ENTRADA','parser.py',93),
  ('FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',8,'p_FUNC_1','parser.py',111),
  ('FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',7,'p_FUNC_2','parser.py',118),
  ('PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',3,'p_PARAMETROS_DECLA_FUNC','parser.py',125),
  ('PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',1,'p_PARAMETROS_DECLA_FUNC','parser.py',126),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO','PARAMETRO_DECLA_FUNC',3,'p_PARAMETRO_DECLA_FUNC_1','parser.py',135),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra','PARAMETRO_DECLA_FUNC',5,'p_PARAMETRO_DECLA_FUNC_2','parser.py',141),
  ('EXPRESION -> LLAMADA_FUNCION','EXPRESION',1,'p_EXPRESION_LLAMA_FUNC','parser.py',148),
  ('LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra','LLAMADA_FUNCION',4,'p_LLAMADA_FUNCION_1','parser.py',155),
  ('LLAMADA_FUNCION -> id p_Abre p_Cierra','LLAMADA_FUNCION',3,'p_LLAMADA_FUNCION_2','parser.py',161),
  ('PARAMETROS_LLAMA_FUNC -> EXPRESION','PARAMETROS_LLAMA_FUNC',1,'p_PARAMETROS_LLAMA_FUNC','parser.py',167),
  ('PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION','PARAMETROS_LLAMA_FUNC',3,'p_PARAMETROS_LLAMA_FUNC','parser.py',168),
  ('FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',11,'p_FOR','parser.py',178),
  ('FORITERADOR -> ASIGNACION','FORITERADOR',1,'p_FORITERADOR','parser.py',184),
  ('FORITERADOR -> INCREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',185),
  ('FORITERADOR -> DECREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',186),
  ('BREAK -> break puntoYcoma','BREAK',2,'p_BREAK','parser.py',193),
  ('CONTINUE -> continue puntoYcoma','CONTINUE',2,'p_CONTINUE','parser.py',199),
  ('RETURN -> return EXPRESION puntoYcoma','RETURN',3,'p_RETURN_1','parser.py',205),
  ('RETURN -> return puntoYcoma','RETURN',2,'p_RETURN_2','parser.py',211),
  ('WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','WHILE',7,'p_WHILE','parser.py',220),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF','IF',8,'p_IF','parser.py',227),
  ('COMPLEMENTO_IF -> else IF','COMPLEMENTO_IF',2,'p_COMPLEMENTO_IF','parser.py',233),
  ('COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra','COMPLEMENTO_IF',4,'p_COMPLEMENTO_IF','parser.py',234),
  ('COMPLEMENTO_IF -> <empty>','COMPLEMENTO_IF',0,'p_COMPLEMENTO_IF','parser.py',235),
  ('ENTRADA -> DECLARACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Declaracion','parser.py',248),
  ('DECLARACION -> let id igual EXPRESION','DECLARACION',4,'p_DECLARACION_NoTipada','parser.py',254),
  ('DECLARACION -> let id dosPuntos TIPO igual EXPRESION','DECLARACION',6,'p_DECLARACION_Tipada','parser.py',261),
  ('DECLARACION -> let id','DECLARACION',2,'p_DECLARACION_SinExpresion_SinTipado','parser.py',267),
  ('DECLARACION -> let id dosPuntos TIPO','DECLARACION',4,'p_DECLARACION_SinExpresion_Tipado','parser.py',273),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION','DECLARACION',8,'p_DECLARACION_Tipada_VECTOR','parser.py',279),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra','DECLARACION',6,'p_DECLARACION_SinExpresion_Tipado_VECTOR','parser.py',285),
  ('ENTRADA -> ASIGNACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Asignacion','parser.py',294),
  ('ASIGNACION -> id igual EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',300),
  ('ASIGNACION -> id LISTAINDICES igual EXPRESION','ASIGNACION',4,'p_ASIGNACION_VEC','parser.py',306),
  ('INCREMENTO -> id incremento','INCREMENTO',2,'p_INCREMENTO','parser.py',314),
  ('DECREMENTO -> id decremento','DECREMENTO',2,'p_DECREMENTO','parser.py',320),
  ('IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra','IMPRIMIR',6,'p_IMPRIMIR_1','parser.py',327),
  ('LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION','LISTAEXPRESIONES',3,'p_LISTAEXPRESIONES_1','parser.py',333),
  ('LISTAEXPRESIONES -> EXPRESION','LISTAEXPRESIONES',1,'p_LISTAEXPRESIONES_2','parser.py',340),
  ('LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra','LISTAINDICES',4,'p_LISTAEXPRESIONES_Indices','parser.py',346),
  ('LISTAINDICES -> c_Abre EXPRESION c_Cierra','LISTAINDICES',3,'p_LISTAEXPRESIONES_Indices_2','parser.py',353),
  ('EXPRESION -> EXPRESION suma EXPRESION','EXPRESION',3,'p_EXPRESION_suma','parser.py',361),
  ('EXPRESION -> EXPRESION resta EXPRESION','EXPRESION',3,'p_EXPRESION_resta','parser.py',368),
  ('EXPRESION -> EXPRESION multiplicacion EXPRESION','EXPRESION',3,'p_EXPRESION_multiplicacion','parser.py',375),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_EXPRESION_division','parser.py',382),
  ('EXPRESION -> EXPRESION potencia EXPRESION','EXPRESION',3,'p_EXPRESION_potencia','parser.py',389),
  ('EXPRESION -> EXPRESION modulo EXPRESION','EXPRESION',3,'p_EXPRESION_modulo','parser.py',396),
  ('EXPRESION -> resta EXPRESION','EXPRESION',2,'p_EXPRESION_negativo','parser.py',403),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_EXPRESION_and','parser.py',412),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_EXPRESION_or','parser.py',419),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_EXPRESION_not','parser.py',426),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_EXPRESION_mayor','parser.py',435),
  ('EXPRESION -> EXPRESION mayorigual EXPRESION','EXPRESION',3,'p_EXPRESION_mayorigual','parser.py',442),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_EXPRESION_menor','parser.py',449),
  ('EXPRESION -> EXPRESION menorigual EXPRESION','EXPRESION',3,'p_EXPRESION_menorigual','parser.py',456),
  ('EXPRESION -> EXPRESION igualacion EXPRESION','EXPRESION',3,'p_EXPRESION_igualacion','parser.py',463),
  ('EXPRESION -> EXPRESION diferente EXPRESION','EXPRESION',3,'p_EXPRESION_diferente','parser.py',470),
  ('EXPRESION -> FUNCION_TOFIXED','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',479),
  ('EXPRESION -> FUNCION_TOEXPONENTIAL','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',480),
  ('EXPRESION -> FUNCION_TOSTRING','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',481),
  ('EXPRESION -> FUNCION_TOLOWERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',482),
  ('EXPRESION -> FUNCION_TOUPPERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',483),
  ('EXPRESION -> FUNCION_SPLIT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',484),
  ('FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra','FUNCION_TOFIXED',6,'p_FUNCION_TOFIXED','parser.py',490),
  ('FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra','FUNCION_TOEXPONENTIAL',6,'p_FUNCION_TOEXPONENTIAL','parser.py',497),
  ('FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra','FUNCION_TOSTRING',5,'p_FUNCION_TOSTRING','parser.py',504),
  ('FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra','FUNCION_TOLOWERCASE',5,'p_FUNCION_TOLOWERCASE','parser.py',511),
  ('FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra','FUNCION_TOUPPERCASE',5,'p_FUNCION_TOUPPERCASE','parser.py',518),
  ('FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra','FUNCION_SPLIT',6,'p_FUNCION_SPLIT','parser.py',525),
  ('EXPRESION -> cadena','EXPRESION',1,'p_EXPRESION_cadena','parser.py',535),
  ('EXPRESION -> numero','EXPRESION',1,'p_EXPRESION_numero','parser.py',542),
  ('EXPRESION -> true','EXPRESION',1,'p_EXPRESION_booleano','parser.py',549),
  ('EXPRESION -> false','EXPRESION',1,'p_EXPRESION_booleano','parser.py',550),
  ('EXPRESION -> null','EXPRESION',1,'p_EXPRESION_null','parser.py',557),
  ('EXPRESION -> id','EXPRESION',1,'p_EXPRESION_Acceso','parser.py',564),
  ('EXPRESION -> id LISTAINDICES','EXPRESION',2,'p_EXPRESION_Acceso_Vector','parser.py',571),
  ('EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra','EXPRESION',3,'p_EXPRESION_Vector','parser.py',578),
  ('TIPO -> number','TIPO',1,'p_TIPO_NUMBER','parser.py',586),
  ('TIPO -> string','TIPO',1,'p_TIPO_STRING','parser.py',592),
  ('TIPO -> boolean','TIPO',1,'p_TIPO_BOOLEAN','parser.py',598),
  ('TIPO -> any','TIPO',1,'p_TIPO_ANY','parser.py',604),
]
