
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandleftsumarestanonassocmenormayormenorigualmayorigualigualaciondiferenteleftmultiplicaciondivisionmoduloleftpotenciarightnotlefturestaleftuparand any boolean break c_Abre c_Cierra cadena coma concat console continue decremento diferente diferenteNormal division dosPuntos else false fn for id if igual igualacion igualacionNormal incremento interface let llave_Abre llave_Cierra log mayor mayorigual menor menorigual modulo multiplicacion not null number numero of or p_Abre p_Cierra potencia punto puntoYcoma resta return split string stringMayus suma toExponential toFixed toLowerCase toString toUpperCase true typeof while\n    INICIO : ENTRADAS\n            | \n    \n    ENTRADAS : ENTRADAS ENTRADA\n    \n    ENTRADAS : ENTRADA\n    \n    ENTRADA : IMPRIMIR puntoYcoma\n            |   IF puntoYcoma\n            |   WHILE puntoYcoma\n            |   BREAK\n            |   CONTINUE\n            |   FOR puntoYcoma\n            |   INCREMENTO puntoYcoma\n            |   DECREMENTO puntoYcoma\n            |   FUNC puntoYcoma\n            |   LLAMADA_FUNCION puntoYcoma\n            |   RETURN\n    \n   FUNC : fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra\n   \n    FUNC : fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    PARAMETROS_DECLA_FUNC : PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC\n                            | PARAMETRO_DECLA_FUNC\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO c_Abre c_Cierra\n    \n    EXPRESION : LLAMADA_FUNCION\n    \n    LLAMADA_FUNCION : id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra\n    \n    LLAMADA_FUNCION : id p_Abre p_Cierra\n    \n    PARAMETROS_LLAMA_FUNC : EXPRESION\n                          | PARAMETROS_LLAMA_FUNC coma EXPRESION\n    \n    FOR : for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FOR : for p_Abre DECLARACION of EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FORITERADOR : ASIGNACION\n                | INCREMENTO\n                | DECREMENTO\n    \n    BREAK : break puntoYcoma\n    \n    CONTINUE : continue puntoYcoma\n    \n    RETURN : return EXPRESION puntoYcoma\n    \n    RETURN : return puntoYcoma\n    \n    WHILE : while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF\n    \n    COMPLEMENTO_IF : else IF\n                    | else llave_Abre ENTRADAS llave_Cierra\n                    | \n    \n    ENTRADA : DECLARACION puntoYcoma\n    \n    DECLARACION : let id igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO igual EXPRESION\n    \n    DECLARACION : let id \n    \n    DECLARACION : let id dosPuntos TIPO\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra\n    \n    ENTRADA : ASIGNACION puntoYcoma\n    \n    ASIGNACION : id igual EXPRESION\n    \n    ASIGNACION : id LISTAINDICES igual EXPRESION\n    \n    INCREMENTO : id incremento \n    \n    DECREMENTO : id decremento\n    \n    IMPRIMIR : console punto log p_Abre LISTAEXPRESIONES p_Cierra\n    \n    LISTAEXPRESIONES :  LISTAEXPRESIONES coma EXPRESION\n    \n    LISTAEXPRESIONES : EXPRESION\n    \n    LISTAINDICES :  LISTAINDICES c_Abre EXPRESION c_Cierra\n    \n    LISTAINDICES : c_Abre EXPRESION c_Cierra\n    \n    EXPRESION : EXPRESION suma EXPRESION\n    \n    EXPRESION : EXPRESION resta EXPRESION\n    \n    EXPRESION : EXPRESION multiplicacion EXPRESION\n    \n    EXPRESION : EXPRESION division EXPRESION\n    \n    EXPRESION : EXPRESION potencia EXPRESION\n    \n    EXPRESION : EXPRESION modulo EXPRESION\n    \n    EXPRESION : resta EXPRESION %prec uresta\n    \n    EXPRESION : EXPRESION and EXPRESION\n    \n    EXPRESION : EXPRESION or EXPRESION\n    \n    EXPRESION : not EXPRESION\n    \n    EXPRESION : EXPRESION mayor EXPRESION\n    \n    EXPRESION : EXPRESION mayorigual EXPRESION\n    \n    EXPRESION : EXPRESION menor EXPRESION\n    \n    EXPRESION : EXPRESION menorigual EXPRESION\n    \n    EXPRESION : EXPRESION igualacion EXPRESION\n    \n    EXPRESION : EXPRESION diferente EXPRESION\n    \n    EXPRESION : EXPRESION igualacionNormal EXPRESION\n    \n    EXPRESION : EXPRESION diferenteNormal EXPRESION\n    \n    EXPRESION : FUNCION_TOFIXED\n            | FUNCION_TOEXPONENTIAL\n            | FUNCION_TOSTRING\n            | FUNCION_TOLOWERCASE\n            | FUNCION_TOUPPERCASE\n            | FUNCION_SPLIT\n            | FUNCION_CONCAT\n            | FUNCION_TYPEOF\n    \n    FUNCION_TOFIXED : id punto toFixed p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOEXPONENTIAL : id punto toExponential p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOSTRING : id punto toString p_Abre p_Cierra\n    \n    FUNCION_TOLOWERCASE : id punto toLowerCase p_Abre p_Cierra\n    \n    FUNCION_TOUPPERCASE : id punto toUpperCase p_Abre p_Cierra\n    \n    FUNCION_SPLIT : id punto split p_Abre EXPRESION p_Cierra\n    \n    FUNCION_CONCAT : id punto concat p_Abre LISTAEXPRESIONES p_Cierra\n    \n    FUNCION_TYPEOF : typeof p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : cadena\n    \n    EXPRESION : numero\n    \n    EXPRESION : true\n                | false\n    \n    EXPRESION : null\n    \n    EXPRESION : id\n    \n    EXPRESION : id LISTAINDICES\n    \n    EXPRESION : c_Abre LISTAEXPRESIONES c_Cierra\n    \n    EXPRESION : TIPO p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : p_Abre EXPRESION p_Cierra %prec upar\n    \n    TIPO : number\n    \n    TIPO : string\n    \n    TIPO : stringMayus\n    \n    TIPO : boolean\n    \n    TIPO : any\n    '
    
_lr_action_items = {'$end':([0,1,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,92,],[-2,0,-1,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,]),'console':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,92,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[17,17,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'if':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,92,165,166,174,188,189,193,195,212,214,222,224,229,230,232,233,],[18,18,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'while':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,92,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[19,19,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'break':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,92,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[20,20,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'continue':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,92,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[21,21,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'for':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,92,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[22,22,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'id':([0,2,3,7,8,14,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,46,47,49,52,54,55,70,72,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,165,166,173,174,175,176,180,181,185,188,189,190,193,195,212,214,220,224,229,230,232,233,],[23,23,-4,-8,-9,-15,50,69,79,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,69,69,-32,-33,69,69,69,-35,69,69,69,69,69,69,130,-34,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,23,23,130,23,69,69,69,69,69,23,23,211,23,23,23,23,69,23,23,23,23,23,]),'fn':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,92,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[24,24,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'return':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,92,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[25,25,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'let':([0,2,3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,43,52,92,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[26,26,-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,26,-35,-34,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'llave_Cierra':([3,7,8,14,27,28,29,30,31,32,33,34,35,36,37,41,42,52,92,188,189,195,214,224,232,233,],[-4,-8,-9,-15,-3,-5,-6,-7,-10,-11,-12,-13,-14,-41,-48,-32,-33,-35,-34,205,206,215,226,231,234,235,]),'puntoYcoma':([4,5,6,9,10,11,12,13,15,16,20,21,25,44,45,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,78,79,83,85,87,109,110,111,125,127,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,160,162,163,167,170,183,184,187,198,199,200,203,204,205,206,215,216,217,218,219,221,226,227,228,231,234,235,],[28,29,30,31,32,33,34,35,36,37,41,42,52,-51,-52,92,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-102,-103,-104,-105,-106,-44,123,-24,-49,-64,-67,-98,-23,-50,-57,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,-99,-101,-42,-45,190,-56,-100,-91,-53,-86,-87,-88,-43,-47,-40,-36,-17,-84,-85,-89,-90,-37,-16,-46,-38,-28,-39,-27,]),'punto':([17,69,],[38,112,]),'p_Abre':([18,19,22,23,25,39,40,46,47,49,50,54,55,69,70,71,72,73,74,75,76,77,78,80,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,150,151,152,153,154,155,156,158,175,176,180,181,185,220,],[39,40,43,46,72,72,72,72,72,72,91,72,72,46,72,115,72,117,-102,-103,-104,-105,-106,120,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,175,176,177,178,179,180,181,72,72,72,72,72,72,72,]),'incremento':([23,211,],[44,44,]),'decremento':([23,211,],[45,45,]),'igual':([23,48,74,75,76,77,78,79,129,163,170,204,211,],[47,88,-102,-103,-104,-105,-106,118,-57,185,-56,220,47,]),'c_Abre':([23,25,39,40,46,47,48,49,54,55,69,70,72,74,75,76,77,78,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,115,117,118,120,123,124,126,129,158,163,170,175,176,180,181,185,192,211,220,],[49,70,70,70,70,70,89,70,70,70,49,70,70,-102,-103,-104,-105,-106,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,89,70,70,70,70,70,70,70,-57,70,186,-56,70,70,70,70,70,213,49,70,]),'resta':([25,39,40,46,47,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,81,82,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,114,115,116,117,118,120,123,124,125,126,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,158,159,160,161,162,167,168,169,170,175,176,180,181,182,183,184,185,196,197,198,199,200,201,203,216,217,218,219,220,227,],[54,54,54,54,54,54,94,-22,54,54,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,54,54,94,94,-24,94,94,54,54,94,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-64,-67,-98,94,54,94,54,54,54,54,54,-23,54,94,94,-57,-58,-59,-60,-61,-62,-63,94,94,-68,-69,-70,-71,-72,-73,94,94,-99,54,94,-101,94,94,94,94,94,-56,54,54,54,54,94,-100,-91,54,94,94,-86,-87,-88,94,94,-84,-85,-89,-90,54,94,]),'not':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'cadena':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'numero':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'true':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'false':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'null':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'typeof':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'number':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,119,120,123,124,126,158,171,175,176,180,181,185,220,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'string':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,119,120,123,124,126,158,171,175,176,180,181,185,220,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'stringMayus':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,119,120,123,124,126,158,171,175,176,180,181,185,220,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'boolean':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,119,120,123,124,126,158,171,175,176,180,181,185,220,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'any':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,119,120,123,124,126,158,171,175,176,180,181,185,220,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'log':([38,],[80,]),'p_Cierra':([44,45,46,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,78,81,82,84,85,86,87,91,109,110,111,114,116,125,127,129,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,164,168,169,170,177,178,179,182,183,184,192,194,196,197,198,199,200,201,202,207,208,209,210,216,217,218,219,225,],[-51,-52,85,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-102,-103,-104,-105,-106,121,122,125,-24,-25,-49,132,-64,-67,-98,-55,160,-23,-50,-57,172,-19,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,-99,183,-101,184,187,191,-26,-56,198,199,200,-54,-100,-91,-20,-18,216,217,-86,-87,-88,218,219,223,-29,-30,-31,-84,-85,-89,-90,-21,]),'suma':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[93,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,93,93,-24,93,93,93,-64,-67,-98,93,93,-23,93,93,-57,-58,-59,-60,-61,-62,-63,93,93,-68,-69,-70,-71,-72,-73,93,93,-99,93,-101,93,93,93,93,93,-56,93,-100,-91,93,93,-86,-87,-88,93,93,-84,-85,-89,-90,93,]),'multiplicacion':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[95,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,95,95,-24,95,95,95,-64,-67,-98,95,95,-23,95,95,-57,95,95,-60,-61,-62,-63,95,95,95,95,95,95,95,95,95,95,-99,95,-101,95,95,95,95,95,-56,95,-100,-91,95,95,-86,-87,-88,95,95,-84,-85,-89,-90,95,]),'division':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[96,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,96,96,-24,96,96,96,-64,-67,-98,96,96,-23,96,96,-57,96,96,-60,-61,-62,-63,96,96,96,96,96,96,96,96,96,96,-99,96,-101,96,96,96,96,96,-56,96,-100,-91,96,96,-86,-87,-88,96,96,-84,-85,-89,-90,96,]),'potencia':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[97,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,97,97,-24,97,97,97,-64,-67,-98,97,97,-23,97,97,-57,97,97,97,97,-62,97,97,97,97,97,97,97,97,97,97,97,-99,97,-101,97,97,97,97,97,-56,97,-100,-91,97,97,-86,-87,-88,97,97,-84,-85,-89,-90,97,]),'modulo':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[98,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,98,98,-24,98,98,98,-64,-67,-98,98,98,-23,98,98,-57,98,98,-60,-61,-62,-63,98,98,98,98,98,98,98,98,98,98,-99,98,-101,98,98,98,98,98,-56,98,-100,-91,98,98,-86,-87,-88,98,98,-84,-85,-89,-90,98,]),'and':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[99,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,99,99,-24,99,99,99,-64,-67,-98,99,99,-23,99,99,-57,-58,-59,-60,-61,-62,-63,-65,99,-68,-69,-70,-71,-72,-73,99,99,-99,99,-101,99,99,99,99,99,-56,99,-100,-91,99,99,-86,-87,-88,99,99,-84,-85,-89,-90,99,]),'or':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[100,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,100,100,-24,100,100,100,-64,-67,-98,100,100,-23,100,100,-57,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,100,100,-99,100,-101,100,100,100,100,100,-56,100,-100,-91,100,100,-86,-87,-88,100,100,-84,-85,-89,-90,100,]),'mayor':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[101,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,101,101,-24,101,101,101,-64,-67,-98,101,101,-23,101,101,-57,101,101,-60,-61,-62,-63,101,101,None,None,None,None,None,None,101,101,-99,101,-101,101,101,101,101,101,-56,101,-100,-91,101,101,-86,-87,-88,101,101,-84,-85,-89,-90,101,]),'mayorigual':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[102,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,102,102,-24,102,102,102,-64,-67,-98,102,102,-23,102,102,-57,102,102,-60,-61,-62,-63,102,102,None,None,None,None,None,None,102,102,-99,102,-101,102,102,102,102,102,-56,102,-100,-91,102,102,-86,-87,-88,102,102,-84,-85,-89,-90,102,]),'menor':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[103,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,103,103,-24,103,103,103,-64,-67,-98,103,103,-23,103,103,-57,103,103,-60,-61,-62,-63,103,103,None,None,None,None,None,None,103,103,-99,103,-101,103,103,103,103,103,-56,103,-100,-91,103,103,-86,-87,-88,103,103,-84,-85,-89,-90,103,]),'menorigual':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[104,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,104,104,-24,104,104,104,-64,-67,-98,104,104,-23,104,104,-57,104,104,-60,-61,-62,-63,104,104,None,None,None,None,None,None,104,104,-99,104,-101,104,104,104,104,104,-56,104,-100,-91,104,104,-86,-87,-88,104,104,-84,-85,-89,-90,104,]),'igualacion':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[105,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,105,105,-24,105,105,105,-64,-67,-98,105,105,-23,105,105,-57,105,105,-60,-61,-62,-63,105,105,None,None,None,None,None,None,105,105,-99,105,-101,105,105,105,105,105,-56,105,-100,-91,105,105,-86,-87,-88,105,105,-84,-85,-89,-90,105,]),'diferente':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[106,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,106,106,-24,106,106,106,-64,-67,-98,106,106,-23,106,106,-57,106,106,-60,-61,-62,-63,106,106,None,None,None,None,None,None,106,106,-99,106,-101,106,106,106,106,106,-56,106,-100,-91,106,106,-86,-87,-88,106,106,-84,-85,-89,-90,106,]),'igualacionNormal':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[107,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,107,107,-24,107,107,107,-64,-67,-98,107,107,-23,107,107,-57,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,107,107,-99,107,-101,107,107,107,107,107,-56,107,-100,-91,107,107,-86,-87,-88,107,107,-84,-85,-89,-90,107,]),'diferenteNormal':([51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,85,86,87,90,109,110,111,114,116,125,127,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,159,160,161,162,167,168,169,170,182,183,184,196,197,198,199,200,201,203,216,217,218,219,227,],[108,-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,108,108,-24,108,108,108,-64,-67,-98,108,108,-23,108,108,-57,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,108,108,-99,108,-101,108,108,108,108,108,-56,108,-100,-91,108,108,-86,-87,-88,108,108,-84,-85,-89,-90,108,]),'coma':([53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,78,84,85,86,109,110,111,113,114,125,129,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,160,164,169,170,182,183,184,192,194,198,199,200,202,216,217,218,219,225,],[-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-102,-103,-104,-105,-106,126,-24,-25,-64,-67,-98,158,-55,-23,-57,173,-19,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,-99,-101,158,-26,-56,-54,-100,-91,-20,-18,-86,-87,-88,158,-84,-85,-89,-90,-21,]),'c_Cierra':([53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,85,90,109,110,111,113,114,125,128,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,160,170,182,183,184,186,198,199,200,213,216,217,218,219,],[-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-24,129,-64,-67,-98,157,-55,-23,170,-57,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,-99,-101,-56,-54,-100,-91,204,-86,-87,-88,225,-84,-85,-89,-90,]),'of':([53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,76,77,78,79,83,85,109,110,111,125,129,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,157,160,162,163,170,183,184,198,199,200,203,204,216,217,218,219,227,],[-22,-76,-77,-78,-79,-80,-81,-82,-83,-92,-93,-94,-95,-96,-97,-102,-103,-104,-105,-106,-44,124,-24,-64,-67,-98,-23,-57,-58,-59,-60,-61,-62,-63,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,-99,-101,-42,-45,-56,-100,-91,-86,-87,-88,-43,-47,-84,-85,-89,-90,-46,]),'dosPuntos':([79,130,],[119,171,]),'toFixed':([112,],[150,]),'toExponential':([112,],[151,]),'toString':([112,],[152,]),'toLowerCase':([112,],[153,]),'toUpperCase':([112,],[154,]),'split':([112,],[155,]),'concat':([112,],[156,]),'llave_Abre':([121,122,132,172,191,222,223,],[165,166,174,193,212,229,230,]),'else':([205,],[222,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'ENTRADAS':([0,165,166,174,193,212,229,230,],[2,188,189,195,214,224,232,233,]),'ENTRADA':([0,2,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[3,27,3,3,3,27,27,3,27,3,27,27,3,3,27,27,]),'IMPRIMIR':([0,2,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'IF':([0,2,165,166,174,188,189,193,195,212,214,222,224,229,230,232,233,],[5,5,5,5,5,5,5,5,5,5,5,228,5,5,5,5,5,]),'WHILE':([0,2,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BREAK':([0,2,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CONTINUE':([0,2,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FOR':([0,2,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INCREMENTO':([0,2,165,166,174,188,189,190,193,195,212,214,224,229,230,232,233,],[10,10,10,10,10,10,10,209,10,10,10,10,10,10,10,10,10,]),'DECREMENTO':([0,2,165,166,174,188,189,190,193,195,212,214,224,229,230,232,233,],[11,11,11,11,11,11,11,210,11,11,11,11,11,11,11,11,11,]),'FUNC':([0,2,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'LLAMADA_FUNCION':([0,2,25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,165,166,174,175,176,180,181,185,188,189,193,195,212,214,220,224,229,230,232,233,],[13,13,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,13,13,13,53,53,53,53,53,13,13,13,13,13,13,53,13,13,13,13,13,]),'RETURN':([0,2,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DECLARACION':([0,2,43,165,166,174,188,189,193,195,212,214,224,229,230,232,233,],[15,15,83,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'ASIGNACION':([0,2,165,166,174,188,189,190,193,195,212,214,224,229,230,232,233,],[16,16,16,16,16,16,16,208,16,16,16,16,16,16,16,16,16,]),'LISTAINDICES':([23,69,211,],[48,111,48,]),'EXPRESION':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[51,81,82,86,87,90,109,110,114,116,127,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,159,161,162,114,167,168,169,182,196,197,201,114,203,227,]),'FUNCION_TOFIXED':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'FUNCION_TOEXPONENTIAL':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FUNCION_TOSTRING':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FUNCION_TOLOWERCASE':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'FUNCION_TOUPPERCASE':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'FUNCION_SPLIT':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FUNCION_CONCAT':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'FUNCION_TYPEOF':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,120,123,124,126,158,175,176,180,181,185,220,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'TIPO':([25,39,40,46,47,49,54,55,70,72,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,117,118,119,120,123,124,126,158,171,175,176,180,181,185,220,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,163,71,71,71,71,71,192,71,71,71,71,71,71,]),'PARAMETROS_LLAMA_FUNC':([46,],[84,]),'LISTAEXPRESIONES':([70,120,181,],[113,164,202,]),'PARAMETROS_DECLA_FUNC':([91,],[131,]),'PARAMETRO_DECLA_FUNC':([91,173,],[133,194,]),'FORITERADOR':([190,],[207,]),'COMPLEMENTO_IF':([205,],[221,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> ENTRADAS','INICIO',1,'p_INICIO','parser.py',69),
  ('INICIO -> <empty>','INICIO',0,'p_INICIO','parser.py',70),
  ('ENTRADAS -> ENTRADAS ENTRADA','ENTRADAS',2,'p_ENTRADAS_PARTE_1','parser.py',79),
  ('ENTRADAS -> ENTRADA','ENTRADAS',1,'p_ENTRADAS_PARTE_2','parser.py',86),
  ('ENTRADA -> IMPRIMIR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',92),
  ('ENTRADA -> IF puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',93),
  ('ENTRADA -> WHILE puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',94),
  ('ENTRADA -> BREAK','ENTRADA',1,'p_ENTRADA','parser.py',95),
  ('ENTRADA -> CONTINUE','ENTRADA',1,'p_ENTRADA','parser.py',96),
  ('ENTRADA -> FOR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',97),
  ('ENTRADA -> INCREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',98),
  ('ENTRADA -> DECREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',99),
  ('ENTRADA -> FUNC puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',100),
  ('ENTRADA -> LLAMADA_FUNCION puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',101),
  ('ENTRADA -> RETURN','ENTRADA',1,'p_ENTRADA','parser.py',102),
  ('FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',8,'p_FUNC_1','parser.py',120),
  ('FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',7,'p_FUNC_2','parser.py',127),
  ('PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',3,'p_PARAMETROS_DECLA_FUNC','parser.py',134),
  ('PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',1,'p_PARAMETROS_DECLA_FUNC','parser.py',135),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO','PARAMETRO_DECLA_FUNC',3,'p_PARAMETRO_DECLA_FUNC_1','parser.py',145),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra','PARAMETRO_DECLA_FUNC',5,'p_PARAMETRO_DECLA_FUNC_2','parser.py',151),
  ('EXPRESION -> LLAMADA_FUNCION','EXPRESION',1,'p_EXPRESION_LLAMA_FUNC','parser.py',160),
  ('LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra','LLAMADA_FUNCION',4,'p_LLAMADA_FUNCION_1','parser.py',167),
  ('LLAMADA_FUNCION -> id p_Abre p_Cierra','LLAMADA_FUNCION',3,'p_LLAMADA_FUNCION_2','parser.py',173),
  ('PARAMETROS_LLAMA_FUNC -> EXPRESION','PARAMETROS_LLAMA_FUNC',1,'p_PARAMETROS_LLAMA_FUNC','parser.py',179),
  ('PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION','PARAMETROS_LLAMA_FUNC',3,'p_PARAMETROS_LLAMA_FUNC','parser.py',180),
  ('FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',11,'p_FOR','parser.py',191),
  ('FOR -> for p_Abre DECLARACION of EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',9,'p_FOR_Vector_Cadena','parser.py',197),
  ('FORITERADOR -> ASIGNACION','FORITERADOR',1,'p_FORITERADOR','parser.py',203),
  ('FORITERADOR -> INCREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',204),
  ('FORITERADOR -> DECREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',205),
  ('BREAK -> break puntoYcoma','BREAK',2,'p_BREAK','parser.py',212),
  ('CONTINUE -> continue puntoYcoma','CONTINUE',2,'p_CONTINUE','parser.py',218),
  ('RETURN -> return EXPRESION puntoYcoma','RETURN',3,'p_RETURN_1','parser.py',224),
  ('RETURN -> return puntoYcoma','RETURN',2,'p_RETURN_2','parser.py',230),
  ('WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','WHILE',7,'p_WHILE','parser.py',239),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF','IF',8,'p_IF','parser.py',246),
  ('COMPLEMENTO_IF -> else IF','COMPLEMENTO_IF',2,'p_COMPLEMENTO_IF','parser.py',252),
  ('COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra','COMPLEMENTO_IF',4,'p_COMPLEMENTO_IF','parser.py',253),
  ('COMPLEMENTO_IF -> <empty>','COMPLEMENTO_IF',0,'p_COMPLEMENTO_IF','parser.py',254),
  ('ENTRADA -> DECLARACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Declaracion','parser.py',267),
  ('DECLARACION -> let id igual EXPRESION','DECLARACION',4,'p_DECLARACION_NoTipada','parser.py',273),
  ('DECLARACION -> let id dosPuntos TIPO igual EXPRESION','DECLARACION',6,'p_DECLARACION_Tipada','parser.py',280),
  ('DECLARACION -> let id','DECLARACION',2,'p_DECLARACION_SinExpresion_SinTipado','parser.py',286),
  ('DECLARACION -> let id dosPuntos TIPO','DECLARACION',4,'p_DECLARACION_SinExpresion_Tipado','parser.py',292),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION','DECLARACION',8,'p_DECLARACION_Tipada_VECTOR','parser.py',298),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra','DECLARACION',6,'p_DECLARACION_SinExpresion_Tipado_VECTOR','parser.py',304),
  ('ENTRADA -> ASIGNACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Asignacion','parser.py',313),
  ('ASIGNACION -> id igual EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',319),
  ('ASIGNACION -> id LISTAINDICES igual EXPRESION','ASIGNACION',4,'p_ASIGNACION_VEC','parser.py',325),
  ('INCREMENTO -> id incremento','INCREMENTO',2,'p_INCREMENTO','parser.py',333),
  ('DECREMENTO -> id decremento','DECREMENTO',2,'p_DECREMENTO','parser.py',339),
  ('IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra','IMPRIMIR',6,'p_IMPRIMIR_1','parser.py',346),
  ('LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION','LISTAEXPRESIONES',3,'p_LISTAEXPRESIONES_1','parser.py',352),
  ('LISTAEXPRESIONES -> EXPRESION','LISTAEXPRESIONES',1,'p_LISTAEXPRESIONES_2','parser.py',359),
  ('LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra','LISTAINDICES',4,'p_LISTAEXPRESIONES_Indices','parser.py',365),
  ('LISTAINDICES -> c_Abre EXPRESION c_Cierra','LISTAINDICES',3,'p_LISTAEXPRESIONES_Indices_2','parser.py',372),
  ('EXPRESION -> EXPRESION suma EXPRESION','EXPRESION',3,'p_EXPRESION_suma','parser.py',380),
  ('EXPRESION -> EXPRESION resta EXPRESION','EXPRESION',3,'p_EXPRESION_resta','parser.py',387),
  ('EXPRESION -> EXPRESION multiplicacion EXPRESION','EXPRESION',3,'p_EXPRESION_multiplicacion','parser.py',394),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_EXPRESION_division','parser.py',401),
  ('EXPRESION -> EXPRESION potencia EXPRESION','EXPRESION',3,'p_EXPRESION_potencia','parser.py',408),
  ('EXPRESION -> EXPRESION modulo EXPRESION','EXPRESION',3,'p_EXPRESION_modulo','parser.py',415),
  ('EXPRESION -> resta EXPRESION','EXPRESION',2,'p_EXPRESION_negativo','parser.py',422),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_EXPRESION_and','parser.py',431),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_EXPRESION_or','parser.py',438),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_EXPRESION_not','parser.py',445),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_EXPRESION_mayor','parser.py',454),
  ('EXPRESION -> EXPRESION mayorigual EXPRESION','EXPRESION',3,'p_EXPRESION_mayorigual','parser.py',461),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_EXPRESION_menor','parser.py',468),
  ('EXPRESION -> EXPRESION menorigual EXPRESION','EXPRESION',3,'p_EXPRESION_menorigual','parser.py',475),
  ('EXPRESION -> EXPRESION igualacion EXPRESION','EXPRESION',3,'p_EXPRESION_igualacion','parser.py',482),
  ('EXPRESION -> EXPRESION diferente EXPRESION','EXPRESION',3,'p_EXPRESION_diferente','parser.py',489),
  ('EXPRESION -> EXPRESION igualacionNormal EXPRESION','EXPRESION',3,'p_EXPRESION_igualacionNormal','parser.py',496),
  ('EXPRESION -> EXPRESION diferenteNormal EXPRESION','EXPRESION',3,'p_EXPRESION_diferenteNormal','parser.py',503),
  ('EXPRESION -> FUNCION_TOFIXED','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',512),
  ('EXPRESION -> FUNCION_TOEXPONENTIAL','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',513),
  ('EXPRESION -> FUNCION_TOSTRING','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',514),
  ('EXPRESION -> FUNCION_TOLOWERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',515),
  ('EXPRESION -> FUNCION_TOUPPERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',516),
  ('EXPRESION -> FUNCION_SPLIT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',517),
  ('EXPRESION -> FUNCION_CONCAT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',518),
  ('EXPRESION -> FUNCION_TYPEOF','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',519),
  ('FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra','FUNCION_TOFIXED',6,'p_FUNCION_TOFIXED','parser.py',525),
  ('FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra','FUNCION_TOEXPONENTIAL',6,'p_FUNCION_TOEXPONENTIAL','parser.py',532),
  ('FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra','FUNCION_TOSTRING',5,'p_FUNCION_TOSTRING','parser.py',539),
  ('FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra','FUNCION_TOLOWERCASE',5,'p_FUNCION_TOLOWERCASE','parser.py',546),
  ('FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra','FUNCION_TOUPPERCASE',5,'p_FUNCION_TOUPPERCASE','parser.py',553),
  ('FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra','FUNCION_SPLIT',6,'p_FUNCION_SPLIT','parser.py',560),
  ('FUNCION_CONCAT -> id punto concat p_Abre LISTAEXPRESIONES p_Cierra','FUNCION_CONCAT',6,'p_FUNCION_CONCAT','parser.py',567),
  ('FUNCION_TYPEOF -> typeof p_Abre EXPRESION p_Cierra','FUNCION_TYPEOF',4,'p_FUNCION_TYPEOF','parser.py',574),
  ('EXPRESION -> cadena','EXPRESION',1,'p_EXPRESION_cadena','parser.py',582),
  ('EXPRESION -> numero','EXPRESION',1,'p_EXPRESION_numero','parser.py',589),
  ('EXPRESION -> true','EXPRESION',1,'p_EXPRESION_booleano','parser.py',596),
  ('EXPRESION -> false','EXPRESION',1,'p_EXPRESION_booleano','parser.py',597),
  ('EXPRESION -> null','EXPRESION',1,'p_EXPRESION_null','parser.py',604),
  ('EXPRESION -> id','EXPRESION',1,'p_EXPRESION_Acceso','parser.py',611),
  ('EXPRESION -> id LISTAINDICES','EXPRESION',2,'p_EXPRESION_Acceso_Vector','parser.py',618),
  ('EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra','EXPRESION',3,'p_EXPRESION_Vector','parser.py',625),
  ('EXPRESION -> TIPO p_Abre EXPRESION p_Cierra','EXPRESION',4,'p_EXPRESION_Casteo','parser.py',632),
  ('EXPRESION -> p_Abre EXPRESION p_Cierra','EXPRESION',3,'p_EXPRESION_Parentesis','parser.py',639),
  ('TIPO -> number','TIPO',1,'p_TIPO_NUMBER','parser.py',646),
  ('TIPO -> string','TIPO',1,'p_TIPO_STRING','parser.py',652),
  ('TIPO -> stringMayus','TIPO',1,'p_TIPO_STRINGMayus','parser.py',658),
  ('TIPO -> boolean','TIPO',1,'p_TIPO_BOOLEAN','parser.py',664),
  ('TIPO -> any','TIPO',1,'p_TIPO_ANY','parser.py',670),
]
