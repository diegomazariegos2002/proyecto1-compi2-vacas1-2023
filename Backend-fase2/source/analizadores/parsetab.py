
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandleftmenormayormenorigualmayorigualigualacionigualacionNormaldiferentediferenteNormalleftsumarestaleftmultiplicaciondivisionmoduloleftpotenciarightnotlefturestaleftp_Abreand any boolean break c_Abre c_Cierra cadena coma concat console continue decremento diferente diferenteNormal division dosPuntos else false fn for id if igual igualacion igualacionNormal incremento interface length let llave_Abre llave_Cierra log mayor mayorigual menor menorigual modulo multiplicacion not null number numero of or p_Abre p_Cierra potencia punto puntoYcoma resta return split string stringMayus suma toExponential toFixed toLowerCase toString toUpperCase true typeof while\n    INICIO : ENTRADAS\n            | \n    \n    ENTRADAS : ENTRADAS ENTRADA\n    \n    ENTRADAS : ENTRADA\n    \n    ENTRADA : IMPRIMIR puntoYcoma\n            |   IF puntoYcoma\n            |   WHILE puntoYcoma\n            |   BREAK\n            |   CONTINUE\n            |   FOR puntoYcoma\n            |   INCREMENTO puntoYcoma\n            |   DECREMENTO puntoYcoma\n            |   FUNC puntoYcoma\n            |   STRUCT puntoYcoma\n            |   LLAMADA_FUNCION puntoYcoma\n            |   RETURN\n    \n   FUNC : fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra\n   \n    FUNC : fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    PARAMETROS_DECLA_FUNC : PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC\n                            | PARAMETRO_DECLA_FUNC\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO c_Abre c_Cierra\n    \n    EXPRESION : LLAMADA_FUNCION\n    \n    LLAMADA_FUNCION : id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra\n    \n    LLAMADA_FUNCION : id p_Abre p_Cierra\n    \n    PARAMETROS_LLAMA_FUNC : EXPRESION\n                          | PARAMETROS_LLAMA_FUNC coma EXPRESION\n    \n    STRUCT : interface id llave_Abre LISTAATRIBUTOS llave_Cierra\n    \n    LISTAATRIBUTOS :  LISTAATRIBUTOS id dosPuntos TIPO puntoYcoma\n    \n    LISTAATRIBUTOS :  LISTAATRIBUTOS id puntoYcoma\n    \n    LISTAATRIBUTOS : id dosPuntos TIPO puntoYcoma\n    \n    LISTAATRIBUTOS : id puntoYcoma\n    \n    FOR : for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FOR : for p_Abre DECLARACION of EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FORITERADOR : ASIGNACION\n                | INCREMENTO\n                | DECREMENTO\n    \n    BREAK : break puntoYcoma\n    \n    CONTINUE : continue puntoYcoma\n    \n    RETURN : return EXPRESION puntoYcoma\n    \n    RETURN : return puntoYcoma\n    \n    WHILE : while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre llave_Cierra COMPLEMENTO_IF\n    \n    COMPLEMENTO_IF : else IF\n                    | else llave_Abre ENTRADAS llave_Cierra\n                    | \n    \n    ENTRADA : DECLARACION puntoYcoma\n    \n    DECLARACION : let id igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO igual EXPRESION\n    \n    DECLARACION : let id \n    \n    DECLARACION : let id dosPuntos TIPO\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra\n    \n    ENTRADA : ASIGNACION puntoYcoma\n    \n    ASIGNACION : id igual EXPRESION\n    \n    ASIGNACION : id LISTAINDICES igual EXPRESION\n    \n    INCREMENTO : id incremento \n    \n    DECREMENTO : id decremento\n    \n    IMPRIMIR : console punto log p_Abre LISTAEXPRESIONES p_Cierra\n    \n    LISTAEXPRESIONES :  LISTAEXPRESIONES coma EXPRESION\n    \n    LISTAEXPRESIONES : EXPRESION\n    \n    LISTAINDICES :  LISTAINDICES c_Abre EXPRESION c_Cierra\n    \n    LISTAINDICES : c_Abre EXPRESION c_Cierra\n    \n    EXPRESION : EXPRESION suma EXPRESION\n    \n    EXPRESION : EXPRESION resta EXPRESION\n    \n    EXPRESION : EXPRESION multiplicacion EXPRESION\n    \n    EXPRESION : EXPRESION division EXPRESION\n    \n    EXPRESION : EXPRESION potencia EXPRESION\n    \n    EXPRESION : EXPRESION modulo EXPRESION\n    \n    EXPRESION : resta EXPRESION %prec uresta\n    \n    EXPRESION : p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : EXPRESION and EXPRESION\n    \n    EXPRESION : EXPRESION or EXPRESION\n    \n    EXPRESION : not EXPRESION\n    \n    EXPRESION : EXPRESION mayor EXPRESION\n    \n    EXPRESION : EXPRESION mayorigual EXPRESION\n    \n    EXPRESION : EXPRESION menor EXPRESION\n    \n    EXPRESION : EXPRESION menorigual EXPRESION\n    \n    EXPRESION : EXPRESION igualacion EXPRESION\n    \n    EXPRESION : EXPRESION diferente EXPRESION\n    \n    EXPRESION : EXPRESION igualacionNormal EXPRESION\n    \n    EXPRESION : EXPRESION diferenteNormal EXPRESION\n    \n    EXPRESION : FUNCION_TOFIXED\n            | FUNCION_TOEXPONENTIAL\n            | FUNCION_TOSTRING\n            | FUNCION_TOLOWERCASE\n            | FUNCION_TOUPPERCASE\n            | FUNCION_SPLIT\n            | FUNCION_CONCAT\n            | FUNCION_TYPEOF\n    \n    FUNCION_TOFIXED : id punto toFixed p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOEXPONENTIAL : id punto toExponential p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOSTRING : id punto toString p_Abre p_Cierra\n    \n    FUNCION_TOLOWERCASE : id punto toLowerCase p_Abre p_Cierra\n    \n    FUNCION_TOUPPERCASE : id punto toUpperCase p_Abre p_Cierra\n    \n    FUNCION_SPLIT : id punto split p_Abre EXPRESION p_Cierra\n    \n    FUNCION_CONCAT : id punto concat p_Abre LISTAEXPRESIONES p_Cierra\n    \n    FUNCION_TYPEOF : typeof p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : cadena\n    \n    EXPRESION : numero\n    \n    EXPRESION : true\n                | false\n    \n    EXPRESION : null\n    \n    EXPRESION : id\n    \n    EXPRESION : length p_Abre id p_Cierra\n    \n    EXPRESION : id LISTAINDICES\n    \n    EXPRESION : c_Abre LISTAEXPRESIONES c_Cierra\n    \n    EXPRESION : TIPO p_Abre EXPRESION p_Cierra\n    \n    TIPO : number\n    \n    TIPO : string\n    \n    TIPO : stringMayus\n    \n    TIPO : boolean\n    \n    TIPO : any\n    '
    
_lr_action_items = {'$end':([0,1,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,],[-2,0,-1,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,]),'console':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[18,18,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'if':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,175,176,184,203,205,209,211,226,233,235,246,248,253,254,257,],[19,19,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'while':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[20,20,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'break':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[21,21,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'continue':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[22,22,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'for':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[23,23,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'id':([0,2,3,7,8,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,49,50,52,56,58,59,60,76,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,120,123,124,125,127,130,131,133,142,169,175,176,183,184,186,189,190,194,195,200,203,205,206,209,211,214,233,235,237,243,246,248,251,253,254,257,],[24,24,-4,-8,-9,-16,53,54,74,84,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,74,74,-38,-39,74,74,74,-41,74,74,74,74,74,74,137,141,-40,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,167,74,74,74,74,74,74,74,187,74,24,24,137,24,-32,74,74,74,74,74,24,24,232,24,24,-30,24,24,-31,74,24,24,-29,24,24,24,]),'fn':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[25,25,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'interface':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[26,26,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'return':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[27,27,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'let':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,56,98,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[28,28,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,28,-41,-40,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'llave_Cierra':([3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,98,142,175,186,203,205,211,214,235,237,248,251,253,257,],[-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,188,204,-32,224,227,236,-30,250,-31,255,-29,256,258,]),'puntoYcoma':([4,5,6,9,10,11,12,13,14,16,17,21,22,27,47,48,55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,82,83,84,88,90,92,115,117,118,132,134,136,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,172,173,177,180,187,188,196,198,199,202,204,212,217,218,219,222,223,224,225,227,236,238,239,240,241,242,244,245,250,252,255,256,258,],[30,31,32,33,34,35,36,37,38,39,40,44,45,56,-58,-59,98,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,-110,-111,-112,-113,-114,-51,130,-25,-56,-71,-75,-107,-24,-57,-64,186,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,-49,-52,206,-63,214,-28,-106,-109,-99,-60,-47,237,-94,-95,-96,-50,-54,-47,-44,-42,-18,251,-92,-93,-97,-98,-43,-45,-17,-53,-34,-46,-33,]),'punto':([18,74,],[41,119,]),'p_Abre':([19,20,23,24,27,42,43,49,50,52,53,58,59,60,74,75,76,77,78,79,80,81,82,83,85,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,160,161,162,163,164,165,166,169,189,190,194,195,200,243,],[42,43,46,49,59,59,59,59,59,59,96,59,59,59,49,120,59,123,124,-110,-111,-112,-113,-114,127,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,189,190,191,192,193,194,195,59,59,59,59,59,59,59,]),'incremento':([24,232,],[47,47,]),'decremento':([24,232,],[48,48,]),'igual':([24,51,79,80,81,82,83,84,136,173,180,223,232,],[50,93,-110,-111,-112,-113,-114,125,-64,200,-63,243,50,]),'c_Abre':([24,27,42,43,49,50,51,52,58,59,60,74,76,79,80,81,82,83,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,123,124,125,127,130,131,133,136,169,173,180,189,190,194,195,200,208,232,243,],[52,76,76,76,76,76,94,76,76,76,76,52,76,-110,-111,-112,-113,-114,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,94,76,76,76,76,76,76,76,-64,76,201,-63,76,76,76,76,76,234,52,76,]),'resta':([27,42,43,49,50,52,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,86,87,90,91,92,93,94,95,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,127,130,131,132,133,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,169,170,171,172,177,178,179,180,189,190,194,195,196,197,198,199,200,215,216,217,218,219,220,222,239,240,241,242,243,252,],[58,58,58,58,58,58,100,-23,58,58,58,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,58,100,100,-25,100,100,58,58,100,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-71,100,-75,-107,100,58,58,58,58,58,58,-24,58,100,100,-64,-65,-66,-67,-68,-69,-70,100,100,100,100,100,100,100,100,100,100,-72,-108,58,100,100,100,100,100,100,-63,58,58,58,58,-106,100,-109,-99,58,100,100,-94,-95,-96,100,100,-92,-93,-97,-98,58,100,]),'not':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'cadena':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'numero':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'true':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'false':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'null':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'length':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'typeof':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'number':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,127,130,131,133,169,181,185,189,190,194,195,200,213,243,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'string':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,127,130,131,133,169,181,185,189,190,194,195,200,213,243,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'stringMayus':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,127,130,131,133,169,181,185,189,190,194,195,200,213,243,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'boolean':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,127,130,131,133,169,181,185,189,190,194,195,200,213,243,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'any':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,127,130,131,133,169,181,185,189,190,194,195,200,213,243,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'log':([41,],[85,]),'p_Cierra':([47,48,49,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,82,83,86,87,89,90,91,92,96,115,116,117,118,122,132,134,136,138,140,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,168,170,171,174,178,179,180,191,192,193,196,197,198,199,208,210,215,216,217,218,219,220,221,228,229,230,231,239,240,241,242,249,],[-58,-59,90,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,-110,-111,-112,-113,-114,128,129,132,-25,-26,-56,139,-71,159,-75,-107,-62,-24,-57,-64,182,-20,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,196,-108,198,199,202,207,-27,-63,217,218,219,-106,-61,-109,-99,-21,-19,239,240,-94,-95,-96,241,242,247,-35,-36,-37,-92,-93,-97,-98,-22,]),'llave_Abre':([54,128,129,139,182,207,226,247,],[97,175,176,184,209,233,246,254,]),'suma':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[99,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,99,99,-25,99,99,99,-71,99,-75,-107,99,-24,99,99,-64,-65,-66,-67,-68,-69,-70,99,99,99,99,99,99,99,99,99,99,-72,-108,99,99,99,99,99,99,-63,-106,99,-109,-99,99,99,-94,-95,-96,99,99,-92,-93,-97,-98,99,]),'multiplicacion':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[101,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,101,101,-25,101,101,101,-71,101,-75,-107,101,-24,101,101,-64,101,101,-67,-68,-69,-70,101,101,101,101,101,101,101,101,101,101,-72,-108,101,101,101,101,101,101,-63,-106,101,-109,-99,101,101,-94,-95,-96,101,101,-92,-93,-97,-98,101,]),'division':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[102,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,102,102,-25,102,102,102,-71,102,-75,-107,102,-24,102,102,-64,102,102,-67,-68,-69,-70,102,102,102,102,102,102,102,102,102,102,-72,-108,102,102,102,102,102,102,-63,-106,102,-109,-99,102,102,-94,-95,-96,102,102,-92,-93,-97,-98,102,]),'potencia':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[103,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,103,103,-25,103,103,103,-71,103,-75,-107,103,-24,103,103,-64,103,103,103,103,-69,103,103,103,103,103,103,103,103,103,103,103,-72,-108,103,103,103,103,103,103,-63,-106,103,-109,-99,103,103,-94,-95,-96,103,103,-92,-93,-97,-98,103,]),'modulo':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[104,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,104,104,-25,104,104,104,-71,104,-75,-107,104,-24,104,104,-64,104,104,-67,-68,-69,-70,104,104,104,104,104,104,104,104,104,104,-72,-108,104,104,104,104,104,104,-63,-106,104,-109,-99,104,104,-94,-95,-96,104,104,-92,-93,-97,-98,104,]),'and':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[105,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,105,105,-25,105,105,105,-71,105,-75,-107,105,-24,105,105,-64,-65,-66,-67,-68,-69,-70,-73,105,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,105,105,105,105,105,105,-63,-106,105,-109,-99,105,105,-94,-95,-96,105,105,-92,-93,-97,-98,105,]),'or':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[106,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,106,106,-25,106,106,106,-71,106,-75,-107,106,-24,106,106,-64,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,106,106,106,106,106,106,-63,-106,106,-109,-99,106,106,-94,-95,-96,106,106,-92,-93,-97,-98,106,]),'mayor':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[107,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,107,107,-25,107,107,107,-71,107,-75,-107,107,-24,107,107,-64,-65,-66,-67,-68,-69,-70,107,107,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,107,107,107,107,107,107,-63,-106,107,-109,-99,107,107,-94,-95,-96,107,107,-92,-93,-97,-98,107,]),'mayorigual':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[108,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,108,108,-25,108,108,108,-71,108,-75,-107,108,-24,108,108,-64,-65,-66,-67,-68,-69,-70,108,108,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,108,108,108,108,108,108,-63,-106,108,-109,-99,108,108,-94,-95,-96,108,108,-92,-93,-97,-98,108,]),'menor':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[109,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,109,109,-25,109,109,109,-71,109,-75,-107,109,-24,109,109,-64,-65,-66,-67,-68,-69,-70,109,109,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,109,109,109,109,109,109,-63,-106,109,-109,-99,109,109,-94,-95,-96,109,109,-92,-93,-97,-98,109,]),'menorigual':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[110,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,110,110,-25,110,110,110,-71,110,-75,-107,110,-24,110,110,-64,-65,-66,-67,-68,-69,-70,110,110,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,110,110,110,110,110,110,-63,-106,110,-109,-99,110,110,-94,-95,-96,110,110,-92,-93,-97,-98,110,]),'igualacion':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[111,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,111,111,-25,111,111,111,-71,111,-75,-107,111,-24,111,111,-64,-65,-66,-67,-68,-69,-70,111,111,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,111,111,111,111,111,111,-63,-106,111,-109,-99,111,111,-94,-95,-96,111,111,-92,-93,-97,-98,111,]),'diferente':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[112,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,112,112,-25,112,112,112,-71,112,-75,-107,112,-24,112,112,-64,-65,-66,-67,-68,-69,-70,112,112,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,112,112,112,112,112,112,-63,-106,112,-109,-99,112,112,-94,-95,-96,112,112,-92,-93,-97,-98,112,]),'igualacionNormal':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[113,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,113,113,-25,113,113,113,-71,113,-75,-107,113,-24,113,113,-64,-65,-66,-67,-68,-69,-70,113,113,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,113,113,113,113,113,113,-63,-106,113,-109,-99,113,113,-94,-95,-96,113,113,-92,-93,-97,-98,113,]),'diferenteNormal':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,90,91,92,95,115,116,117,118,122,132,134,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,170,171,172,177,178,179,180,196,197,198,199,215,216,217,218,219,220,222,239,240,241,242,252,],[114,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,114,114,-25,114,114,114,-71,114,-75,-107,114,-24,114,114,-64,-65,-66,-67,-68,-69,-70,114,114,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,114,114,114,114,114,114,-63,-106,114,-109,-99,114,114,-94,-95,-96,114,114,-92,-93,-97,-98,114,]),'coma':([57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,82,83,89,90,91,115,117,118,121,122,132,136,138,140,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,174,179,180,196,197,198,199,208,210,217,218,219,221,239,240,241,242,249,],[-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,-110,-111,-112,-113,-114,133,-25,-26,-71,-75,-107,169,-62,-24,-64,183,-20,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,169,-27,-63,-106,-61,-109,-99,-21,-19,-94,-95,-96,169,-92,-93,-97,-98,-22,]),'c_Cierra':([57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,90,95,115,117,118,121,122,132,135,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,180,196,197,198,199,201,217,218,219,234,239,240,241,242,],[-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,-25,136,-71,-75,-107,168,-62,-24,180,-64,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,-63,-106,-61,-109,-99,223,-94,-95,-96,249,-92,-93,-97,-98,]),'of':([57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,82,83,84,88,90,115,117,118,132,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,172,173,180,196,198,199,217,218,219,222,223,239,240,241,242,252,],[-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,-110,-111,-112,-113,-114,-51,131,-25,-71,-75,-107,-24,-64,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-108,-49,-52,-63,-106,-109,-99,-94,-95,-96,-50,-54,-92,-93,-97,-98,-53,]),'dosPuntos':([84,137,141,187,],[126,181,185,213,]),'toFixed':([119,],[160,]),'toExponential':([119,],[161,]),'toString':([119,],[162,]),'toLowerCase':([119,],[163,]),'toUpperCase':([119,],[164,]),'split':([119,],[165,]),'concat':([119,],[166,]),'else':([204,224,],[226,226,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'ENTRADAS':([0,175,176,184,209,233,246,254,],[2,203,205,211,235,248,253,257,]),'ENTRADA':([0,2,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[3,29,3,3,3,29,29,3,29,3,29,3,29,29,3,29,]),'IMPRIMIR':([0,2,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'IF':([0,2,175,176,184,203,205,209,211,226,233,235,246,248,253,254,257,],[5,5,5,5,5,5,5,5,5,245,5,5,5,5,5,5,5,]),'WHILE':([0,2,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BREAK':([0,2,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CONTINUE':([0,2,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FOR':([0,2,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INCREMENTO':([0,2,175,176,184,203,205,206,209,211,233,235,246,248,253,254,257,],[10,10,10,10,10,10,10,230,10,10,10,10,10,10,10,10,10,]),'DECREMENTO':([0,2,175,176,184,203,205,206,209,211,233,235,246,248,253,254,257,],[11,11,11,11,11,11,11,231,11,11,11,11,11,11,11,11,11,]),'FUNC':([0,2,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'STRUCT':([0,2,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LLAMADA_FUNCION':([0,2,27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,175,176,184,189,190,194,195,200,203,205,209,211,233,235,243,246,248,253,254,257,],[14,14,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,14,14,14,57,57,57,57,57,14,14,14,14,14,14,57,14,14,14,14,14,]),'RETURN':([0,2,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'DECLARACION':([0,2,46,175,176,184,203,205,209,211,233,235,246,248,253,254,257,],[16,16,88,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'ASIGNACION':([0,2,175,176,184,203,205,206,209,211,233,235,246,248,253,254,257,],[17,17,17,17,17,17,17,229,17,17,17,17,17,17,17,17,17,]),'LISTAINDICES':([24,74,232,],[51,118,51,]),'EXPRESION':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[55,86,87,91,92,95,115,116,117,122,134,135,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,170,171,172,122,177,178,179,197,215,216,220,122,222,252,]),'FUNCION_TOFIXED':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FUNCION_TOEXPONENTIAL':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'FUNCION_TOSTRING':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'FUNCION_TOLOWERCASE':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'FUNCION_TOUPPERCASE':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'FUNCION_SPLIT':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FUNCION_CONCAT':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'FUNCION_TYPEOF':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,127,130,131,133,169,189,190,194,195,200,243,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'TIPO':([27,42,43,49,50,52,58,59,60,76,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,127,130,131,133,169,181,185,189,190,194,195,200,213,243,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,173,77,77,77,77,77,208,212,77,77,77,77,77,238,77,]),'PARAMETROS_LLAMA_FUNC':([49,],[89,]),'LISTAEXPRESIONES':([76,127,195,],[121,174,221,]),'PARAMETROS_DECLA_FUNC':([96,],[138,]),'PARAMETRO_DECLA_FUNC':([96,183,],[140,210,]),'LISTAATRIBUTOS':([97,],[142,]),'COMPLEMENTO_IF':([204,224,],[225,244,]),'FORITERADOR':([206,],[228,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> ENTRADAS','INICIO',1,'p_INICIO','parser.py',71),
  ('INICIO -> <empty>','INICIO',0,'p_INICIO','parser.py',72),
  ('ENTRADAS -> ENTRADAS ENTRADA','ENTRADAS',2,'p_ENTRADAS_PARTE_1','parser.py',81),
  ('ENTRADAS -> ENTRADA','ENTRADAS',1,'p_ENTRADAS_PARTE_2','parser.py',88),
  ('ENTRADA -> IMPRIMIR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',94),
  ('ENTRADA -> IF puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',95),
  ('ENTRADA -> WHILE puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',96),
  ('ENTRADA -> BREAK','ENTRADA',1,'p_ENTRADA','parser.py',97),
  ('ENTRADA -> CONTINUE','ENTRADA',1,'p_ENTRADA','parser.py',98),
  ('ENTRADA -> FOR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',99),
  ('ENTRADA -> INCREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',100),
  ('ENTRADA -> DECREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',101),
  ('ENTRADA -> FUNC puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',102),
  ('ENTRADA -> STRUCT puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',103),
  ('ENTRADA -> LLAMADA_FUNCION puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',104),
  ('ENTRADA -> RETURN','ENTRADA',1,'p_ENTRADA','parser.py',105),
  ('FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',8,'p_FUNC_1','parser.py',123),
  ('FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',7,'p_FUNC_2','parser.py',130),
  ('PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',3,'p_PARAMETROS_DECLA_FUNC','parser.py',137),
  ('PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',1,'p_PARAMETROS_DECLA_FUNC','parser.py',138),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO','PARAMETRO_DECLA_FUNC',3,'p_PARAMETRO_DECLA_FUNC_1','parser.py',148),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra','PARAMETRO_DECLA_FUNC',5,'p_PARAMETRO_DECLA_FUNC_2','parser.py',154),
  ('EXPRESION -> LLAMADA_FUNCION','EXPRESION',1,'p_EXPRESION_LLAMA_FUNC','parser.py',163),
  ('LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra','LLAMADA_FUNCION',4,'p_LLAMADA_FUNCION_1','parser.py',170),
  ('LLAMADA_FUNCION -> id p_Abre p_Cierra','LLAMADA_FUNCION',3,'p_LLAMADA_FUNCION_2','parser.py',176),
  ('PARAMETROS_LLAMA_FUNC -> EXPRESION','PARAMETROS_LLAMA_FUNC',1,'p_PARAMETROS_LLAMA_FUNC','parser.py',182),
  ('PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION','PARAMETROS_LLAMA_FUNC',3,'p_PARAMETROS_LLAMA_FUNC','parser.py',183),
  ('STRUCT -> interface id llave_Abre LISTAATRIBUTOS llave_Cierra','STRUCT',5,'p_INTERFACE','parser.py',195),
  ('LISTAATRIBUTOS -> LISTAATRIBUTOS id dosPuntos TIPO puntoYcoma','LISTAATRIBUTOS',5,'p_LISTAATRIBUTOS','parser.py',201),
  ('LISTAATRIBUTOS -> LISTAATRIBUTOS id puntoYcoma','LISTAATRIBUTOS',3,'p_LISTAATRIBUTOS_NoTipado','parser.py',208),
  ('LISTAATRIBUTOS -> id dosPuntos TIPO puntoYcoma','LISTAATRIBUTOS',4,'p_LISTAATRIBUTOS_Extra','parser.py',215),
  ('LISTAATRIBUTOS -> id puntoYcoma','LISTAATRIBUTOS',2,'p_LISTAATRIBUTOS_Extra_NoTipado','parser.py',221),
  ('FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',11,'p_FOR','parser.py',228),
  ('FOR -> for p_Abre DECLARACION of EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',9,'p_FOR_Vector_Cadena','parser.py',234),
  ('FORITERADOR -> ASIGNACION','FORITERADOR',1,'p_FORITERADOR','parser.py',240),
  ('FORITERADOR -> INCREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',241),
  ('FORITERADOR -> DECREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',242),
  ('BREAK -> break puntoYcoma','BREAK',2,'p_BREAK','parser.py',249),
  ('CONTINUE -> continue puntoYcoma','CONTINUE',2,'p_CONTINUE','parser.py',255),
  ('RETURN -> return EXPRESION puntoYcoma','RETURN',3,'p_RETURN_1','parser.py',261),
  ('RETURN -> return puntoYcoma','RETURN',2,'p_RETURN_2','parser.py',267),
  ('WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','WHILE',7,'p_WHILE','parser.py',276),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF','IF',8,'p_IF_1','parser.py',283),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre llave_Cierra COMPLEMENTO_IF','IF',7,'p_IF_2','parser.py',289),
  ('COMPLEMENTO_IF -> else IF','COMPLEMENTO_IF',2,'p_COMPLEMENTO_IF','parser.py',295),
  ('COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra','COMPLEMENTO_IF',4,'p_COMPLEMENTO_IF','parser.py',296),
  ('COMPLEMENTO_IF -> <empty>','COMPLEMENTO_IF',0,'p_COMPLEMENTO_IF','parser.py',297),
  ('ENTRADA -> DECLARACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Declaracion','parser.py',310),
  ('DECLARACION -> let id igual EXPRESION','DECLARACION',4,'p_DECLARACION_NoTipada','parser.py',316),
  ('DECLARACION -> let id dosPuntos TIPO igual EXPRESION','DECLARACION',6,'p_DECLARACION_Tipada','parser.py',323),
  ('DECLARACION -> let id','DECLARACION',2,'p_DECLARACION_SinExpresion_SinTipado','parser.py',329),
  ('DECLARACION -> let id dosPuntos TIPO','DECLARACION',4,'p_DECLARACION_SinExpresion_Tipado','parser.py',335),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION','DECLARACION',8,'p_DECLARACION_Tipada_VECTOR','parser.py',341),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra','DECLARACION',6,'p_DECLARACION_SinExpresion_Tipado_VECTOR','parser.py',347),
  ('ENTRADA -> ASIGNACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Asignacion','parser.py',356),
  ('ASIGNACION -> id igual EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',362),
  ('ASIGNACION -> id LISTAINDICES igual EXPRESION','ASIGNACION',4,'p_ASIGNACION_VEC','parser.py',368),
  ('INCREMENTO -> id incremento','INCREMENTO',2,'p_INCREMENTO','parser.py',376),
  ('DECREMENTO -> id decremento','DECREMENTO',2,'p_DECREMENTO','parser.py',382),
  ('IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra','IMPRIMIR',6,'p_IMPRIMIR_1','parser.py',389),
  ('LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION','LISTAEXPRESIONES',3,'p_LISTAEXPRESIONES_1','parser.py',395),
  ('LISTAEXPRESIONES -> EXPRESION','LISTAEXPRESIONES',1,'p_LISTAEXPRESIONES_2','parser.py',402),
  ('LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra','LISTAINDICES',4,'p_LISTAEXPRESIONES_Indices','parser.py',408),
  ('LISTAINDICES -> c_Abre EXPRESION c_Cierra','LISTAINDICES',3,'p_LISTAEXPRESIONES_Indices_2','parser.py',415),
  ('EXPRESION -> EXPRESION suma EXPRESION','EXPRESION',3,'p_EXPRESION_suma','parser.py',423),
  ('EXPRESION -> EXPRESION resta EXPRESION','EXPRESION',3,'p_EXPRESION_resta','parser.py',430),
  ('EXPRESION -> EXPRESION multiplicacion EXPRESION','EXPRESION',3,'p_EXPRESION_multiplicacion','parser.py',437),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_EXPRESION_division','parser.py',444),
  ('EXPRESION -> EXPRESION potencia EXPRESION','EXPRESION',3,'p_EXPRESION_potencia','parser.py',451),
  ('EXPRESION -> EXPRESION modulo EXPRESION','EXPRESION',3,'p_EXPRESION_modulo','parser.py',458),
  ('EXPRESION -> resta EXPRESION','EXPRESION',2,'p_EXPRESION_negativo','parser.py',465),
  ('EXPRESION -> p_Abre EXPRESION p_Cierra','EXPRESION',3,'p_EXPRESION_Parentesis','parser.py',472),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_EXPRESION_and','parser.py',480),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_EXPRESION_or','parser.py',487),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_EXPRESION_not','parser.py',494),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_EXPRESION_mayor','parser.py',503),
  ('EXPRESION -> EXPRESION mayorigual EXPRESION','EXPRESION',3,'p_EXPRESION_mayorigual','parser.py',510),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_EXPRESION_menor','parser.py',517),
  ('EXPRESION -> EXPRESION menorigual EXPRESION','EXPRESION',3,'p_EXPRESION_menorigual','parser.py',524),
  ('EXPRESION -> EXPRESION igualacion EXPRESION','EXPRESION',3,'p_EXPRESION_igualacion','parser.py',531),
  ('EXPRESION -> EXPRESION diferente EXPRESION','EXPRESION',3,'p_EXPRESION_diferente','parser.py',538),
  ('EXPRESION -> EXPRESION igualacionNormal EXPRESION','EXPRESION',3,'p_EXPRESION_igualacionNormal','parser.py',545),
  ('EXPRESION -> EXPRESION diferenteNormal EXPRESION','EXPRESION',3,'p_EXPRESION_diferenteNormal','parser.py',552),
  ('EXPRESION -> FUNCION_TOFIXED','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',561),
  ('EXPRESION -> FUNCION_TOEXPONENTIAL','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',562),
  ('EXPRESION -> FUNCION_TOSTRING','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',563),
  ('EXPRESION -> FUNCION_TOLOWERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',564),
  ('EXPRESION -> FUNCION_TOUPPERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',565),
  ('EXPRESION -> FUNCION_SPLIT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',566),
  ('EXPRESION -> FUNCION_CONCAT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',567),
  ('EXPRESION -> FUNCION_TYPEOF','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',568),
  ('FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra','FUNCION_TOFIXED',6,'p_FUNCION_TOFIXED','parser.py',574),
  ('FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra','FUNCION_TOEXPONENTIAL',6,'p_FUNCION_TOEXPONENTIAL','parser.py',581),
  ('FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra','FUNCION_TOSTRING',5,'p_FUNCION_TOSTRING','parser.py',588),
  ('FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra','FUNCION_TOLOWERCASE',5,'p_FUNCION_TOLOWERCASE','parser.py',595),
  ('FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra','FUNCION_TOUPPERCASE',5,'p_FUNCION_TOUPPERCASE','parser.py',602),
  ('FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra','FUNCION_SPLIT',6,'p_FUNCION_SPLIT','parser.py',609),
  ('FUNCION_CONCAT -> id punto concat p_Abre LISTAEXPRESIONES p_Cierra','FUNCION_CONCAT',6,'p_FUNCION_CONCAT','parser.py',616),
  ('FUNCION_TYPEOF -> typeof p_Abre EXPRESION p_Cierra','FUNCION_TYPEOF',4,'p_FUNCION_TYPEOF','parser.py',623),
  ('EXPRESION -> cadena','EXPRESION',1,'p_EXPRESION_cadena','parser.py',631),
  ('EXPRESION -> numero','EXPRESION',1,'p_EXPRESION_numero','parser.py',638),
  ('EXPRESION -> true','EXPRESION',1,'p_EXPRESION_booleano','parser.py',645),
  ('EXPRESION -> false','EXPRESION',1,'p_EXPRESION_booleano','parser.py',646),
  ('EXPRESION -> null','EXPRESION',1,'p_EXPRESION_null','parser.py',653),
  ('EXPRESION -> id','EXPRESION',1,'p_EXPRESION_Acceso','parser.py',660),
  ('EXPRESION -> length p_Abre id p_Cierra','EXPRESION',4,'p_EXPRESION_Length','parser.py',667),
  ('EXPRESION -> id LISTAINDICES','EXPRESION',2,'p_EXPRESION_Acceso_Vector','parser.py',674),
  ('EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra','EXPRESION',3,'p_EXPRESION_Vector','parser.py',681),
  ('EXPRESION -> TIPO p_Abre EXPRESION p_Cierra','EXPRESION',4,'p_EXPRESION_Casteo','parser.py',688),
  ('TIPO -> number','TIPO',1,'p_TIPO_NUMBER','parser.py',696),
  ('TIPO -> string','TIPO',1,'p_TIPO_STRING','parser.py',702),
  ('TIPO -> stringMayus','TIPO',1,'p_TIPO_STRINGMayus','parser.py',708),
  ('TIPO -> boolean','TIPO',1,'p_TIPO_BOOLEAN','parser.py',714),
  ('TIPO -> any','TIPO',1,'p_TIPO_ANY','parser.py',720),
]
