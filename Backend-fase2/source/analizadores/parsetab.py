
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandleftmenormayormenorigualmayorigualigualacionigualacionNormaldiferentediferenteNormalleftsumarestaleftmultiplicaciondivisionmoduloleftpotenciarightnotlefturestaleftp_Abreand any boolean break c_Abre c_Cierra cadena coma concat console continue decremento diferente diferenteNormal division dosPuntos else false fn for id if igual igualacion igualacionNormal incremento interface length let llave_Abre llave_Cierra log mayor mayorigual menor menorigual modulo multiplicacion not null number numero of or p_Abre p_Cierra potencia punto puntoYcoma push resta return split string stringMayus suma toExponential toFixed toLowerCase toString toUpperCase true typeof while\n    INICIO : ENTRADAS\n            | \n    \n    ENTRADAS : ENTRADAS ENTRADA\n    \n    ENTRADAS : ENTRADA\n    \n    ENTRADA : IMPRIMIR puntoYcoma\n            |   IF puntoYcoma\n            |   WHILE puntoYcoma\n            |   BREAK\n            |   CONTINUE\n            |   FOR puntoYcoma\n            |   INCREMENTO puntoYcoma\n            |   DECREMENTO puntoYcoma\n            |   FUNC puntoYcoma\n            |   STRUCT puntoYcoma\n            |   LLAMADA_FUNCION puntoYcoma\n            |   RETURN\n            |   FUNCION_PUSH puntoYcoma\n    \n   FUNC : fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra\n   \n    FUNC : fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    PARAMETROS_DECLA_FUNC : PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC\n                            | PARAMETRO_DECLA_FUNC\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO c_Abre c_Cierra\n    \n    EXPRESION : LLAMADA_FUNCION\n    \n    LLAMADA_FUNCION : id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra\n    \n    LLAMADA_FUNCION : id p_Abre p_Cierra\n    \n    PARAMETROS_LLAMA_FUNC : EXPRESION\n                          | PARAMETROS_LLAMA_FUNC coma EXPRESION\n    \n    STRUCT : interface id llave_Abre LISTAATRIBUTOS llave_Cierra\n    \n    LISTAATRIBUTOS :  LISTAATRIBUTOS id dosPuntos TIPO puntoYcoma\n    \n    LISTAATRIBUTOS :  LISTAATRIBUTOS id puntoYcoma\n    \n    LISTAATRIBUTOS : id dosPuntos TIPO puntoYcoma\n    \n    LISTAATRIBUTOS : id puntoYcoma\n    \n    FOR : for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FOR : for p_Abre DECLARACION of EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FORITERADOR : ASIGNACION\n                | INCREMENTO\n                | DECREMENTO\n    \n    BREAK : break puntoYcoma\n    \n    CONTINUE : continue puntoYcoma\n    \n    RETURN : return EXPRESION puntoYcoma\n    \n    RETURN : return puntoYcoma\n    \n    WHILE : while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre llave_Cierra COMPLEMENTO_IF\n    \n    COMPLEMENTO_IF : else IF\n                    | else llave_Abre ENTRADAS llave_Cierra\n                    | \n    \n    ENTRADA : DECLARACION puntoYcoma\n    \n    DECLARACION : let id igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO igual EXPRESION\n    \n    DECLARACION : let id \n    \n    DECLARACION : let id dosPuntos TIPO\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra\n    \n    ENTRADA : ASIGNACION puntoYcoma\n    \n    ASIGNACION : id igual EXPRESION\n    \n    ASIGNACION : id LISTAINDICES igual EXPRESION\n    \n    INCREMENTO : id incremento \n    \n    DECREMENTO : id decremento\n    \n    IMPRIMIR : console punto log p_Abre LISTAEXPRESIONES p_Cierra\n    \n    LISTAEXPRESIONES :  LISTAEXPRESIONES coma EXPRESION\n    \n    LISTAEXPRESIONES : EXPRESION\n    \n    LISTAINDICES :  LISTAINDICES c_Abre EXPRESION c_Cierra\n    \n    LISTAINDICES : c_Abre EXPRESION c_Cierra\n    \n    EXPRESION : EXPRESION suma EXPRESION\n    \n    EXPRESION : EXPRESION resta EXPRESION\n    \n    EXPRESION : EXPRESION multiplicacion EXPRESION\n    \n    EXPRESION : EXPRESION division EXPRESION\n    \n    EXPRESION : EXPRESION potencia EXPRESION\n    \n    EXPRESION : EXPRESION modulo EXPRESION\n    \n    EXPRESION : resta EXPRESION %prec uresta\n    \n    EXPRESION : p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : EXPRESION and EXPRESION\n    \n    EXPRESION : EXPRESION or EXPRESION\n    \n    EXPRESION : not EXPRESION\n    \n    EXPRESION : EXPRESION mayor EXPRESION\n    \n    EXPRESION : EXPRESION mayorigual EXPRESION\n    \n    EXPRESION : EXPRESION menor EXPRESION\n    \n    EXPRESION : EXPRESION menorigual EXPRESION\n    \n    EXPRESION : EXPRESION igualacion EXPRESION\n    \n    EXPRESION : EXPRESION diferente EXPRESION\n    \n    EXPRESION : EXPRESION igualacionNormal EXPRESION\n    \n    EXPRESION : EXPRESION diferenteNormal EXPRESION\n    \n    EXPRESION : FUNCION_TOFIXED\n            | FUNCION_TOEXPONENTIAL\n            | FUNCION_TOSTRING\n            | FUNCION_TOLOWERCASE\n            | FUNCION_TOUPPERCASE\n            | FUNCION_SPLIT\n            | FUNCION_CONCAT\n            | FUNCION_TYPEOF\n            | FUNCION_PUSH\n    \n    FUNCION_TOFIXED : id punto toFixed p_Abre EXPRESION p_Cierra\n    \n    FUNCION_PUSH : id punto push p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOEXPONENTIAL : id punto toExponential p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOSTRING : id punto toString p_Abre p_Cierra\n    \n    FUNCION_TOLOWERCASE : id punto toLowerCase p_Abre p_Cierra\n    \n    FUNCION_TOUPPERCASE : id punto toUpperCase p_Abre p_Cierra\n    \n    FUNCION_SPLIT : id punto split p_Abre EXPRESION p_Cierra\n    \n    FUNCION_CONCAT : id punto concat p_Abre LISTAEXPRESIONES p_Cierra\n    \n    FUNCION_TYPEOF : typeof p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : cadena\n    \n    EXPRESION : numero\n    \n    EXPRESION : true\n                | false\n    \n    EXPRESION : null\n    \n    EXPRESION : id\n    \n    EXPRESION : length p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : id LISTAINDICES\n    \n    EXPRESION : c_Abre LISTAEXPRESIONES c_Cierra\n    \n    EXPRESION : TIPO p_Abre EXPRESION p_Cierra\n    \n    TIPO : number\n    \n    TIPO : string\n    \n    TIPO : stringMayus\n    \n    TIPO : boolean\n    \n    TIPO : any\n    '
    
_lr_action_items = {'$end':([0,1,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,],[-2,0,-1,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,]),'console':([0,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[19,19,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'if':([0,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,181,182,191,210,212,217,219,234,241,243,254,256,261,262,265,],[20,20,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'while':([0,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[21,21,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'break':([0,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[22,22,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'continue':([0,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[23,23,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'for':([0,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[24,24,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'id':([0,2,3,7,8,15,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,51,53,55,59,61,62,63,80,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,148,175,181,182,190,191,193,196,197,201,202,207,210,212,213,217,219,222,241,243,245,251,254,256,259,261,262,265,],[25,25,-4,-8,-9,-16,56,57,78,88,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,78,78,-39,-40,78,78,78,-42,78,78,78,78,78,78,143,147,-41,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,194,78,25,25,143,25,-33,78,78,78,78,78,25,25,240,25,25,-31,25,25,-32,78,25,25,-30,25,25,25,]),'fn':([0,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[26,26,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'interface':([0,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[27,27,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'return':([0,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[28,28,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'let':([0,2,3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,48,59,103,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[29,29,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,29,-42,-41,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'llave_Cierra':([3,7,8,15,30,31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,103,148,181,193,210,212,219,222,243,245,256,259,261,265,],[-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-17,-49,-56,-39,-40,-42,-41,195,211,-33,232,235,244,-31,258,-32,263,-30,264,266,]),'puntoYcoma':([4,5,6,9,10,11,12,13,14,16,17,18,22,23,28,49,50,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,84,85,86,87,88,92,94,97,120,122,123,137,140,142,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,174,178,179,183,187,194,195,203,205,206,209,211,215,220,225,226,227,230,231,232,233,235,244,246,247,248,249,250,252,253,258,260,263,264,266,],[31,32,33,34,35,36,37,38,39,40,41,42,46,47,59,-59,-60,103,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,-113,-114,-115,-116,-117,-52,135,-26,-57,-72,-76,-110,-25,-58,-65,193,-66,-67,-68,-69,-70,-71,-74,-75,-77,-78,-79,-80,-81,-82,-83,-84,-73,-111,-50,-53,213,-64,222,-29,-109,-112,-102,-61,-48,-95,245,-97,-98,-99,-51,-55,-48,-45,-43,-19,259,-94,-96,-100,-101,-44,-46,-18,-54,-35,-47,-34,]),'punto':([19,25,78,],[43,52,124,]),'p_Abre':([20,21,24,25,28,44,45,51,53,55,56,61,62,63,78,79,80,81,82,83,84,85,86,87,89,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,166,167,168,169,170,171,172,175,196,197,201,202,207,251,],[44,45,48,51,62,62,62,62,62,62,101,62,62,62,51,125,62,128,129,-113,-114,-115,-116,-117,132,139,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,196,197,198,199,200,201,202,62,62,62,62,62,62,62,]),'incremento':([25,240,],[49,49,]),'decremento':([25,240,],[50,50,]),'igual':([25,54,83,84,85,86,87,88,142,179,187,231,240,],[53,98,-113,-114,-115,-116,-117,130,-65,207,-64,251,53,]),'c_Abre':([25,28,44,45,51,53,54,55,61,62,63,78,80,83,84,85,86,87,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,125,128,129,130,132,135,136,138,139,142,175,179,187,196,197,201,202,207,216,240,251,],[55,80,80,80,80,80,99,80,80,80,80,55,80,-113,-114,-115,-116,-117,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,99,80,80,80,80,80,80,80,80,80,-65,80,208,-64,80,80,80,80,80,242,55,80,]),'resta':([28,44,45,51,53,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,90,91,94,95,97,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,129,130,132,135,136,137,138,139,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,175,176,177,178,183,184,185,186,187,196,197,201,202,203,204,205,206,207,215,223,224,225,226,227,228,230,247,248,249,250,251,260,],[61,61,61,61,61,61,105,-24,61,61,61,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,61,105,105,-26,105,105,61,61,105,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-72,105,-76,-110,61,105,61,61,61,61,61,61,-25,61,61,105,105,-65,-66,-67,-68,-69,-70,-71,105,105,105,105,105,105,105,105,105,105,-73,105,-111,61,105,105,105,105,105,105,105,-64,61,61,61,61,-109,105,-112,-102,61,-95,105,105,-97,-98,-99,105,105,-94,-96,-100,-101,61,105,]),'not':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'cadena':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'numero':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'true':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'false':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'null':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'length':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'typeof':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'number':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,131,132,135,136,138,139,175,188,192,196,197,201,202,207,221,251,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'string':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,131,132,135,136,138,139,175,188,192,196,197,201,202,207,221,251,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'stringMayus':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,131,132,135,136,138,139,175,188,192,196,197,201,202,207,221,251,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'boolean':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,131,132,135,136,138,139,175,188,192,196,197,201,202,207,221,251,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'any':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,131,132,135,136,138,139,175,188,192,196,197,201,202,207,221,251,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'log':([43,],[89,]),'p_Cierra':([49,50,51,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,84,85,86,87,90,91,93,94,95,97,101,120,121,122,123,127,137,140,142,144,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,180,184,185,186,187,198,199,200,203,204,205,206,215,216,218,223,224,225,226,227,228,229,236,237,238,239,247,248,249,250,257,],[-59,-60,94,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,-113,-114,-115,-116,-117,133,134,137,-26,-27,-57,145,-72,165,-76,-110,-63,-25,-58,-65,189,-21,-66,-67,-68,-69,-70,-71,-74,-75,-77,-78,-79,-80,-81,-82,-83,-84,-73,203,-111,205,206,209,214,-28,215,-64,225,226,227,-109,-62,-112,-102,-95,-22,-20,247,248,-97,-98,-99,249,250,255,-36,-37,-38,-94,-96,-100,-101,-23,]),'push':([52,124,],[96,96,]),'llave_Abre':([57,133,134,145,189,214,234,255,],[102,181,182,191,217,241,254,262,]),'suma':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[104,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,104,104,-26,104,104,104,-72,104,-76,-110,104,-25,104,104,-65,-66,-67,-68,-69,-70,-71,104,104,104,104,104,104,104,104,104,104,-73,104,-111,104,104,104,104,104,104,104,-64,-109,104,-112,-102,-95,104,104,-97,-98,-99,104,104,-94,-96,-100,-101,104,]),'multiplicacion':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[106,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,106,106,-26,106,106,106,-72,106,-76,-110,106,-25,106,106,-65,106,106,-68,-69,-70,-71,106,106,106,106,106,106,106,106,106,106,-73,106,-111,106,106,106,106,106,106,106,-64,-109,106,-112,-102,-95,106,106,-97,-98,-99,106,106,-94,-96,-100,-101,106,]),'division':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[107,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,107,107,-26,107,107,107,-72,107,-76,-110,107,-25,107,107,-65,107,107,-68,-69,-70,-71,107,107,107,107,107,107,107,107,107,107,-73,107,-111,107,107,107,107,107,107,107,-64,-109,107,-112,-102,-95,107,107,-97,-98,-99,107,107,-94,-96,-100,-101,107,]),'potencia':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[108,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,108,108,-26,108,108,108,-72,108,-76,-110,108,-25,108,108,-65,108,108,108,108,-70,108,108,108,108,108,108,108,108,108,108,108,-73,108,-111,108,108,108,108,108,108,108,-64,-109,108,-112,-102,-95,108,108,-97,-98,-99,108,108,-94,-96,-100,-101,108,]),'modulo':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[109,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,109,109,-26,109,109,109,-72,109,-76,-110,109,-25,109,109,-65,109,109,-68,-69,-70,-71,109,109,109,109,109,109,109,109,109,109,-73,109,-111,109,109,109,109,109,109,109,-64,-109,109,-112,-102,-95,109,109,-97,-98,-99,109,109,-94,-96,-100,-101,109,]),'and':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[110,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,110,110,-26,110,110,110,-72,110,-76,-110,110,-25,110,110,-65,-66,-67,-68,-69,-70,-71,-74,110,-77,-78,-79,-80,-81,-82,-83,-84,-73,110,-111,110,110,110,110,110,110,110,-64,-109,110,-112,-102,-95,110,110,-97,-98,-99,110,110,-94,-96,-100,-101,110,]),'or':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[111,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,111,111,-26,111,111,111,-72,111,-76,-110,111,-25,111,111,-65,-66,-67,-68,-69,-70,-71,-74,-75,-77,-78,-79,-80,-81,-82,-83,-84,-73,111,-111,111,111,111,111,111,111,111,-64,-109,111,-112,-102,-95,111,111,-97,-98,-99,111,111,-94,-96,-100,-101,111,]),'mayor':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[112,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,112,112,-26,112,112,112,-72,112,-76,-110,112,-25,112,112,-65,-66,-67,-68,-69,-70,-71,112,112,-77,-78,-79,-80,-81,-82,-83,-84,-73,112,-111,112,112,112,112,112,112,112,-64,-109,112,-112,-102,-95,112,112,-97,-98,-99,112,112,-94,-96,-100,-101,112,]),'mayorigual':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[113,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,113,113,-26,113,113,113,-72,113,-76,-110,113,-25,113,113,-65,-66,-67,-68,-69,-70,-71,113,113,-77,-78,-79,-80,-81,-82,-83,-84,-73,113,-111,113,113,113,113,113,113,113,-64,-109,113,-112,-102,-95,113,113,-97,-98,-99,113,113,-94,-96,-100,-101,113,]),'menor':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[114,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,114,114,-26,114,114,114,-72,114,-76,-110,114,-25,114,114,-65,-66,-67,-68,-69,-70,-71,114,114,-77,-78,-79,-80,-81,-82,-83,-84,-73,114,-111,114,114,114,114,114,114,114,-64,-109,114,-112,-102,-95,114,114,-97,-98,-99,114,114,-94,-96,-100,-101,114,]),'menorigual':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[115,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,115,115,-26,115,115,115,-72,115,-76,-110,115,-25,115,115,-65,-66,-67,-68,-69,-70,-71,115,115,-77,-78,-79,-80,-81,-82,-83,-84,-73,115,-111,115,115,115,115,115,115,115,-64,-109,115,-112,-102,-95,115,115,-97,-98,-99,115,115,-94,-96,-100,-101,115,]),'igualacion':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[116,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,116,116,-26,116,116,116,-72,116,-76,-110,116,-25,116,116,-65,-66,-67,-68,-69,-70,-71,116,116,-77,-78,-79,-80,-81,-82,-83,-84,-73,116,-111,116,116,116,116,116,116,116,-64,-109,116,-112,-102,-95,116,116,-97,-98,-99,116,116,-94,-96,-100,-101,116,]),'diferente':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[117,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,117,117,-26,117,117,117,-72,117,-76,-110,117,-25,117,117,-65,-66,-67,-68,-69,-70,-71,117,117,-77,-78,-79,-80,-81,-82,-83,-84,-73,117,-111,117,117,117,117,117,117,117,-64,-109,117,-112,-102,-95,117,117,-97,-98,-99,117,117,-94,-96,-100,-101,117,]),'igualacionNormal':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[118,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,118,118,-26,118,118,118,-72,118,-76,-110,118,-25,118,118,-65,-66,-67,-68,-69,-70,-71,118,118,-77,-78,-79,-80,-81,-82,-83,-84,-73,118,-111,118,118,118,118,118,118,118,-64,-109,118,-112,-102,-95,118,118,-97,-98,-99,118,118,-94,-96,-100,-101,118,]),'diferenteNormal':([58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,91,94,95,97,100,120,121,122,123,127,137,140,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,176,177,178,183,184,185,186,187,203,204,205,206,215,223,224,225,226,227,228,230,247,248,249,250,260,],[119,-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,119,119,-26,119,119,119,-72,119,-76,-110,119,-25,119,119,-65,-66,-67,-68,-69,-70,-71,119,119,-77,-78,-79,-80,-81,-82,-83,-84,-73,119,-111,119,119,119,119,119,119,119,-64,-109,119,-112,-102,-95,119,119,-97,-98,-99,119,119,-94,-96,-100,-101,119,]),'coma':([60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,84,85,86,87,93,94,95,120,122,123,126,127,137,142,144,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,174,180,185,187,203,204,205,206,215,216,218,225,226,227,229,247,248,249,250,257,],[-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,-113,-114,-115,-116,-117,138,-26,-27,-72,-76,-110,175,-63,-25,-65,190,-21,-66,-67,-68,-69,-70,-71,-74,-75,-77,-78,-79,-80,-81,-82,-83,-84,-73,-111,175,-28,-64,-109,-62,-112,-102,-95,-22,-20,-97,-98,-99,175,-94,-96,-100,-101,-23,]),'c_Cierra':([60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,94,100,120,122,123,126,127,137,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,174,187,203,204,205,206,208,215,225,226,227,242,247,248,249,250,],[-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,-26,142,-72,-76,-110,174,-63,-25,187,-65,-66,-67,-68,-69,-70,-71,-74,-75,-77,-78,-79,-80,-81,-82,-83,-84,-73,-111,-64,-109,-62,-112,-102,231,-95,-97,-98,-99,257,-94,-96,-100,-101,]),'of':([60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,84,85,86,87,88,92,94,120,122,123,137,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,174,178,179,187,203,205,206,215,225,226,227,230,231,247,248,249,250,260,],[-24,-85,-86,-87,-88,-89,-90,-91,-92,-93,-103,-104,-105,-106,-107,-108,-113,-114,-115,-116,-117,-52,136,-26,-72,-76,-110,-25,-65,-66,-67,-68,-69,-70,-71,-74,-75,-77,-78,-79,-80,-81,-82,-83,-84,-73,-111,-50,-53,-64,-109,-112,-102,-95,-97,-98,-99,-51,-55,-94,-96,-100,-101,-54,]),'dosPuntos':([88,143,147,194,],[131,188,192,221,]),'toFixed':([124,],[166,]),'toExponential':([124,],[167,]),'toString':([124,],[168,]),'toLowerCase':([124,],[169,]),'toUpperCase':([124,],[170,]),'split':([124,],[171,]),'concat':([124,],[172,]),'else':([211,232,],[234,234,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'ENTRADAS':([0,181,182,191,217,241,254,262,],[2,210,212,219,243,256,261,265,]),'ENTRADA':([0,2,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[3,30,3,3,3,30,30,3,30,3,30,3,30,30,3,30,]),'IMPRIMIR':([0,2,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'IF':([0,2,181,182,191,210,212,217,219,234,241,243,254,256,261,262,265,],[5,5,5,5,5,5,5,5,5,253,5,5,5,5,5,5,5,]),'WHILE':([0,2,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BREAK':([0,2,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CONTINUE':([0,2,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FOR':([0,2,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INCREMENTO':([0,2,181,182,191,210,212,213,217,219,241,243,254,256,261,262,265,],[10,10,10,10,10,10,10,238,10,10,10,10,10,10,10,10,10,]),'DECREMENTO':([0,2,181,182,191,210,212,213,217,219,241,243,254,256,261,262,265,],[11,11,11,11,11,11,11,239,11,11,11,11,11,11,11,11,11,]),'FUNC':([0,2,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'STRUCT':([0,2,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LLAMADA_FUNCION':([0,2,28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,181,182,191,196,197,201,202,207,210,212,217,219,241,243,251,254,256,261,262,265,],[14,14,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,14,14,14,60,60,60,60,60,14,14,14,14,14,14,60,14,14,14,14,14,]),'RETURN':([0,2,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'FUNCION_PUSH':([0,2,28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,181,182,191,196,197,201,202,207,210,212,217,219,241,243,251,254,256,261,262,265,],[16,16,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,16,16,16,72,72,72,72,72,16,16,16,16,16,16,72,16,16,16,16,16,]),'DECLARACION':([0,2,48,181,182,191,210,212,217,219,241,243,254,256,261,262,265,],[17,17,92,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'ASIGNACION':([0,2,181,182,191,210,212,213,217,219,241,243,254,256,261,262,265,],[18,18,18,18,18,18,18,237,18,18,18,18,18,18,18,18,18,]),'LISTAINDICES':([25,78,240,],[54,123,54,]),'EXPRESION':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[58,90,91,95,97,100,120,121,122,127,140,141,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,173,176,177,178,127,183,184,185,186,204,223,224,228,127,230,260,]),'FUNCION_TOFIXED':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'FUNCION_TOEXPONENTIAL':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'FUNCION_TOSTRING':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FUNCION_TOLOWERCASE':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'FUNCION_TOUPPERCASE':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'FUNCION_SPLIT':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'FUNCION_CONCAT':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'FUNCION_TYPEOF':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,132,135,136,138,139,175,196,197,201,202,207,251,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'TIPO':([28,44,45,51,53,55,61,62,63,80,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,128,129,130,131,132,135,136,138,139,175,188,192,196,197,201,202,207,221,251,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,179,81,81,81,81,81,81,216,220,81,81,81,81,81,246,81,]),'PARAMETROS_LLAMA_FUNC':([51,],[93,]),'LISTAEXPRESIONES':([80,132,202,],[126,180,229,]),'PARAMETROS_DECLA_FUNC':([101,],[144,]),'PARAMETRO_DECLA_FUNC':([101,190,],[146,218,]),'LISTAATRIBUTOS':([102,],[148,]),'COMPLEMENTO_IF':([211,232,],[233,252,]),'FORITERADOR':([213,],[236,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> ENTRADAS','INICIO',1,'p_INICIO','parser.py',72),
  ('INICIO -> <empty>','INICIO',0,'p_INICIO','parser.py',73),
  ('ENTRADAS -> ENTRADAS ENTRADA','ENTRADAS',2,'p_ENTRADAS_PARTE_1','parser.py',82),
  ('ENTRADAS -> ENTRADA','ENTRADAS',1,'p_ENTRADAS_PARTE_2','parser.py',89),
  ('ENTRADA -> IMPRIMIR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',95),
  ('ENTRADA -> IF puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',96),
  ('ENTRADA -> WHILE puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',97),
  ('ENTRADA -> BREAK','ENTRADA',1,'p_ENTRADA','parser.py',98),
  ('ENTRADA -> CONTINUE','ENTRADA',1,'p_ENTRADA','parser.py',99),
  ('ENTRADA -> FOR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',100),
  ('ENTRADA -> INCREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',101),
  ('ENTRADA -> DECREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',102),
  ('ENTRADA -> FUNC puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',103),
  ('ENTRADA -> STRUCT puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',104),
  ('ENTRADA -> LLAMADA_FUNCION puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',105),
  ('ENTRADA -> RETURN','ENTRADA',1,'p_ENTRADA','parser.py',106),
  ('ENTRADA -> FUNCION_PUSH puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',107),
  ('FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',8,'p_FUNC_1','parser.py',125),
  ('FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',7,'p_FUNC_2','parser.py',132),
  ('PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',3,'p_PARAMETROS_DECLA_FUNC','parser.py',139),
  ('PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',1,'p_PARAMETROS_DECLA_FUNC','parser.py',140),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO','PARAMETRO_DECLA_FUNC',3,'p_PARAMETRO_DECLA_FUNC_1','parser.py',150),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra','PARAMETRO_DECLA_FUNC',5,'p_PARAMETRO_DECLA_FUNC_2','parser.py',156),
  ('EXPRESION -> LLAMADA_FUNCION','EXPRESION',1,'p_EXPRESION_LLAMA_FUNC','parser.py',165),
  ('LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra','LLAMADA_FUNCION',4,'p_LLAMADA_FUNCION_1','parser.py',172),
  ('LLAMADA_FUNCION -> id p_Abre p_Cierra','LLAMADA_FUNCION',3,'p_LLAMADA_FUNCION_2','parser.py',178),
  ('PARAMETROS_LLAMA_FUNC -> EXPRESION','PARAMETROS_LLAMA_FUNC',1,'p_PARAMETROS_LLAMA_FUNC','parser.py',184),
  ('PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION','PARAMETROS_LLAMA_FUNC',3,'p_PARAMETROS_LLAMA_FUNC','parser.py',185),
  ('STRUCT -> interface id llave_Abre LISTAATRIBUTOS llave_Cierra','STRUCT',5,'p_INTERFACE','parser.py',197),
  ('LISTAATRIBUTOS -> LISTAATRIBUTOS id dosPuntos TIPO puntoYcoma','LISTAATRIBUTOS',5,'p_LISTAATRIBUTOS','parser.py',203),
  ('LISTAATRIBUTOS -> LISTAATRIBUTOS id puntoYcoma','LISTAATRIBUTOS',3,'p_LISTAATRIBUTOS_NoTipado','parser.py',210),
  ('LISTAATRIBUTOS -> id dosPuntos TIPO puntoYcoma','LISTAATRIBUTOS',4,'p_LISTAATRIBUTOS_Extra','parser.py',217),
  ('LISTAATRIBUTOS -> id puntoYcoma','LISTAATRIBUTOS',2,'p_LISTAATRIBUTOS_Extra_NoTipado','parser.py',223),
  ('FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',11,'p_FOR','parser.py',230),
  ('FOR -> for p_Abre DECLARACION of EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',9,'p_FOR_Vector_Cadena','parser.py',236),
  ('FORITERADOR -> ASIGNACION','FORITERADOR',1,'p_FORITERADOR','parser.py',242),
  ('FORITERADOR -> INCREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',243),
  ('FORITERADOR -> DECREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',244),
  ('BREAK -> break puntoYcoma','BREAK',2,'p_BREAK','parser.py',251),
  ('CONTINUE -> continue puntoYcoma','CONTINUE',2,'p_CONTINUE','parser.py',257),
  ('RETURN -> return EXPRESION puntoYcoma','RETURN',3,'p_RETURN_1','parser.py',263),
  ('RETURN -> return puntoYcoma','RETURN',2,'p_RETURN_2','parser.py',269),
  ('WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','WHILE',7,'p_WHILE','parser.py',278),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF','IF',8,'p_IF_1','parser.py',285),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre llave_Cierra COMPLEMENTO_IF','IF',7,'p_IF_2','parser.py',291),
  ('COMPLEMENTO_IF -> else IF','COMPLEMENTO_IF',2,'p_COMPLEMENTO_IF','parser.py',297),
  ('COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra','COMPLEMENTO_IF',4,'p_COMPLEMENTO_IF','parser.py',298),
  ('COMPLEMENTO_IF -> <empty>','COMPLEMENTO_IF',0,'p_COMPLEMENTO_IF','parser.py',299),
  ('ENTRADA -> DECLARACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Declaracion','parser.py',312),
  ('DECLARACION -> let id igual EXPRESION','DECLARACION',4,'p_DECLARACION_NoTipada','parser.py',318),
  ('DECLARACION -> let id dosPuntos TIPO igual EXPRESION','DECLARACION',6,'p_DECLARACION_Tipada','parser.py',325),
  ('DECLARACION -> let id','DECLARACION',2,'p_DECLARACION_SinExpresion_SinTipado','parser.py',331),
  ('DECLARACION -> let id dosPuntos TIPO','DECLARACION',4,'p_DECLARACION_SinExpresion_Tipado','parser.py',337),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION','DECLARACION',8,'p_DECLARACION_Tipada_VECTOR','parser.py',343),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra','DECLARACION',6,'p_DECLARACION_SinExpresion_Tipado_VECTOR','parser.py',349),
  ('ENTRADA -> ASIGNACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Asignacion','parser.py',358),
  ('ASIGNACION -> id igual EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',364),
  ('ASIGNACION -> id LISTAINDICES igual EXPRESION','ASIGNACION',4,'p_ASIGNACION_VEC','parser.py',370),
  ('INCREMENTO -> id incremento','INCREMENTO',2,'p_INCREMENTO','parser.py',378),
  ('DECREMENTO -> id decremento','DECREMENTO',2,'p_DECREMENTO','parser.py',384),
  ('IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra','IMPRIMIR',6,'p_IMPRIMIR_1','parser.py',391),
  ('LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION','LISTAEXPRESIONES',3,'p_LISTAEXPRESIONES_1','parser.py',397),
  ('LISTAEXPRESIONES -> EXPRESION','LISTAEXPRESIONES',1,'p_LISTAEXPRESIONES_2','parser.py',404),
  ('LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra','LISTAINDICES',4,'p_LISTAEXPRESIONES_Indices','parser.py',410),
  ('LISTAINDICES -> c_Abre EXPRESION c_Cierra','LISTAINDICES',3,'p_LISTAEXPRESIONES_Indices_2','parser.py',417),
  ('EXPRESION -> EXPRESION suma EXPRESION','EXPRESION',3,'p_EXPRESION_suma','parser.py',425),
  ('EXPRESION -> EXPRESION resta EXPRESION','EXPRESION',3,'p_EXPRESION_resta','parser.py',432),
  ('EXPRESION -> EXPRESION multiplicacion EXPRESION','EXPRESION',3,'p_EXPRESION_multiplicacion','parser.py',439),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_EXPRESION_division','parser.py',446),
  ('EXPRESION -> EXPRESION potencia EXPRESION','EXPRESION',3,'p_EXPRESION_potencia','parser.py',453),
  ('EXPRESION -> EXPRESION modulo EXPRESION','EXPRESION',3,'p_EXPRESION_modulo','parser.py',460),
  ('EXPRESION -> resta EXPRESION','EXPRESION',2,'p_EXPRESION_negativo','parser.py',467),
  ('EXPRESION -> p_Abre EXPRESION p_Cierra','EXPRESION',3,'p_EXPRESION_Parentesis','parser.py',474),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_EXPRESION_and','parser.py',482),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_EXPRESION_or','parser.py',489),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_EXPRESION_not','parser.py',496),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_EXPRESION_mayor','parser.py',505),
  ('EXPRESION -> EXPRESION mayorigual EXPRESION','EXPRESION',3,'p_EXPRESION_mayorigual','parser.py',512),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_EXPRESION_menor','parser.py',519),
  ('EXPRESION -> EXPRESION menorigual EXPRESION','EXPRESION',3,'p_EXPRESION_menorigual','parser.py',526),
  ('EXPRESION -> EXPRESION igualacion EXPRESION','EXPRESION',3,'p_EXPRESION_igualacion','parser.py',533),
  ('EXPRESION -> EXPRESION diferente EXPRESION','EXPRESION',3,'p_EXPRESION_diferente','parser.py',540),
  ('EXPRESION -> EXPRESION igualacionNormal EXPRESION','EXPRESION',3,'p_EXPRESION_igualacionNormal','parser.py',547),
  ('EXPRESION -> EXPRESION diferenteNormal EXPRESION','EXPRESION',3,'p_EXPRESION_diferenteNormal','parser.py',554),
  ('EXPRESION -> FUNCION_TOFIXED','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',563),
  ('EXPRESION -> FUNCION_TOEXPONENTIAL','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',564),
  ('EXPRESION -> FUNCION_TOSTRING','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',565),
  ('EXPRESION -> FUNCION_TOLOWERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',566),
  ('EXPRESION -> FUNCION_TOUPPERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',567),
  ('EXPRESION -> FUNCION_SPLIT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',568),
  ('EXPRESION -> FUNCION_CONCAT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',569),
  ('EXPRESION -> FUNCION_TYPEOF','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',570),
  ('EXPRESION -> FUNCION_PUSH','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',571),
  ('FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra','FUNCION_TOFIXED',6,'p_FUNCION_TOFIXED','parser.py',577),
  ('FUNCION_PUSH -> id punto push p_Abre EXPRESION p_Cierra','FUNCION_PUSH',6,'p_FUNCION_PUSH','parser.py',584),
  ('FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra','FUNCION_TOEXPONENTIAL',6,'p_FUNCION_TOEXPONENTIAL','parser.py',591),
  ('FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra','FUNCION_TOSTRING',5,'p_FUNCION_TOSTRING','parser.py',598),
  ('FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra','FUNCION_TOLOWERCASE',5,'p_FUNCION_TOLOWERCASE','parser.py',605),
  ('FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra','FUNCION_TOUPPERCASE',5,'p_FUNCION_TOUPPERCASE','parser.py',612),
  ('FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra','FUNCION_SPLIT',6,'p_FUNCION_SPLIT','parser.py',619),
  ('FUNCION_CONCAT -> id punto concat p_Abre LISTAEXPRESIONES p_Cierra','FUNCION_CONCAT',6,'p_FUNCION_CONCAT','parser.py',626),
  ('FUNCION_TYPEOF -> typeof p_Abre EXPRESION p_Cierra','FUNCION_TYPEOF',4,'p_FUNCION_TYPEOF','parser.py',633),
  ('EXPRESION -> cadena','EXPRESION',1,'p_EXPRESION_cadena','parser.py',641),
  ('EXPRESION -> numero','EXPRESION',1,'p_EXPRESION_numero','parser.py',648),
  ('EXPRESION -> true','EXPRESION',1,'p_EXPRESION_booleano','parser.py',655),
  ('EXPRESION -> false','EXPRESION',1,'p_EXPRESION_booleano','parser.py',656),
  ('EXPRESION -> null','EXPRESION',1,'p_EXPRESION_null','parser.py',663),
  ('EXPRESION -> id','EXPRESION',1,'p_EXPRESION_Acceso','parser.py',670),
  ('EXPRESION -> length p_Abre EXPRESION p_Cierra','EXPRESION',4,'p_EXPRESION_Length','parser.py',677),
  ('EXPRESION -> id LISTAINDICES','EXPRESION',2,'p_EXPRESION_Acceso_Vector','parser.py',684),
  ('EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra','EXPRESION',3,'p_EXPRESION_Vector','parser.py',691),
  ('EXPRESION -> TIPO p_Abre EXPRESION p_Cierra','EXPRESION',4,'p_EXPRESION_Casteo','parser.py',698),
  ('TIPO -> number','TIPO',1,'p_TIPO_NUMBER','parser.py',706),
  ('TIPO -> string','TIPO',1,'p_TIPO_STRING','parser.py',712),
  ('TIPO -> stringMayus','TIPO',1,'p_TIPO_STRINGMayus','parser.py',718),
  ('TIPO -> boolean','TIPO',1,'p_TIPO_BOOLEAN','parser.py',724),
  ('TIPO -> any','TIPO',1,'p_TIPO_ANY','parser.py',730),
]
