
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandleftsumarestaleftmenormayormenorigualmayorigualigualacionigualacionNormaldiferentediferenteNormalleftmultiplicaciondivisionmoduloleftpotenciarightnotlefturestaleftp_Abreand any boolean break c_Abre c_Cierra cadena coma concat console continue decremento diferente diferenteNormal division dosPuntos else false fn for id if igual igualacion igualacionNormal incremento interface let llave_Abre llave_Cierra log mayor mayorigual menor menorigual modulo multiplicacion not null number numero of or p_Abre p_Cierra potencia punto puntoYcoma resta return split string stringMayus suma toExponential toFixed toLowerCase toString toUpperCase true typeof while\n    INICIO : ENTRADAS\n            | \n    \n    ENTRADAS : ENTRADAS ENTRADA\n    \n    ENTRADAS : ENTRADA\n    \n    ENTRADA : IMPRIMIR puntoYcoma\n            |   IF puntoYcoma\n            |   WHILE puntoYcoma\n            |   BREAK\n            |   CONTINUE\n            |   FOR puntoYcoma\n            |   INCREMENTO puntoYcoma\n            |   DECREMENTO puntoYcoma\n            |   FUNC puntoYcoma\n            |   STRUCT puntoYcoma\n            |   LLAMADA_FUNCION puntoYcoma\n            |   RETURN\n    \n   FUNC : fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra\n   \n    FUNC : fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    PARAMETROS_DECLA_FUNC : PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC\n                            | PARAMETRO_DECLA_FUNC\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO\n    \n    PARAMETRO_DECLA_FUNC : id dosPuntos TIPO c_Abre c_Cierra\n    \n    EXPRESION : LLAMADA_FUNCION\n    \n    LLAMADA_FUNCION : id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra\n    \n    LLAMADA_FUNCION : id p_Abre p_Cierra\n    \n    PARAMETROS_LLAMA_FUNC : EXPRESION\n                          | PARAMETROS_LLAMA_FUNC coma EXPRESION\n    \n    STRUCT : interface id llave_Abre LISTAATRIBUTOS llave_Cierra\n    \n    LISTAATRIBUTOS :  LISTAATRIBUTOS id dosPuntos TIPO puntoYcoma\n    \n    LISTAATRIBUTOS :  LISTAATRIBUTOS id puntoYcoma\n    \n    LISTAATRIBUTOS : id dosPuntos TIPO puntoYcoma\n    \n    LISTAATRIBUTOS : id puntoYcoma\n    \n    FOR : for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FOR : for p_Abre DECLARACION of EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    FORITERADOR : ASIGNACION\n                | INCREMENTO\n                | DECREMENTO\n    \n    BREAK : break puntoYcoma\n    \n    CONTINUE : continue puntoYcoma\n    \n    RETURN : return EXPRESION puntoYcoma\n    \n    RETURN : return puntoYcoma\n    \n    WHILE : while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF\n    \n    IF : if p_Abre EXPRESION p_Cierra llave_Abre llave_Cierra COMPLEMENTO_IF\n    \n    COMPLEMENTO_IF : else IF\n                    | else llave_Abre ENTRADAS llave_Cierra\n                    | \n    \n    ENTRADA : DECLARACION puntoYcoma\n    \n    DECLARACION : let id igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO igual EXPRESION\n    \n    DECLARACION : let id \n    \n    DECLARACION : let id dosPuntos TIPO\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION\n    \n    DECLARACION : let id dosPuntos TIPO c_Abre c_Cierra\n    \n    ENTRADA : ASIGNACION puntoYcoma\n    \n    ASIGNACION : id igual EXPRESION\n    \n    ASIGNACION : id LISTAINDICES igual EXPRESION\n    \n    INCREMENTO : id incremento \n    \n    DECREMENTO : id decremento\n    \n    IMPRIMIR : console punto log p_Abre LISTAEXPRESIONES p_Cierra\n    \n    LISTAEXPRESIONES :  LISTAEXPRESIONES coma EXPRESION\n    \n    LISTAEXPRESIONES : EXPRESION\n    \n    LISTAINDICES :  LISTAINDICES c_Abre EXPRESION c_Cierra\n    \n    LISTAINDICES : c_Abre EXPRESION c_Cierra\n    \n    EXPRESION : EXPRESION suma EXPRESION\n    \n    EXPRESION : EXPRESION resta EXPRESION\n    \n    EXPRESION : EXPRESION multiplicacion EXPRESION\n    \n    EXPRESION : EXPRESION division EXPRESION\n    \n    EXPRESION : EXPRESION potencia EXPRESION\n    \n    EXPRESION : EXPRESION modulo EXPRESION\n    \n    EXPRESION : resta EXPRESION %prec uresta\n    \n    EXPRESION : p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : EXPRESION and EXPRESION\n    \n    EXPRESION : EXPRESION or EXPRESION\n    \n    EXPRESION : not EXPRESION\n    \n    EXPRESION : EXPRESION mayor EXPRESION\n    \n    EXPRESION : EXPRESION mayorigual EXPRESION\n    \n    EXPRESION : EXPRESION menor EXPRESION\n    \n    EXPRESION : EXPRESION menorigual EXPRESION\n    \n    EXPRESION : EXPRESION igualacion EXPRESION\n    \n    EXPRESION : EXPRESION diferente EXPRESION\n    \n    EXPRESION : EXPRESION igualacionNormal EXPRESION\n    \n    EXPRESION : EXPRESION diferenteNormal EXPRESION\n    \n    EXPRESION : FUNCION_TOFIXED\n            | FUNCION_TOEXPONENTIAL\n            | FUNCION_TOSTRING\n            | FUNCION_TOLOWERCASE\n            | FUNCION_TOUPPERCASE\n            | FUNCION_SPLIT\n            | FUNCION_CONCAT\n            | FUNCION_TYPEOF\n    \n    FUNCION_TOFIXED : id punto toFixed p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOEXPONENTIAL : id punto toExponential p_Abre EXPRESION p_Cierra\n    \n    FUNCION_TOSTRING : id punto toString p_Abre p_Cierra\n    \n    FUNCION_TOLOWERCASE : id punto toLowerCase p_Abre p_Cierra\n    \n    FUNCION_TOUPPERCASE : id punto toUpperCase p_Abre p_Cierra\n    \n    FUNCION_SPLIT : id punto split p_Abre EXPRESION p_Cierra\n    \n    FUNCION_CONCAT : id punto concat p_Abre LISTAEXPRESIONES p_Cierra\n    \n    FUNCION_TYPEOF : typeof p_Abre EXPRESION p_Cierra\n    \n    EXPRESION : cadena\n    \n    EXPRESION : numero\n    \n    EXPRESION : true\n                | false\n    \n    EXPRESION : null\n    \n    EXPRESION : id\n    \n    EXPRESION : id LISTAINDICES\n    \n    EXPRESION : c_Abre LISTAEXPRESIONES c_Cierra\n    \n    EXPRESION : TIPO p_Abre EXPRESION p_Cierra\n    \n    TIPO : number\n    \n    TIPO : string\n    \n    TIPO : stringMayus\n    \n    TIPO : boolean\n    \n    TIPO : any\n    '
    
_lr_action_items = {'$end':([0,1,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,],[-2,0,-1,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,]),'console':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[18,18,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'if':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,172,173,181,199,201,205,207,222,229,231,242,244,249,250,253,],[19,19,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'while':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[20,20,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'break':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[21,21,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'continue':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[22,22,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'for':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[23,23,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'id':([0,2,3,7,8,15,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,49,50,52,56,58,59,60,75,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,140,166,172,173,180,181,183,186,187,191,192,196,199,201,202,205,207,210,229,231,233,239,242,244,247,249,250,253,],[24,24,-4,-8,-9,-16,53,54,74,83,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,74,74,-38,-39,74,74,74,-41,74,74,74,74,74,74,135,139,-40,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,184,74,24,24,135,24,-32,74,74,74,74,74,24,24,228,24,24,-30,24,24,-31,74,24,24,-29,24,24,24,]),'fn':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[25,25,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'interface':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[26,26,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'return':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[27,27,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'let':([0,2,3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,56,97,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[28,28,-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,28,-41,-40,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'llave_Cierra':([3,7,8,15,29,30,31,32,33,34,35,36,37,38,39,40,44,45,56,97,140,172,183,199,201,207,210,231,233,244,247,249,253,],[-4,-8,-9,-16,-3,-5,-6,-7,-10,-11,-12,-13,-14,-15,-48,-55,-38,-39,-41,-40,185,200,-32,220,223,232,-30,246,-31,251,-29,252,254,]),'puntoYcoma':([4,5,6,9,10,11,12,13,14,16,17,21,22,27,47,48,55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,87,89,91,114,116,117,130,132,134,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,169,170,174,177,184,185,194,195,198,200,208,213,214,215,218,219,220,221,223,232,234,235,236,237,238,240,241,246,248,251,252,254,],[30,31,32,33,34,35,36,37,38,39,40,44,45,56,-58,-59,97,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,-109,-110,-111,-112,-113,-51,128,-25,-56,-71,-75,-106,-24,-57,-64,183,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,-49,-52,202,-63,210,-28,-108,-99,-60,-47,233,-94,-95,-96,-50,-54,-47,-44,-42,-18,247,-92,-93,-97,-98,-43,-45,-17,-53,-34,-46,-33,]),'punto':([18,74,],[41,118,]),'p_Abre':([19,20,23,24,27,42,43,49,50,52,53,58,59,60,74,75,76,77,78,79,80,81,82,84,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,158,159,160,161,162,163,164,166,186,187,191,192,196,239,],[42,43,46,49,59,59,59,59,59,59,95,59,59,59,49,59,121,122,-109,-110,-111,-112,-113,125,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,186,187,188,189,190,191,192,59,59,59,59,59,59,59,]),'incremento':([24,228,],[47,47,]),'decremento':([24,228,],[48,48,]),'igual':([24,51,78,79,80,81,82,83,134,170,177,219,228,],[50,92,-109,-110,-111,-112,-113,123,-64,196,-63,239,50,]),'c_Abre':([24,27,42,43,49,50,51,52,58,59,60,74,75,78,79,80,81,82,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,121,122,123,125,128,129,131,134,166,170,177,186,187,191,192,196,204,228,239,],[52,75,75,75,75,75,93,75,75,75,75,52,75,-109,-110,-111,-112,-113,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,93,75,75,75,75,75,75,75,-64,75,197,-63,75,75,75,75,75,230,52,75,]),'resta':([27,42,43,49,50,52,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,89,90,91,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,128,129,130,131,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,166,167,168,169,174,175,176,177,186,187,191,192,193,194,195,196,211,212,213,214,215,216,218,235,236,237,238,239,248,],[58,58,58,58,58,58,99,-23,58,58,58,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,58,99,99,-25,99,99,58,58,99,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-71,99,-75,-106,99,58,58,58,58,58,58,-24,58,99,99,-64,-65,-66,-67,-68,-69,-70,99,99,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,58,99,99,99,99,99,99,-63,58,58,58,58,99,-108,-99,58,99,99,-94,-95,-96,99,99,-92,-93,-97,-98,58,99,]),'not':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'cadena':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'numero':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'true':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'false':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'null':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'typeof':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'number':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,124,125,128,129,131,166,178,182,186,187,191,192,196,209,239,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'string':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,124,125,128,129,131,166,178,182,186,187,191,192,196,209,239,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'stringMayus':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,124,125,128,129,131,166,178,182,186,187,191,192,196,209,239,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'boolean':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,124,125,128,129,131,166,178,182,186,187,191,192,196,209,239,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'any':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,124,125,128,129,131,166,178,182,186,187,191,192,196,209,239,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'log':([41,],[84,]),'p_Cierra':([47,48,49,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,85,86,88,89,90,91,95,114,115,116,117,120,130,132,134,136,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,171,175,176,177,188,189,190,193,194,195,204,206,211,212,213,214,215,216,217,224,225,226,227,235,236,237,238,245,],[-58,-59,89,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,-109,-110,-111,-112,-113,126,127,130,-25,-26,-56,137,-71,157,-75,-106,-62,-24,-57,-64,179,-20,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,194,195,198,203,-27,-63,213,214,215,-61,-108,-99,-21,-19,235,236,-94,-95,-96,237,238,243,-35,-36,-37,-92,-93,-97,-98,-22,]),'llave_Abre':([54,126,127,137,179,203,222,243,],[96,172,173,181,205,229,242,250,]),'suma':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[98,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,98,98,-25,98,98,98,-71,98,-75,-106,98,-24,98,98,-64,-65,-66,-67,-68,-69,-70,98,98,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,98,98,98,98,98,98,-63,98,-108,-99,98,98,-94,-95,-96,98,98,-92,-93,-97,-98,98,]),'multiplicacion':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[100,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,100,100,-25,100,100,100,-71,100,-75,-106,100,-24,100,100,-64,100,100,-67,-68,-69,-70,100,100,100,100,100,100,100,100,100,100,-72,-107,100,100,100,100,100,100,-63,100,-108,-99,100,100,-94,-95,-96,100,100,-92,-93,-97,-98,100,]),'division':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[101,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,101,101,-25,101,101,101,-71,101,-75,-106,101,-24,101,101,-64,101,101,-67,-68,-69,-70,101,101,101,101,101,101,101,101,101,101,-72,-107,101,101,101,101,101,101,-63,101,-108,-99,101,101,-94,-95,-96,101,101,-92,-93,-97,-98,101,]),'potencia':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[102,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,102,102,-25,102,102,102,-71,102,-75,-106,102,-24,102,102,-64,102,102,102,102,-69,102,102,102,102,102,102,102,102,102,102,102,-72,-107,102,102,102,102,102,102,-63,102,-108,-99,102,102,-94,-95,-96,102,102,-92,-93,-97,-98,102,]),'modulo':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[103,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,103,103,-25,103,103,103,-71,103,-75,-106,103,-24,103,103,-64,103,103,-67,-68,-69,-70,103,103,103,103,103,103,103,103,103,103,-72,-107,103,103,103,103,103,103,-63,103,-108,-99,103,103,-94,-95,-96,103,103,-92,-93,-97,-98,103,]),'and':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[104,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,104,104,-25,104,104,104,-71,104,-75,-106,104,-24,104,104,-64,-65,-66,-67,-68,-69,-70,-73,104,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,104,104,104,104,104,104,-63,104,-108,-99,104,104,-94,-95,-96,104,104,-92,-93,-97,-98,104,]),'or':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[105,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,105,105,-25,105,105,105,-71,105,-75,-106,105,-24,105,105,-64,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,105,105,105,105,105,105,-63,105,-108,-99,105,105,-94,-95,-96,105,105,-92,-93,-97,-98,105,]),'mayor':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[106,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,106,106,-25,106,106,106,-71,106,-75,-106,106,-24,106,106,-64,106,106,-67,-68,-69,-70,106,106,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,106,106,106,106,106,106,-63,106,-108,-99,106,106,-94,-95,-96,106,106,-92,-93,-97,-98,106,]),'mayorigual':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[107,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,107,107,-25,107,107,107,-71,107,-75,-106,107,-24,107,107,-64,107,107,-67,-68,-69,-70,107,107,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,107,107,107,107,107,107,-63,107,-108,-99,107,107,-94,-95,-96,107,107,-92,-93,-97,-98,107,]),'menor':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[108,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,108,108,-25,108,108,108,-71,108,-75,-106,108,-24,108,108,-64,108,108,-67,-68,-69,-70,108,108,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,108,108,108,108,108,108,-63,108,-108,-99,108,108,-94,-95,-96,108,108,-92,-93,-97,-98,108,]),'menorigual':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[109,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,109,109,-25,109,109,109,-71,109,-75,-106,109,-24,109,109,-64,109,109,-67,-68,-69,-70,109,109,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,109,109,109,109,109,109,-63,109,-108,-99,109,109,-94,-95,-96,109,109,-92,-93,-97,-98,109,]),'igualacion':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[110,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,110,110,-25,110,110,110,-71,110,-75,-106,110,-24,110,110,-64,110,110,-67,-68,-69,-70,110,110,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,110,110,110,110,110,110,-63,110,-108,-99,110,110,-94,-95,-96,110,110,-92,-93,-97,-98,110,]),'diferente':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[111,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,111,111,-25,111,111,111,-71,111,-75,-106,111,-24,111,111,-64,111,111,-67,-68,-69,-70,111,111,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,111,111,111,111,111,111,-63,111,-108,-99,111,111,-94,-95,-96,111,111,-92,-93,-97,-98,111,]),'igualacionNormal':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[112,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,112,112,-25,112,112,112,-71,112,-75,-106,112,-24,112,112,-64,112,112,-67,-68,-69,-70,112,112,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,112,112,112,112,112,112,-63,112,-108,-99,112,112,-94,-95,-96,112,112,-92,-93,-97,-98,112,]),'diferenteNormal':([55,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,85,86,89,90,91,94,114,115,116,117,120,130,132,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,167,168,169,174,175,176,177,193,194,195,211,212,213,214,215,216,218,235,236,237,238,248,],[113,-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,113,113,-25,113,113,113,-71,113,-75,-106,113,-24,113,113,-64,113,113,-67,-68,-69,-70,113,113,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,113,113,113,113,113,113,-63,113,-108,-99,113,113,-94,-95,-96,113,113,-92,-93,-97,-98,113,]),'coma':([57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,88,89,90,114,116,117,119,120,130,134,136,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,171,176,177,193,194,195,204,206,213,214,215,217,235,236,237,238,245,],[-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,-109,-110,-111,-112,-113,131,-25,-26,-71,-75,-106,166,-62,-24,-64,180,-20,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,166,-27,-63,-61,-108,-99,-21,-19,-94,-95,-96,166,-92,-93,-97,-98,-22,]),'c_Cierra':([57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,89,94,114,116,117,119,120,130,133,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,177,193,194,195,197,213,214,215,230,235,236,237,238,],[-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,-25,134,-71,-75,-106,165,-62,-24,177,-64,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,-63,-61,-108,-99,219,-94,-95,-96,245,-92,-93,-97,-98,]),'of':([57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,87,89,114,116,117,130,134,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,165,169,170,177,194,195,213,214,215,218,219,235,236,237,238,248,],[-23,-84,-85,-86,-87,-88,-89,-90,-91,-100,-101,-102,-103,-104,-105,-109,-110,-111,-112,-113,-51,129,-25,-71,-75,-106,-24,-64,-65,-66,-67,-68,-69,-70,-73,-74,-76,-77,-78,-79,-80,-81,-82,-83,-72,-107,-49,-52,-63,-108,-99,-94,-95,-96,-50,-54,-92,-93,-97,-98,-53,]),'dosPuntos':([83,135,139,184,],[124,178,182,209,]),'toFixed':([118,],[158,]),'toExponential':([118,],[159,]),'toString':([118,],[160,]),'toLowerCase':([118,],[161,]),'toUpperCase':([118,],[162,]),'split':([118,],[163,]),'concat':([118,],[164,]),'else':([200,220,],[222,222,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'ENTRADAS':([0,172,173,181,205,229,242,250,],[2,199,201,207,231,244,249,253,]),'ENTRADA':([0,2,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[3,29,3,3,3,29,29,3,29,3,29,3,29,29,3,29,]),'IMPRIMIR':([0,2,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'IF':([0,2,172,173,181,199,201,205,207,222,229,231,242,244,249,250,253,],[5,5,5,5,5,5,5,5,5,241,5,5,5,5,5,5,5,]),'WHILE':([0,2,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BREAK':([0,2,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CONTINUE':([0,2,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FOR':([0,2,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INCREMENTO':([0,2,172,173,181,199,201,202,205,207,229,231,242,244,249,250,253,],[10,10,10,10,10,10,10,226,10,10,10,10,10,10,10,10,10,]),'DECREMENTO':([0,2,172,173,181,199,201,202,205,207,229,231,242,244,249,250,253,],[11,11,11,11,11,11,11,227,11,11,11,11,11,11,11,11,11,]),'FUNC':([0,2,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'STRUCT':([0,2,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LLAMADA_FUNCION':([0,2,27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,172,173,181,186,187,191,192,196,199,201,205,207,229,231,239,242,244,249,250,253,],[14,14,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,14,14,14,57,57,57,57,57,14,14,14,14,14,14,57,14,14,14,14,14,]),'RETURN':([0,2,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'DECLARACION':([0,2,46,172,173,181,199,201,205,207,229,231,242,244,249,250,253,],[16,16,87,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'ASIGNACION':([0,2,172,173,181,199,201,202,205,207,229,231,242,244,249,250,253,],[17,17,17,17,17,17,17,225,17,17,17,17,17,17,17,17,17,]),'LISTAINDICES':([24,74,228,],[51,117,51,]),'EXPRESION':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[55,85,86,90,91,94,114,115,116,120,132,133,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,167,168,169,120,174,175,176,193,211,212,216,120,218,248,]),'FUNCION_TOFIXED':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FUNCION_TOEXPONENTIAL':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'FUNCION_TOSTRING':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'FUNCION_TOLOWERCASE':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'FUNCION_TOUPPERCASE':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'FUNCION_SPLIT':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FUNCION_CONCAT':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'FUNCION_TYPEOF':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,125,128,129,131,166,186,187,191,192,196,239,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'TIPO':([27,42,43,49,50,52,58,59,60,75,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,122,123,124,125,128,129,131,166,178,182,186,187,191,192,196,209,239,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,170,76,76,76,76,76,204,208,76,76,76,76,76,234,76,]),'PARAMETROS_LLAMA_FUNC':([49,],[88,]),'LISTAEXPRESIONES':([75,125,192,],[119,171,217,]),'PARAMETROS_DECLA_FUNC':([95,],[136,]),'PARAMETRO_DECLA_FUNC':([95,180,],[138,206,]),'LISTAATRIBUTOS':([96,],[140,]),'COMPLEMENTO_IF':([200,220,],[221,240,]),'FORITERADOR':([202,],[224,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> ENTRADAS','INICIO',1,'p_INICIO','parser.py',70),
  ('INICIO -> <empty>','INICIO',0,'p_INICIO','parser.py',71),
  ('ENTRADAS -> ENTRADAS ENTRADA','ENTRADAS',2,'p_ENTRADAS_PARTE_1','parser.py',80),
  ('ENTRADAS -> ENTRADA','ENTRADAS',1,'p_ENTRADAS_PARTE_2','parser.py',87),
  ('ENTRADA -> IMPRIMIR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',93),
  ('ENTRADA -> IF puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',94),
  ('ENTRADA -> WHILE puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',95),
  ('ENTRADA -> BREAK','ENTRADA',1,'p_ENTRADA','parser.py',96),
  ('ENTRADA -> CONTINUE','ENTRADA',1,'p_ENTRADA','parser.py',97),
  ('ENTRADA -> FOR puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',98),
  ('ENTRADA -> INCREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',99),
  ('ENTRADA -> DECREMENTO puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',100),
  ('ENTRADA -> FUNC puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',101),
  ('ENTRADA -> STRUCT puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',102),
  ('ENTRADA -> LLAMADA_FUNCION puntoYcoma','ENTRADA',2,'p_ENTRADA','parser.py',103),
  ('ENTRADA -> RETURN','ENTRADA',1,'p_ENTRADA','parser.py',104),
  ('FUNC -> fn id p_Abre PARAMETROS_DECLA_FUNC p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',8,'p_FUNC_1','parser.py',122),
  ('FUNC -> fn id p_Abre p_Cierra llave_Abre ENTRADAS llave_Cierra','FUNC',7,'p_FUNC_2','parser.py',129),
  ('PARAMETROS_DECLA_FUNC -> PARAMETROS_DECLA_FUNC coma PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',3,'p_PARAMETROS_DECLA_FUNC','parser.py',136),
  ('PARAMETROS_DECLA_FUNC -> PARAMETRO_DECLA_FUNC','PARAMETROS_DECLA_FUNC',1,'p_PARAMETROS_DECLA_FUNC','parser.py',137),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO','PARAMETRO_DECLA_FUNC',3,'p_PARAMETRO_DECLA_FUNC_1','parser.py',147),
  ('PARAMETRO_DECLA_FUNC -> id dosPuntos TIPO c_Abre c_Cierra','PARAMETRO_DECLA_FUNC',5,'p_PARAMETRO_DECLA_FUNC_2','parser.py',153),
  ('EXPRESION -> LLAMADA_FUNCION','EXPRESION',1,'p_EXPRESION_LLAMA_FUNC','parser.py',162),
  ('LLAMADA_FUNCION -> id p_Abre PARAMETROS_LLAMA_FUNC p_Cierra','LLAMADA_FUNCION',4,'p_LLAMADA_FUNCION_1','parser.py',169),
  ('LLAMADA_FUNCION -> id p_Abre p_Cierra','LLAMADA_FUNCION',3,'p_LLAMADA_FUNCION_2','parser.py',175),
  ('PARAMETROS_LLAMA_FUNC -> EXPRESION','PARAMETROS_LLAMA_FUNC',1,'p_PARAMETROS_LLAMA_FUNC','parser.py',181),
  ('PARAMETROS_LLAMA_FUNC -> PARAMETROS_LLAMA_FUNC coma EXPRESION','PARAMETROS_LLAMA_FUNC',3,'p_PARAMETROS_LLAMA_FUNC','parser.py',182),
  ('STRUCT -> interface id llave_Abre LISTAATRIBUTOS llave_Cierra','STRUCT',5,'p_INTERFACE','parser.py',194),
  ('LISTAATRIBUTOS -> LISTAATRIBUTOS id dosPuntos TIPO puntoYcoma','LISTAATRIBUTOS',5,'p_LISTAATRIBUTOS','parser.py',200),
  ('LISTAATRIBUTOS -> LISTAATRIBUTOS id puntoYcoma','LISTAATRIBUTOS',3,'p_LISTAATRIBUTOS_NoTipado','parser.py',207),
  ('LISTAATRIBUTOS -> id dosPuntos TIPO puntoYcoma','LISTAATRIBUTOS',4,'p_LISTAATRIBUTOS_Extra','parser.py',214),
  ('LISTAATRIBUTOS -> id puntoYcoma','LISTAATRIBUTOS',2,'p_LISTAATRIBUTOS_Extra_NoTipado','parser.py',220),
  ('FOR -> for p_Abre DECLARACION puntoYcoma EXPRESION puntoYcoma FORITERADOR p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',11,'p_FOR','parser.py',227),
  ('FOR -> for p_Abre DECLARACION of EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','FOR',9,'p_FOR_Vector_Cadena','parser.py',233),
  ('FORITERADOR -> ASIGNACION','FORITERADOR',1,'p_FORITERADOR','parser.py',239),
  ('FORITERADOR -> INCREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',240),
  ('FORITERADOR -> DECREMENTO','FORITERADOR',1,'p_FORITERADOR','parser.py',241),
  ('BREAK -> break puntoYcoma','BREAK',2,'p_BREAK','parser.py',248),
  ('CONTINUE -> continue puntoYcoma','CONTINUE',2,'p_CONTINUE','parser.py',254),
  ('RETURN -> return EXPRESION puntoYcoma','RETURN',3,'p_RETURN_1','parser.py',260),
  ('RETURN -> return puntoYcoma','RETURN',2,'p_RETURN_2','parser.py',266),
  ('WHILE -> while p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra','WHILE',7,'p_WHILE','parser.py',275),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre ENTRADAS llave_Cierra COMPLEMENTO_IF','IF',8,'p_IF_1','parser.py',282),
  ('IF -> if p_Abre EXPRESION p_Cierra llave_Abre llave_Cierra COMPLEMENTO_IF','IF',7,'p_IF_2','parser.py',288),
  ('COMPLEMENTO_IF -> else IF','COMPLEMENTO_IF',2,'p_COMPLEMENTO_IF','parser.py',294),
  ('COMPLEMENTO_IF -> else llave_Abre ENTRADAS llave_Cierra','COMPLEMENTO_IF',4,'p_COMPLEMENTO_IF','parser.py',295),
  ('COMPLEMENTO_IF -> <empty>','COMPLEMENTO_IF',0,'p_COMPLEMENTO_IF','parser.py',296),
  ('ENTRADA -> DECLARACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Declaracion','parser.py',309),
  ('DECLARACION -> let id igual EXPRESION','DECLARACION',4,'p_DECLARACION_NoTipada','parser.py',315),
  ('DECLARACION -> let id dosPuntos TIPO igual EXPRESION','DECLARACION',6,'p_DECLARACION_Tipada','parser.py',322),
  ('DECLARACION -> let id','DECLARACION',2,'p_DECLARACION_SinExpresion_SinTipado','parser.py',328),
  ('DECLARACION -> let id dosPuntos TIPO','DECLARACION',4,'p_DECLARACION_SinExpresion_Tipado','parser.py',334),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra igual EXPRESION','DECLARACION',8,'p_DECLARACION_Tipada_VECTOR','parser.py',340),
  ('DECLARACION -> let id dosPuntos TIPO c_Abre c_Cierra','DECLARACION',6,'p_DECLARACION_SinExpresion_Tipado_VECTOR','parser.py',346),
  ('ENTRADA -> ASIGNACION puntoYcoma','ENTRADA',2,'p_ENTRADA_Asignacion','parser.py',355),
  ('ASIGNACION -> id igual EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',361),
  ('ASIGNACION -> id LISTAINDICES igual EXPRESION','ASIGNACION',4,'p_ASIGNACION_VEC','parser.py',367),
  ('INCREMENTO -> id incremento','INCREMENTO',2,'p_INCREMENTO','parser.py',375),
  ('DECREMENTO -> id decremento','DECREMENTO',2,'p_DECREMENTO','parser.py',381),
  ('IMPRIMIR -> console punto log p_Abre LISTAEXPRESIONES p_Cierra','IMPRIMIR',6,'p_IMPRIMIR_1','parser.py',388),
  ('LISTAEXPRESIONES -> LISTAEXPRESIONES coma EXPRESION','LISTAEXPRESIONES',3,'p_LISTAEXPRESIONES_1','parser.py',394),
  ('LISTAEXPRESIONES -> EXPRESION','LISTAEXPRESIONES',1,'p_LISTAEXPRESIONES_2','parser.py',401),
  ('LISTAINDICES -> LISTAINDICES c_Abre EXPRESION c_Cierra','LISTAINDICES',4,'p_LISTAEXPRESIONES_Indices','parser.py',407),
  ('LISTAINDICES -> c_Abre EXPRESION c_Cierra','LISTAINDICES',3,'p_LISTAEXPRESIONES_Indices_2','parser.py',414),
  ('EXPRESION -> EXPRESION suma EXPRESION','EXPRESION',3,'p_EXPRESION_suma','parser.py',422),
  ('EXPRESION -> EXPRESION resta EXPRESION','EXPRESION',3,'p_EXPRESION_resta','parser.py',429),
  ('EXPRESION -> EXPRESION multiplicacion EXPRESION','EXPRESION',3,'p_EXPRESION_multiplicacion','parser.py',436),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_EXPRESION_division','parser.py',443),
  ('EXPRESION -> EXPRESION potencia EXPRESION','EXPRESION',3,'p_EXPRESION_potencia','parser.py',450),
  ('EXPRESION -> EXPRESION modulo EXPRESION','EXPRESION',3,'p_EXPRESION_modulo','parser.py',457),
  ('EXPRESION -> resta EXPRESION','EXPRESION',2,'p_EXPRESION_negativo','parser.py',464),
  ('EXPRESION -> p_Abre EXPRESION p_Cierra','EXPRESION',3,'p_EXPRESION_Parentesis','parser.py',471),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_EXPRESION_and','parser.py',479),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_EXPRESION_or','parser.py',486),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_EXPRESION_not','parser.py',493),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_EXPRESION_mayor','parser.py',502),
  ('EXPRESION -> EXPRESION mayorigual EXPRESION','EXPRESION',3,'p_EXPRESION_mayorigual','parser.py',509),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_EXPRESION_menor','parser.py',516),
  ('EXPRESION -> EXPRESION menorigual EXPRESION','EXPRESION',3,'p_EXPRESION_menorigual','parser.py',523),
  ('EXPRESION -> EXPRESION igualacion EXPRESION','EXPRESION',3,'p_EXPRESION_igualacion','parser.py',530),
  ('EXPRESION -> EXPRESION diferente EXPRESION','EXPRESION',3,'p_EXPRESION_diferente','parser.py',537),
  ('EXPRESION -> EXPRESION igualacionNormal EXPRESION','EXPRESION',3,'p_EXPRESION_igualacionNormal','parser.py',544),
  ('EXPRESION -> EXPRESION diferenteNormal EXPRESION','EXPRESION',3,'p_EXPRESION_diferenteNormal','parser.py',551),
  ('EXPRESION -> FUNCION_TOFIXED','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',560),
  ('EXPRESION -> FUNCION_TOEXPONENTIAL','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',561),
  ('EXPRESION -> FUNCION_TOSTRING','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',562),
  ('EXPRESION -> FUNCION_TOLOWERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',563),
  ('EXPRESION -> FUNCION_TOUPPERCASE','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',564),
  ('EXPRESION -> FUNCION_SPLIT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',565),
  ('EXPRESION -> FUNCION_CONCAT','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',566),
  ('EXPRESION -> FUNCION_TYPEOF','EXPRESION',1,'p_EXPRESION_funcionesnativas','parser.py',567),
  ('FUNCION_TOFIXED -> id punto toFixed p_Abre EXPRESION p_Cierra','FUNCION_TOFIXED',6,'p_FUNCION_TOFIXED','parser.py',573),
  ('FUNCION_TOEXPONENTIAL -> id punto toExponential p_Abre EXPRESION p_Cierra','FUNCION_TOEXPONENTIAL',6,'p_FUNCION_TOEXPONENTIAL','parser.py',580),
  ('FUNCION_TOSTRING -> id punto toString p_Abre p_Cierra','FUNCION_TOSTRING',5,'p_FUNCION_TOSTRING','parser.py',587),
  ('FUNCION_TOLOWERCASE -> id punto toLowerCase p_Abre p_Cierra','FUNCION_TOLOWERCASE',5,'p_FUNCION_TOLOWERCASE','parser.py',594),
  ('FUNCION_TOUPPERCASE -> id punto toUpperCase p_Abre p_Cierra','FUNCION_TOUPPERCASE',5,'p_FUNCION_TOUPPERCASE','parser.py',601),
  ('FUNCION_SPLIT -> id punto split p_Abre EXPRESION p_Cierra','FUNCION_SPLIT',6,'p_FUNCION_SPLIT','parser.py',608),
  ('FUNCION_CONCAT -> id punto concat p_Abre LISTAEXPRESIONES p_Cierra','FUNCION_CONCAT',6,'p_FUNCION_CONCAT','parser.py',615),
  ('FUNCION_TYPEOF -> typeof p_Abre EXPRESION p_Cierra','FUNCION_TYPEOF',4,'p_FUNCION_TYPEOF','parser.py',622),
  ('EXPRESION -> cadena','EXPRESION',1,'p_EXPRESION_cadena','parser.py',630),
  ('EXPRESION -> numero','EXPRESION',1,'p_EXPRESION_numero','parser.py',637),
  ('EXPRESION -> true','EXPRESION',1,'p_EXPRESION_booleano','parser.py',644),
  ('EXPRESION -> false','EXPRESION',1,'p_EXPRESION_booleano','parser.py',645),
  ('EXPRESION -> null','EXPRESION',1,'p_EXPRESION_null','parser.py',652),
  ('EXPRESION -> id','EXPRESION',1,'p_EXPRESION_Acceso','parser.py',659),
  ('EXPRESION -> id LISTAINDICES','EXPRESION',2,'p_EXPRESION_Acceso_Vector','parser.py',666),
  ('EXPRESION -> c_Abre LISTAEXPRESIONES c_Cierra','EXPRESION',3,'p_EXPRESION_Vector','parser.py',673),
  ('EXPRESION -> TIPO p_Abre EXPRESION p_Cierra','EXPRESION',4,'p_EXPRESION_Casteo','parser.py',680),
  ('TIPO -> number','TIPO',1,'p_TIPO_NUMBER','parser.py',688),
  ('TIPO -> string','TIPO',1,'p_TIPO_STRING','parser.py',694),
  ('TIPO -> stringMayus','TIPO',1,'p_TIPO_STRINGMayus','parser.py',700),
  ('TIPO -> boolean','TIPO',1,'p_TIPO_BOOLEAN','parser.py',706),
  ('TIPO -> any','TIPO',1,'p_TIPO_ANY','parser.py',712),
]
